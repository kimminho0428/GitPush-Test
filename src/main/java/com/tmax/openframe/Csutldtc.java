package com.tmax.openframe;

import static com.tmax.openframe.variable.group.CsutldtcFeedbackCode.CsutldtcFeedbackTokenValue.*;
import com.tmax.openframe.runtime.cobol.CobStringUtils;
import com.tmax.openframe.runtime.context.OpenFrameContext;
import com.tmax.openframe.runtime.flow.ControlManager;
import com.tmax.openframe.runtime.le.DateTimeCallableService;
import com.tmax.openframe.variable.CsutldtcVariableContainer;
import com.tmax.openframe.variable.group.CsutldtcWsMessage;
import java.math.*;
import java.util.*;
import java.util.function.Consumer;
import lombok.*;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Primary;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:20 KST</p>
 * <hr>
 * <p>Java class for defining logics of COBOL program</p>
 * <ul>
 * <li>The name of COBOL program: CSUTLDTC.cbl</li>
 * <li>Variable container class: {@link CsutldtcVariableContainer}</li>
 * </ul>
 */
@Service
@RequiredArgsConstructor
@Transactional
@Primary
public class Csutldtc {
    /** 
     * <p>Class that manages an execution flow of the program</p>
     */
    protected final ControlManager controlManager;
    Consumer<OpenFrameContext> unnamedSentence = this::unnamedSentence;
    Consumer<OpenFrameContext> a000Main = this::a000Main;
    Consumer<OpenFrameContext> a000MainExit = this::a000MainExit;
    /** 
     * <p>Execution flow of COBOL program that defined in the procedure division</p>
     */
    ArrayList<Consumer> methodList = new ArrayList<>();
    {
        methodList.add(unnamedSentence);
        methodList.add(a000Main);
        methodList.add(a000MainExit);
    }

    /** 
     * <p>Method for executing a program logic that defined in the procedure division</p>
     * @param generalContext context that is necessary for executing program
     * @return return value of program
     */
    public int run(Map<String, Object> generalContext, String lsDate,
            String lsDateFormat, String lsResult) {
        OpenFrameContext context = new OpenFrameContext(generalContext,
                methodList);
        if (context.getProgramVariableContainer("Csutldtc") == null) {
            CsutldtcVariableContainer container = new CsutldtcVariableContainer();
            context.setProgramVariableContainer("Csutldtc", container);
        }
        CsutldtcVariableContainer container = (CsutldtcVariableContainer) context
                .getProgramVariableContainer("Csutldtc");
        container.setLsDate(lsDate);
        container.setLsDateFormat(lsDateFormat);
        container.setLsResult(lsResult);
        controlManager.run(context);
        return context.getReturnValue();
    }

    // ******************************************************************
    // *****       CALL TO CEEDAYS                                *******
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************

    void unnamedSentence(OpenFrameContext context) {
        CsutldtcVariableContainer container = (CsutldtcVariableContainer) context
                .getProgramVariableContainer("Csutldtc");
        // [T-Up#INFO][CSUTLDTC.cbl:90] INITIALIZE statement
        container.setWsMessage(CsutldtcWsMessage.createDefaultValueInstance());
        // [T-Up#INFO][CSUTLDTC.cbl:91] MOVE statement
        container.getWsMessage().setWsDate(StringUtils.repeat(' ', 10));
        // [T-Up#INFO][CSUTLDTC.cbl:93] PERFORM statement
        controlManager.run(context, a000Main, a000MainExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // *    DISPLAY WS-MESSAGE
        // [T-Up#INFO][CSUTLDTC.cbl:97] MOVE statement
        container.setLsResult(container.getWsMessage().get());
        // [T-Up#INFO][CSUTLDTC.cbl:98] MOVE statement
        context.setReturnValue(container.getWsMessage().getWsSeverityN());
        // [T-Up#INFO][CSUTLDTC.cbl:100] EXIT_PROGRAM statement
        context.setReturnFlag(true);
        return;
    }

    // *    GOBACK

    /** 
     * <p>[T-Up#INFO][CSUTLDTC.cbl:103] A000-MAIN Paragraph</p>
     */
    void a000Main(OpenFrameContext context) {
        String[] tempStringArr1;
        int[] tempintArr1;
        CsutldtcVariableContainer container = (CsutldtcVariableContainer) context
                .getProgramVariableContainer("Csutldtc");
        // [T-Up#INFO][CSUTLDTC.cbl:105] MOVE statement
        container.getWsDateToTest().setVstringLength(10);
        // [T-Up#INFO][CSUTLDTC.cbl:107] MOVE statement
        container.getWsDateToTest().getVstringText().set(container.getLsDate());
        container.getWsMessage().setWsDate(container.getLsDate());
        // [T-Up#INFO][CSUTLDTC.cbl:109] MOVE statement
        container.getWsDateFormat().setVstringLength(10);
        // [T-Up#INFO][CSUTLDTC.cbl:111] MOVE statement
        container.getWsDateFormat().getVstringText()
                .set(container.getLsDateFormat());
        container.getWsMessage().setWsDateFmt(container.getLsDateFormat());
        // [T-Up#INFO][CSUTLDTC.cbl:114] MOVE statement
        container.setOutputLillian(0);
        // [T-Up#INFO][CSUTLDTC.cbl:116] CALL statement
        tempintArr1 = new int[1];
        tempStringArr1 = new String[1];
        DateTimeCallableService.ceedays(container.getWsDateToTest().get(),
                container.getWsDateFormat().get(), tempintArr1, tempStringArr1);
        container.setOutputLillian(tempintArr1[0]);
        container.getFeedbackCode().set(tempStringArr1[0]);
        // [T-Up#INFO][CSUTLDTC.cbl:122] MOVE statement
        container.getWsMessage().setWsDate(container.getWsDateToTest().get());
        // [T-Up#INFO][CSUTLDTC.cbl:123] MOVE statement
        container.getWsMessage().setWsSeverityN(
                container.getFeedbackCode().getFeedbackTokenValue()
                        .getCase1ConditionId().getSeverity());
        // [T-Up#INFO][CSUTLDTC.cbl:124] MOVE statement
        container.getWsMessage().setWsMsgNoN(
                container.getFeedbackCode().getFeedbackTokenValue()
                        .getCase1ConditionId().getMsgNo());
        // *    WS-RESULT IS 15 CHARACTERS
        // *                123456789012345'
        // [T-Up#INFO][CSUTLDTC.cbl:128] EVALUATE statement
        if (CobStringUtils.compare(container.getFeedbackCode()
                .getFeedbackTokenValue().get(), FC_INVALID_DATE) == 0) {
            // [T-Up#INFO][CSUTLDTC.cbl:130] MOVE statement
            container.getWsMessage().setWsResult("Date is valid");
        } else if (CobStringUtils.compare(container.getFeedbackCode()
                .getFeedbackTokenValue().get(), FC_INSUFFICIENT_DATA) == 0) {
            // [T-Up#INFO][CSUTLDTC.cbl:132] MOVE statement
            container.getWsMessage().setWsResult("Insufficient");
        } else if (CobStringUtils.compare(container.getFeedbackCode()
                .getFeedbackTokenValue().get(), FC_BAD_DATE_VALUE) == 0) {
            // [T-Up#INFO][CSUTLDTC.cbl:134] MOVE statement
            container.getWsMessage().setWsResult("Datevalue error");
        } else if (CobStringUtils.compare(container.getFeedbackCode()
                .getFeedbackTokenValue().get(), FC_INVALID_ERA) == 0) {
            // [T-Up#INFO][CSUTLDTC.cbl:136] MOVE statement
            container.getWsMessage().setWsResult("Invalid Era    ");
        } else if (CobStringUtils.compare(container.getFeedbackCode()
                .getFeedbackTokenValue().get(), FC_UNSUPP_RANGE) == 0) {
            // [T-Up#INFO][CSUTLDTC.cbl:138] MOVE statement
            container.getWsMessage().setWsResult("Unsupp. Range  ");
        } else if (CobStringUtils.compare(container.getFeedbackCode()
                .getFeedbackTokenValue().get(), FC_INVALID_MONTH) == 0) {
            // [T-Up#INFO][CSUTLDTC.cbl:140] MOVE statement
            container.getWsMessage().setWsResult("Invalid month  ");
        } else if (CobStringUtils.compare(container.getFeedbackCode()
                .getFeedbackTokenValue().get(), FC_BAD_PIC_STRING) == 0) {
            // [T-Up#INFO][CSUTLDTC.cbl:142] MOVE statement
            container.getWsMessage().setWsResult("Bad Pic String ");
        } else if (CobStringUtils.compare(container.getFeedbackCode()
                .getFeedbackTokenValue().get(), FC_NON_NUMERIC_DATA) == 0) {
            // [T-Up#INFO][CSUTLDTC.cbl:144] MOVE statement
            container.getWsMessage().setWsResult("Nonnumeric data");
        } else if (CobStringUtils.compare(container.getFeedbackCode()
                .getFeedbackTokenValue().get(), FC_YEAR_IN_ERA_ZERO) == 0) {
            // [T-Up#INFO][CSUTLDTC.cbl:146] MOVE statement
            container.getWsMessage().setWsResult("YearInEra is 0 ");
        } else {
            // [T-Up#INFO][CSUTLDTC.cbl:148] MOVE statement
            container.getWsMessage().setWsResult("Date is invalid");
        }
    }

    /** 
     * <p>[T-Up#INFO][CSUTLDTC.cbl:152] A000-MAIN-EXIT Paragraph</p>
     */
    void a000MainExit(OpenFrameContext context) {
        // [T-Up#INFO][CSUTLDTC.cbl:153] EXIT statement
    }

    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:12:35 CDT
    // *
}
