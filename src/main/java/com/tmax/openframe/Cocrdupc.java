package com.tmax.openframe;

import com.tmax.openframe.online.handle.service.AbendHandler;
import com.tmax.openframe.online.task.service.ProgramControl;
import com.tmax.openframe.dto.CocrdlicInputDto;
import com.tmax.openframe.mapper.CocrdupcMapperInterface.*;
import com.tmax.openframe.dto.Comen01cInputDto;
import com.tmax.openframe.online.task.service.OtherUserTaskInvoker;
import com.tmax.openframe.online.task.domain.dto.TaskDto.*;
import com.tmax.openframe.online.task.domain.dto.Data;
import com.tmax.openframe.online.task.service.Task;
import com.tmax.openframe.dto.CocrdupcInputDto;
import com.tmax.openframe.online.exception.ConditionException;
import com.tmax.openframe.dto.CocrdupcOutputDto;
import com.tmax.openframe.dto.AwsM2CarddemoCarddataVsamKsdsDto;
import com.tmax.openframe.online.daoexecutor.service.ReadPointManager;
import com.tmax.openframe.online.daoexecutor.service.RecordKeyAccessor;
import com.tmax.openframe.online.exception.OnlineException;
import com.tmax.openframe.online.exception.AbendException;
import static com.tmax.openframe.variable.group.CarddemoCommarea.CdemoGeneralInfo.*;
import static com.tmax.openframe.variable.group.CcWorkAreas.CcWorkArea.*;
import static com.tmax.openframe.variable.group.CocrdupcWsMiscStorage.*;
import static com.tmax.openframe.variable.group.CocrdupcWsThisProgcommarea.CocrdupcCardUpdateScreenData.*;
import com.tmax.openframe.runtime.cobol.CobStream;
import com.tmax.openframe.runtime.cobol.CobStringUtils;
import com.tmax.openframe.runtime.cobol.IntrinsicFunction;
import com.tmax.openframe.runtime.cobol.PictureFormatter;
import com.tmax.openframe.runtime.context.OpenFrameContext;
import com.tmax.openframe.runtime.flow.ControlManager;
import com.tmax.openframe.variable.CocrdupcVariableContainer;
import com.tmax.openframe.variable.group.CarddemoCommarea;
import com.tmax.openframe.variable.group.CcWorkAreas;
import com.tmax.openframe.variable.group.Ccrdupai;
import com.tmax.openframe.variable.group.CocrdupcWsMiscStorage;
import com.tmax.openframe.variable.group.CocrdupcWsThisProgcommarea;
import java.math.*;
import java.util.*;
import java.util.function.Consumer;
import lombok.*;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Primary;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:16 KST</p>
 * <hr>
 * <p>Java class for defining logics of COBOL program</p>
 * <ul>
 * <li>The name of COBOL program: COCRDUPC.cbl</li>
 * <li>Variable container class: {@link CocrdupcVariableContainer}</li>
 * </ul>
 */
@Service
@RequiredArgsConstructor
@Transactional
@Primary
public class Cocrdupc {
    /** 
     * <p>Class that manages an execution flow of the program</p>
     */
    protected final ControlManager controlManager;
    Consumer<OpenFrameContext> _0000Main = this::_0000Main;
    Consumer<OpenFrameContext> commonReturn = this::commonReturn;
    Consumer<OpenFrameContext> _0000MainExit = this::_0000MainExit;
    Consumer<OpenFrameContext> _1000ProcessInputs = this::_1000ProcessInputs;
    Consumer<OpenFrameContext> _1000ProcessInputsExit = this::_1000ProcessInputsExit;
    Consumer<OpenFrameContext> _1100ReceiveMap = this::_1100ReceiveMap;
    Consumer<OpenFrameContext> _1100ReceiveMapExit = this::_1100ReceiveMapExit;
    Consumer<OpenFrameContext> _1200EditMapInputs = this::_1200EditMapInputs;
    Consumer<OpenFrameContext> _1200EditMapInputsExit = this::_1200EditMapInputsExit;
    Consumer<OpenFrameContext> _1210EditAccount = this::_1210EditAccount;
    Consumer<OpenFrameContext> _1210EditAccountExit = this::_1210EditAccountExit;
    Consumer<OpenFrameContext> _1220EditCard = this::_1220EditCard;
    Consumer<OpenFrameContext> _1220EditCardExit = this::_1220EditCardExit;
    Consumer<OpenFrameContext> _1230EditName = this::_1230EditName;
    Consumer<OpenFrameContext> _1230EditNameExit = this::_1230EditNameExit;
    Consumer<OpenFrameContext> _1240EditCardstatus = this::_1240EditCardstatus;
    Consumer<OpenFrameContext> _1240EditCardstatusExit = this::_1240EditCardstatusExit;
    Consumer<OpenFrameContext> _1250EditExpiryMon = this::_1250EditExpiryMon;
    Consumer<OpenFrameContext> _1250EditExpiryMonExit = this::_1250EditExpiryMonExit;
    Consumer<OpenFrameContext> _1260EditExpiryYear = this::_1260EditExpiryYear;
    Consumer<OpenFrameContext> _1260EditExpiryYearExit = this::_1260EditExpiryYearExit;
    Consumer<OpenFrameContext> _2000DecideAction = this::_2000DecideAction;
    Consumer<OpenFrameContext> _2000DecideActionExit = this::_2000DecideActionExit;
    Consumer<OpenFrameContext> _3000SendMap = this::_3000SendMap;
    Consumer<OpenFrameContext> _3000SendMapExit = this::_3000SendMapExit;
    Consumer<OpenFrameContext> _3100ScreenInit = this::_3100ScreenInit;
    Consumer<OpenFrameContext> _3100ScreenInitExit = this::_3100ScreenInitExit;
    Consumer<OpenFrameContext> _3200SetupScreenVars = this::_3200SetupScreenVars;
    Consumer<OpenFrameContext> _3200SetupScreenVarsExit = this::_3200SetupScreenVarsExit;
    Consumer<OpenFrameContext> _3250SetupInfomsg = this::_3250SetupInfomsg;
    Consumer<OpenFrameContext> _3250SetupInfomsgExit = this::_3250SetupInfomsgExit;
    Consumer<OpenFrameContext> _3300SetupScreenAttrs = this::_3300SetupScreenAttrs;
    Consumer<OpenFrameContext> _3300SetupScreenAttrsExit = this::_3300SetupScreenAttrsExit;
    Consumer<OpenFrameContext> _3400SendScreen = this::_3400SendScreen;
    Consumer<OpenFrameContext> _3400SendScreenExit = this::_3400SendScreenExit;
    Consumer<OpenFrameContext> _9000ReadData = this::_9000ReadData;
    Consumer<OpenFrameContext> _9000ReadDataExit = this::_9000ReadDataExit;
    Consumer<OpenFrameContext> _9100GetcardByacctcard = this::_9100GetcardByacctcard;
    Consumer<OpenFrameContext> _9100GetcardByacctcardExit = this::_9100GetcardByacctcardExit;
    Consumer<OpenFrameContext> _9200WriteProcessing = this::_9200WriteProcessing;
    Consumer<OpenFrameContext> _9200WriteProcessingExit = this::_9200WriteProcessingExit;
    Consumer<OpenFrameContext> _9300CheckChangeInRec = this::_9300CheckChangeInRec;
    Consumer<OpenFrameContext> _9300CheckChangeInRecExit = this::_9300CheckChangeInRecExit;
    Consumer<OpenFrameContext> yyyyStorePfkey = this::yyyyStorePfkey;
    Consumer<OpenFrameContext> yyyyStorePfkeyExit = this::yyyyStorePfkeyExit;
    Consumer<OpenFrameContext> abendRoutine = this::abendRoutine;
    Consumer<OpenFrameContext> abendRoutineExit = this::abendRoutineExit;
    /** 
     * <p>Execution flow of COBOL program that defined in the procedure division</p>
     */
    ArrayList<Consumer> methodList = new ArrayList<>();
    {
        methodList.add(_0000Main);
        methodList.add(commonReturn);
        methodList.add(_0000MainExit);
        methodList.add(_1000ProcessInputs);
        methodList.add(_1000ProcessInputsExit);
        methodList.add(_1100ReceiveMap);
        methodList.add(_1100ReceiveMapExit);
        methodList.add(_1200EditMapInputs);
        methodList.add(_1200EditMapInputsExit);
        methodList.add(_1210EditAccount);
        methodList.add(_1210EditAccountExit);
        methodList.add(_1220EditCard);
        methodList.add(_1220EditCardExit);
        methodList.add(_1230EditName);
        methodList.add(_1230EditNameExit);
        methodList.add(_1240EditCardstatus);
        methodList.add(_1240EditCardstatusExit);
        methodList.add(_1250EditExpiryMon);
        methodList.add(_1250EditExpiryMonExit);
        methodList.add(_1260EditExpiryYear);
        methodList.add(_1260EditExpiryYearExit);
        methodList.add(_2000DecideAction);
        methodList.add(_2000DecideActionExit);
        methodList.add(_3000SendMap);
        methodList.add(_3000SendMapExit);
        methodList.add(_3100ScreenInit);
        methodList.add(_3100ScreenInitExit);
        methodList.add(_3200SetupScreenVars);
        methodList.add(_3200SetupScreenVarsExit);
        methodList.add(_3250SetupInfomsg);
        methodList.add(_3250SetupInfomsgExit);
        methodList.add(_3300SetupScreenAttrs);
        methodList.add(_3300SetupScreenAttrsExit);
        methodList.add(_3400SendScreen);
        methodList.add(_3400SendScreenExit);
        methodList.add(_9000ReadData);
        methodList.add(_9000ReadDataExit);
        methodList.add(_9100GetcardByacctcard);
        methodList.add(_9100GetcardByacctcardExit);
        methodList.add(_9200WriteProcessing);
        methodList.add(_9200WriteProcessingExit);
        methodList.add(_9300CheckChangeInRec);
        methodList.add(_9300CheckChangeInRecExit);
        methodList.add(yyyyStorePfkey);
        methodList.add(yyyyStorePfkeyExit);
        methodList.add(abendRoutine);
        methodList.add(abendRoutineExit);
    }
    private final ReadPointManager readPointManager;
    private final RecordKeyAccessor recordKeyAccessor;
    private final Task task;
    private final TaskInvoker taskInvoker;
    private final ProgramControl programControl;
    private final AbendHandler abendHandler;

    /** 
     * <p>Method for executing a program logic that defined in the procedure division</p>
     * @param generalContext context that is necessary for executing program
     * @return return value of program
     */
    public int run(Map<String, Object> generalContext) {
        OpenFrameContext context = new OpenFrameContext(generalContext,
                methodList);
        if (context.getProgramVariableContainer("Cocrdupc") == null) {
            CocrdupcVariableContainer container = new CocrdupcVariableContainer();
            context.setProgramVariableContainer("Cocrdupc", container);
        }
        controlManager.run(context);
        return context.getReturnValue();
    }

    // *****************************************************************
    // * Program:     COCRDUPC.CBL                                     *
    // * Layer:       Business logic                                   *
    // * Function:    Accept and process credit card detail request    *
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // *      OCCURS 1 TO 32767 TIMES DEPENDING ON EIBCALEN.

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:367] 0000-MAIN Paragraph</p>
     */
    void _0000Main(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl:370] EXEC_CICS statement
        /*
                       EXEC CICS HANDLE ABEND
                                 LABEL(ABEND-ROUTINE)
                       END-EXEC
         */
        abendHandler.setLabel(abendRoutine);
        // [T-Up#INFO][COCRDUPC.cbl:374] INITIALIZE statement
        container.getCcWorkAreas().setCcWorkArea(
                CcWorkAreas.CcWorkArea.createDefaultValueInstance());
        container.setWsMiscStorage(CocrdupcWsMiscStorage
                .createDefaultValueInstance());
        container.setWsCommarea(StringUtils.repeat(' ', 2000));
        // [T-Up#INFO][COCRDUPC.cbl:378] MOVE statement
        container.getCcWorkAreas().getCcWorkArea().setCcAcctIdN((long) 0);
        // [T-Up#INFO][COCRDUPC.cbl:379] MOVE statement
        container.getCcWorkAreas().getCcWorkArea().setCcCardNumN((long) 0);
        // *****************************************************************
        // * Store our context
        // *****************************************************************
        // [T-Up#INFO][COCRDUPC.cbl:383] MOVE statement
        container.getWsMiscStorage().getWsCicsProcessngVars()
                .setWsTranid(container.getWsLiterals().getLitThistranid());
        // *****************************************************************
        // * Ensure error message is cleared                               *
        // *****************************************************************
        // [T-Up#INFO][COCRDUPC.cbl:387] SET statement
        container.getWsMiscStorage().setWsReturnMsg(WS_RETURN_MSG_OFF);
        // *****************************************************************
        // * Store passed data if  any                *
        // *****************************************************************
        // [T-Up#INFO][COCRDUPC.cbl:391] IF statement
        if (task.hasCommarea() == 0
                || CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoGeneralInfo().getCdemoFromProgram(), container
                        .getWsLiterals().getLitMenupgm()) == 0
                && !(container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER)) {
            // [T-Up#INFO][COCRDUPC.cbl:394] INITIALIZE statement
            container.setCarddemoCommarea(CarddemoCommarea
                    .createDefaultValueInstance());
            container.setWsThisProgcommarea(CocrdupcWsThisProgcommarea
                    .createDefaultValueInstance());
            // [T-Up#INFO][COCRDUPC.cbl:396] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(CDEMO_PGM_ENTER);
            // [T-Up#INFO][COCRDUPC.cbl:397] SET statement
            container.getWsThisProgcommarea().getCardUpdateScreenData()
                    .setCcupChangeAction(CCUP_DETAILS_NOT_FETCHED_1);
        } else {
            // [T-Up#INFO][COCRDUPC.cbl:399] MOVE statement
            container.getCarddemoCommarea().set(
                    container.getDfhcommarea().get().substring(0, 160));
            // [T-Up#INFO][COCRDUPC.cbl:401] MOVE statement
            container.getWsThisProgcommarea().set(
                    container.getDfhcommarea().get().substring(160, 489));
        }
        // *****************************************************************
        // * Remap PFkeys as needed.
        // * Store the Mapped PF Key
        // *****************************************************************
        // [T-Up#INFO][COCRDUPC.cbl:410] PERFORM statement
        controlManager.run(context, yyyyStorePfkey, yyyyStorePfkeyExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // *****************************************************************
        // * Check the AID to see if its valid at this point               *
        // * F3 - Exit
        // * Enter show screen again
        // *****************************************************************
        // [T-Up#INFO][COCRDUPC.cbl:417] SET statement
        container.getWsMiscStorage().setWsPfkFlag(PFK_INVALID);
        // [T-Up#INFO][COCRDUPC.cbl:418] IF statement
        if (CobStringUtils.compare(container.getCcWorkAreas().getCcWorkArea()
                .getCcardAid(), CCARD_AID_ENTER) == 0
                || CobStringUtils.compare(container.getCcWorkAreas()
                        .getCcWorkArea().getCcardAid(), CCARD_AID_PFK03) == 0
                || CobStringUtils.compare(container.getCcWorkAreas()
                        .getCcWorkArea().getCcardAid(), CCARD_AID_PFK05) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_OK_NOT_CONFIRMED) == 0
                || CobStringUtils.compare(container.getCcWorkAreas()
                        .getCcWorkArea().getCcardAid(), CCARD_AID_PFK12) == 0
                && !(CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_DETAILS_NOT_FETCHED_1) == 0 || CobStringUtils
                        .compare(container.getWsThisProgcommarea()
                                .getCardUpdateScreenData()
                                .getCcupChangeAction(),
                                CCUP_DETAILS_NOT_FETCHED_2) == 0)) {
            // [T-Up#INFO][COCRDUPC.cbl:423] SET statement
            container.getWsMiscStorage().setWsPfkFlag(PFK_VALID);
        }
        // [T-Up#INFO][COCRDUPC.cbl:426] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage().getWsPfkFlag(),
                PFK_INVALID) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:427] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_ENTER);
        }
        // *****************************************************************
        // * Decide what to do based on inputs received
        // *****************************************************************
        // [T-Up#INFO][COCRDUPC.cbl:433] EVALUATE statement
        if ((CobStringUtils.compare(container.getCcWorkAreas().getCcWorkArea()
                .getCcardAid(), CCARD_AID_PFK03) == 0)
                || (CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_OKAYED_AND_DONE) == 0 && CobStringUtils
                        .compare(container.getCarddemoCommarea()
                                .getCdemoMoreInfo().getCdemoLastMapset(),
                                container.getWsLiterals().getLitCclistmapset()) == 0)
                || ((CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_FAILED_1) == 0 || CobStringUtils.compare(
                        container.getWsThisProgcommarea()
                                .getCardUpdateScreenData()
                                .getCcupChangeAction(), CCUP_CHANGES_FAILED_2) == 0) && CobStringUtils
                        .compare(container.getCarddemoCommarea()
                                .getCdemoMoreInfo().getCdemoLastMapset(),
                                container.getWsLiterals().getLitCclistmapset()) == 0)) {
            // ******************************************************************
            // *       USER PRESSES PF03 TO EXIT
            // *  OR   USER IS DONE WITH UPDATE
            // *            XCTL TO CALLING PROGRAM OR MAIN MENU
            // ******************************************************************
            // [T-Up#INFO][COCRDUPC.cbl:444] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK03);
            // [T-Up#INFO][COCRDUPC.cbl:446] IF statement
            if (CobStringUtils.compare(container.getCarddemoCommarea()
                    .getCdemoGeneralInfo().getCdemoFromTranid(),
                    StringUtils.repeat((char) 0x00, 4)) == 0
                    || CobStringUtils.compare(container.getCarddemoCommarea()
                            .getCdemoGeneralInfo().getCdemoFromTranid(),
                            StringUtils.repeat(' ', 4)) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:448] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoToTranid(
                                container.getWsLiterals().getLitMenutranid());
            } else {
                // [T-Up#INFO][COCRDUPC.cbl:450] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoToTranid(
                                container.getCarddemoCommarea()
                                        .getCdemoGeneralInfo()
                                        .getCdemoFromTranid());
            }
            // [T-Up#INFO][COCRDUPC.cbl:453] IF statement
            if (CobStringUtils.compare(container.getCarddemoCommarea()
                    .getCdemoGeneralInfo().getCdemoFromProgram(),
                    StringUtils.repeat((char) 0x00, 8)) == 0
                    || CobStringUtils.compare(container.getCarddemoCommarea()
                            .getCdemoGeneralInfo().getCdemoFromProgram(),
                            StringUtils.repeat(' ', 8)) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:455] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoToProgram(
                                container.getWsLiterals().getLitMenupgm());
            } else {
                // [T-Up#INFO][COCRDUPC.cbl:457] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoToProgram(
                                container.getCarddemoCommarea()
                                        .getCdemoGeneralInfo()
                                        .getCdemoFromProgram());
            }
            // [T-Up#INFO][COCRDUPC.cbl:460] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromTranid(
                            container.getWsLiterals().getLitThistranid());
            // [T-Up#INFO][COCRDUPC.cbl:461] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromProgram(
                            container.getWsLiterals().getLitThispgm());
            // [T-Up#INFO][COCRDUPC.cbl:463] IF statement
            if (CobStringUtils.compare(container.getCarddemoCommarea()
                    .getCdemoMoreInfo().getCdemoLastMapset(), container
                    .getWsLiterals().getLitCclistmapset()) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:464] MOVE statement
                container.getCarddemoCommarea().getCdemoAccountInfo()
                        .setCdemoAcctId((long) 0);
                container.getCarddemoCommarea().getCdemoCardInfo()
                        .setCdemoCardNum((long) 0);
            }
            // [T-Up#INFO][COCRDUPC.cbl:468] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoUserType(CDEMO_USRTYP_USER);
            // [T-Up#INFO][COCRDUPC.cbl:469] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(CDEMO_PGM_ENTER);
            // [T-Up#INFO][COCRDUPC.cbl:470] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoMoreInfo()
                    .setCdemoLastMapset(
                            container.getWsLiterals().getLitThismapset());
            // [T-Up#INFO][COCRDUPC.cbl:471] MOVE statement
            container.getCarddemoCommarea().getCdemoMoreInfo()
                    .setCdemoLastMap(container.getWsLiterals().getLitThismap());
            // [T-Up#INFO][COCRDUPC.cbl:472] IF statement
            if (CobStringUtils.compare(container.getCarddemoCommarea()
                    .getCdemoGeneralInfo().getCdemoToProgram(), "COCRDLIC") == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:473] EXEC_CICS statement
                /*
                                           EXEC CICS
                                           XCTL PROGRAM('COCRDLIC')
                                           COMMAREA(CARDDEMO-COMMAREA)
                                           END-EXEC
                 */
                CocrdlicInputDto cocrdlicInputDto = new CocrdlicInputDto();
                cocrdlicInputDto
                        .setDfhcommarea(CarddemoCommareaToCocrdlicDfhcommarea.INSTANCE
                                .toTarget(container.getCarddemoCommarea()));
                programControl.forward("CCLI", cocrdlicInputDto);
                context.setReturnFlag(true);
            } else {
                // [T-Up#INFO][COCRDUPC.cbl:477] IF statement
                if (CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoGeneralInfo().getCdemoToProgram(), "COMEN01C") == 0) {
                    // [T-Up#INFO][COCRDUPC.cbl:478] EXEC_CICS statement
                    /*
                                               EXEC CICS
                                               XCTL PROGRAM('COMEN01C')
                                               COMMAREA(CARDDEMO-COMMAREA)
                                               END-EXEC
                     */
                    Comen01cInputDto comen01cInputDto = new Comen01cInputDto();
                    comen01cInputDto
                            .setDfhcommarea(CarddemoCommareaToComen01cDfhcommarea.INSTANCE
                                    .toTarget(container.getCarddemoCommarea()));
                    programControl.forward("CM00", comen01cInputDto);
                    context.setReturnFlag(true);
                }
            }
        } else if ((container.getCarddemoCommarea().getCdemoGeneralInfo()
                .getCdemoPgmContext() == CDEMO_PGM_ENTER && CobStringUtils
                .compare(container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoFromProgram(), container.getWsLiterals()
                        .getLitCclistpgm()) == 0)
                || (CobStringUtils.compare(container.getCcWorkAreas()
                        .getCcWorkArea().getCcardAid(), CCARD_AID_PFK12) == 0 && CobStringUtils
                        .compare(container.getCarddemoCommarea()
                                .getCdemoGeneralInfo().getCdemoFromProgram(),
                                container.getWsLiterals().getLitCclistpgm()) == 0)) {
            // ******************************************************************
            // *       USER CAME FROM CREDIT CARD LIST SCREEN
            // *            SO WE ALREADY HAVE THE FILTER KEYS
            // *            FETCH THE ASSSOCIATED CARD DETAILS FOR UPDATE
            // ******************************************************************
            // [T-Up#INFO][COCRDUPC.cbl:492] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(CDEMO_PGM_REENTER);
            // [T-Up#INFO][COCRDUPC.cbl:493] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_OK);
            // [T-Up#INFO][COCRDUPC.cbl:494] SET statement
            container.getWsMiscStorage().setWsEditAcctFlag(
                    FLG_ACCTFILTER_ISVALID);
            // [T-Up#INFO][COCRDUPC.cbl:495] SET statement
            container.getWsMiscStorage().setWsEditCardFlag(
                    FLG_CARDFILTER_ISVALID);
            // [T-Up#INFO][COCRDUPC.cbl:496] MOVE statement
            container
                    .getCcWorkAreas()
                    .getCcWorkArea()
                    .setCcAcctIdN(
                            container.getCarddemoCommarea()
                                    .getCdemoAccountInfo().getCdemoAcctId());
            // [T-Up#INFO][COCRDUPC.cbl:497] MOVE statement
            container
                    .getCcWorkAreas()
                    .getCcWorkArea()
                    .setCcCardNumN(
                            container.getCarddemoCommarea().getCdemoCardInfo()
                                    .getCdemoCardNum());
            // [T-Up#INFO][COCRDUPC.cbl:498] PERFORM statement
            controlManager.run(context, _9000ReadData, _9000ReadDataExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDUPC.cbl:500] SET statement
            container.getWsThisProgcommarea().getCardUpdateScreenData()
                    .setCcupChangeAction(CCUP_SHOW_DETAILS);
            // [T-Up#INFO][COCRDUPC.cbl:501] PERFORM statement
            controlManager.run(context, _3000SendMap, _3000SendMapExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDUPC.cbl:503] GO TO statement
            context.setGotoTarget(commonReturn);
            return;
        } else if (((CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_DETAILS_NOT_FETCHED_1) == 0 || CobStringUtils.compare(
                container.getWsThisProgcommarea().getCardUpdateScreenData()
                        .getCcupChangeAction(), CCUP_DETAILS_NOT_FETCHED_2) == 0) && container
                .getCarddemoCommarea().getCdemoGeneralInfo()
                .getCdemoPgmContext() == CDEMO_PGM_ENTER)
                || (CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoGeneralInfo().getCdemoFromProgram(), container
                        .getWsLiterals().getLitMenupgm()) == 0 && !(container
                        .getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER))) {
            // ******************************************************************
            // *       FRESH ENTRY INTO PROGRAM
            // *            ASK THE USER FOR THE KEYS TO FETCH CARD TO BE UPDATED
            // ******************************************************************
            // [T-Up#INFO][COCRDUPC.cbl:512] INITIALIZE statement
            container.setWsThisProgcommarea(CocrdupcWsThisProgcommarea
                    .createDefaultValueInstance());
            // [T-Up#INFO][COCRDUPC.cbl:513] PERFORM statement
            controlManager.run(context, _3000SendMap, _3000SendMapExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDUPC.cbl:515] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(CDEMO_PGM_REENTER);
            // [T-Up#INFO][COCRDUPC.cbl:516] SET statement
            container.getWsThisProgcommarea().getCardUpdateScreenData()
                    .setCcupChangeAction(CCUP_DETAILS_NOT_FETCHED_1);
            // [T-Up#INFO][COCRDUPC.cbl:517] GO TO statement
            context.setGotoTarget(commonReturn);
            return;
        } else if ((CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_CHANGES_OKAYED_AND_DONE) == 0)
                || (CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_FAILED_1) == 0 || CobStringUtils.compare(
                        container.getWsThisProgcommarea()
                                .getCardUpdateScreenData()
                                .getCcupChangeAction(), CCUP_CHANGES_FAILED_2) == 0)) {
            // ******************************************************************
            // *       CARD DATA CHANGES REVIEWED, OKAYED AND DONE SUCESSFULLY
            // *            RESET THE SEARCH KEYS
            // *            ASK THE USER FOR FRESH SEARCH CRITERIA
            // ******************************************************************
            // [T-Up#INFO][COCRDUPC.cbl:525] INITIALIZE statement
            container.setWsThisProgcommarea(CocrdupcWsThisProgcommarea
                    .createDefaultValueInstance());
            container.setWsMiscStorage(CocrdupcWsMiscStorage
                    .createDefaultValueInstance());
            container.getCarddemoCommarea().getCdemoAccountInfo()
                    .setCdemoAcctId(0);
            container.getCarddemoCommarea().getCdemoCardInfo()
                    .setCdemoCardNum(0);
            // [T-Up#INFO][COCRDUPC.cbl:529] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(CDEMO_PGM_ENTER);
            // [T-Up#INFO][COCRDUPC.cbl:530] PERFORM statement
            controlManager.run(context, _3000SendMap, _3000SendMapExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDUPC.cbl:532] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(CDEMO_PGM_REENTER);
            // [T-Up#INFO][COCRDUPC.cbl:533] SET statement
            container.getWsThisProgcommarea().getCardUpdateScreenData()
                    .setCcupChangeAction(CCUP_DETAILS_NOT_FETCHED_1);
            // [T-Up#INFO][COCRDUPC.cbl:534] GO TO statement
            context.setGotoTarget(commonReturn);
            return;
        } else {
            // ******************************************************************
            // *      CARD DATA HAS BEEN PRESENTED TO USER
            // *            CHECK THE USER INPUTS
            // *            DECIDE WHAT TO DO
            // *            PRESENT NEXT STEPS TO USER
            // ******************************************************************
            // [T-Up#INFO][COCRDUPC.cbl:542] PERFORM statement
            controlManager.run(context, _1000ProcessInputs,
                    _1000ProcessInputsExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDUPC.cbl:544] PERFORM statement
            controlManager.run(context, _2000DecideAction,
                    _2000DecideActionExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDUPC.cbl:546] PERFORM statement
            controlManager.run(context, _3000SendMap, _3000SendMapExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDUPC.cbl:548] GO TO statement
            context.setGotoTarget(commonReturn);
            return;
        }
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:552] COMMON-RETURN Paragraph</p>
     */
    void commonReturn(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl:553] MOVE statement
        container
                .getCcWorkAreas()
                .getCcWorkArea()
                .setCcardErrorMsg(container.getWsMiscStorage().getWsReturnMsg());
        // [T-Up#INFO][COCRDUPC.cbl:555] MOVE statement
        container.setWsCommarea(container.getCarddemoCommarea().get());
        // [T-Up#INFO][COCRDUPC.cbl:556] MOVE statement
        container.setWsCommarea(StringUtils.overlay(container.getWsCommarea(),
                container.getWsThisProgcommarea().get(), 160, 489));
        // [T-Up#INFO][COCRDUPC.cbl:560] EXEC_CICS statement
        /*
                       EXEC CICS RETURN
                            TRANSID (LIT-THISTRANID)
                            COMMAREA (WS-COMMAREA)
                            LENGTH(LENGTH OF WS-COMMAREA)
                       END-EXEC
         */
        TaskDto taskDto = TaskDto.builder()
                .destination(container.getWsLiterals().getLitThistranid())
                .data(Data.session(container.getWsCommarea())).build();
        taskInvoker.setNextTask(taskDto);
        context.setReturnFlag(true);
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:566] 0000-MAIN-EXIT Paragraph</p>
     */
    void _0000MainExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl:567] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:570] 1000-PROCESS-INPUTS Paragraph</p>
     */
    void _1000ProcessInputs(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl:571] PERFORM statement
        controlManager.run(context, _1100ReceiveMap, _1100ReceiveMapExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl:573] PERFORM statement
        controlManager.run(context, _1200EditMapInputs, _1200EditMapInputsExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl:575] MOVE statement
        container
                .getCcWorkAreas()
                .getCcWorkArea()
                .setCcardErrorMsg(container.getWsMiscStorage().getWsReturnMsg());
        // [T-Up#INFO][COCRDUPC.cbl:576] MOVE statement
        container.getCcWorkAreas().getCcWorkArea()
                .setCcardNextProg(container.getWsLiterals().getLitThispgm());
        // [T-Up#INFO][COCRDUPC.cbl:577] MOVE statement
        container
                .getCcWorkAreas()
                .getCcWorkArea()
                .setCcardNextMapset(
                        container.getWsLiterals().getLitThismapset());
        // [T-Up#INFO][COCRDUPC.cbl:578] MOVE statement
        container.getCcWorkAreas().getCcWorkArea()
                .setCcardNextMap(container.getWsLiterals().getLitThismap());
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:581] 1000-PROCESS-INPUTS-EXIT Paragraph</p>
     */
    void _1000ProcessInputsExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl:582] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:584] 1100-RECEIVE-MAP Paragraph</p>
     */
    void _1100ReceiveMap(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl:585] EXEC_CICS statement
        /*
                       EXEC CICS RECEIVE MAP(LIT-THISMAP)
                                 MAPSET(LIT-THISMAPSET))
                                 INTO(CCRDUPAI)
                                 RESP(WS-RESP-CD)
                                 RESP2(WS-REAS-CD)
                       END-EXEC
         */
        try {
            container.setCcrdupai(((CocrdupcInputDto) task.getInputDto())
                    .getCcrdupai());
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsReasCd(task.getLastResp2());
        }
        // [T-Up#INFO][COCRDUPC.cbl:592] INITIALIZE statement
        container.getWsThisProgcommarea().setCcupNewDetails(
                CocrdupcWsThisProgcommarea.CocrdupcCcupNewDetails
                        .createDefaultValueInstance());
        // *    REPLACE * WITH LOW-VALUES
        // [T-Up#INFO][COCRDUPC.cbl:595] IF statement
        if (CobStringUtils.compare(container.getCcrdupai().getAcctsidi(), "*") == 0
                || CobStringUtils.compare(
                        container.getCcrdupai().getAcctsidi(),
                        StringUtils.repeat(' ', 11)) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:597] MOVE statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcAcctId(StringUtils.repeat((char) 0x00, 11));
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .setCcupNewAcctid(StringUtils.repeat((char) 0x00, 11));
        } else {
            // [T-Up#INFO][COCRDUPC.cbl:600] MOVE statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcAcctId(container.getCcrdupai().getAcctsidi());
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .setCcupNewAcctid(container.getCcrdupai().getAcctsidi());
        }
        // [T-Up#INFO][COCRDUPC.cbl:604] IF statement
        if (CobStringUtils.compare(container.getCcrdupai().getCardsidi(), "*") == 0
                || CobStringUtils.compare(
                        container.getCcrdupai().getCardsidi(),
                        StringUtils.repeat(' ', 16)) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:606] MOVE statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcCardNum(StringUtils.repeat((char) 0x00, 16));
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .setCcupNewCardid(StringUtils.repeat((char) 0x00, 16));
        } else {
            // [T-Up#INFO][COCRDUPC.cbl:609] MOVE statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcCardNum(container.getCcrdupai().getCardsidi());
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .setCcupNewCardid(container.getCcrdupai().getCardsidi());
        }
        // [T-Up#INFO][COCRDUPC.cbl:613] IF statement
        if (CobStringUtils.compare(container.getCcrdupai().getCrdnamei(), "*") == 0
                || CobStringUtils.compare(
                        container.getCcrdupai().getCrdnamei(),
                        StringUtils.repeat(' ', 50)) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:615] MOVE statement
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .getCcupNewCarddata()
                    .setCcupNewCrdname(StringUtils.repeat((char) 0x00, 50));
        } else {
            // [T-Up#INFO][COCRDUPC.cbl:617] MOVE statement
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .getCcupNewCarddata()
                    .setCcupNewCrdname(container.getCcrdupai().getCrdnamei());
        }
        // [T-Up#INFO][COCRDUPC.cbl:620] IF statement
        if (CobStringUtils.compare(container.getCcrdupai().getCrdstcdi(), "*") == 0
                || CobStringUtils.compare(
                        container.getCcrdupai().getCrdstcdi(), " ") == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:622] MOVE statement
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .getCcupNewCarddata()
                    .setCcupNewCrdstcd(StringUtils.repeat((char) 0x00, 1));
        } else {
            // [T-Up#INFO][COCRDUPC.cbl:624] MOVE statement
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .getCcupNewCarddata()
                    .setCcupNewCrdstcd(container.getCcrdupai().getCrdstcdi());
        }
        // [T-Up#INFO][COCRDUPC.cbl:627] MOVE statement
        container.getWsThisProgcommarea().getCcupNewDetails()
                .getCcupNewCarddata().getCcupNewExpiraionDate()
                .setCcupNewExpday(container.getCcrdupai().getExpdayi());
        // [T-Up#INFO][COCRDUPC.cbl:629] IF statement
        if (CobStringUtils.compare(container.getCcrdupai().getExpmoni(), "*") == 0
                || CobStringUtils.compare(container.getCcrdupai().getExpmoni(),
                        StringUtils.repeat(' ', 2)) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:631] MOVE statement
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .getCcupNewCarddata().getCcupNewExpiraionDate()
                    .setCcupNewExpmon(StringUtils.repeat((char) 0x00, 2));
        } else {
            // [T-Up#INFO][COCRDUPC.cbl:633] MOVE statement
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .getCcupNewCarddata().getCcupNewExpiraionDate()
                    .setCcupNewExpmon(container.getCcrdupai().getExpmoni());
        }
        // [T-Up#INFO][COCRDUPC.cbl:636] IF statement
        if (CobStringUtils.compare(container.getCcrdupai().getExpyeari(), "*") == 0
                || CobStringUtils.compare(
                        container.getCcrdupai().getExpyeari(),
                        StringUtils.repeat(' ', 4)) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:638] MOVE statement
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .getCcupNewCarddata().getCcupNewExpiraionDate()
                    .setCcupNewExpyear(StringUtils.repeat((char) 0x00, 4));
        } else {
            // [T-Up#INFO][COCRDUPC.cbl:640] MOVE statement
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .getCcupNewCarddata().getCcupNewExpiraionDate()
                    .setCcupNewExpyear(container.getCcrdupai().getExpyeari());
        }
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:644] 1100-RECEIVE-MAP-EXIT Paragraph</p>
     */
    void _1100ReceiveMapExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl:645] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:647] 1200-EDIT-MAP-INPUTS Paragraph</p>
     */
    void _1200EditMapInputs(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl:649] SET statement
        container.getWsMiscStorage().setWsInputFlag(INPUT_OK);
        // [T-Up#INFO][COCRDUPC.cbl:651] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_DETAILS_NOT_FETCHED_1) == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_DETAILS_NOT_FETCHED_2) == 0) {
            // *        VALIDATE THE SEARCH KEYS
            // [T-Up#INFO][COCRDUPC.cbl:653] PERFORM statement
            controlManager.run(context, _1210EditAccount, _1210EditAccountExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDUPC.cbl:656] PERFORM statement
            controlManager.run(context, _1220EditCard, _1220EditCardExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDUPC.cbl:659] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupNewDetails()
                    .setCcupNewCarddata(
                            CocrdupcWsThisProgcommarea.CocrdupcCcupNewCarddata
                                    .createDefaultValueInstance());
            // *       IF THE SEARCH CONDITIONS HAVE PROBLEMS SKIP OTHER EDITS
            // [T-Up#INFO][COCRDUPC.cbl:662] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsEditAcctFlag(), FLG_ACCTFILTER_BLANK) == 0
                    && CobStringUtils.compare(container.getWsMiscStorage()
                            .getWsEditCardFlag(), FLG_CARDFILTER_BLANK) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:664] SET statement
                container.getWsMiscStorage().setWsReturnMsg(
                        NO_SEARCH_CRITERIA_RECEIVED);
            }
            // [T-Up#INFO][COCRDUPC.cbl:667] GO TO statement
            context.setGotoTarget(_1200EditMapInputsExit);
            return;
        } else {
            // [T-Up#INFO][COCRDUPC.cbl:670] CONTINUE statement
        }
        // *    SEARCH KEYS ALREADY VALIDATED AND DATA FETCHED
        // [T-Up#INFO][COCRDUPC.cbl:674] SET statement
        container.getWsMiscStorage().setWsInfoMsg(FOUND_CARDS_FOR_ACCOUNT);
        // [T-Up#INFO][COCRDUPC.cbl:675] SET statement
        container.getWsMiscStorage().setWsEditAcctFlag(FLG_ACCTFILTER_ISVALID);
        // [T-Up#INFO][COCRDUPC.cbl:676] SET statement
        container.getWsMiscStorage().setWsEditCardFlag(FLG_CARDFILTER_ISVALID);
        // [T-Up#INFO][COCRDUPC.cbl:677] MOVE statement
        container
                .getCarddemoCommarea()
                .getCdemoAccountInfo()
                .setCdemoAcctId(
                        Long.parseLong(container.getWsThisProgcommarea()
                                .getCcupOldDetails().getCcupOldAcctid().trim()));
        // [T-Up#INFO][COCRDUPC.cbl:678] MOVE statement
        container
                .getCarddemoCommarea()
                .getCdemoCardInfo()
                .setCdemoCardNum(
                        Long.parseLong(container.getWsThisProgcommarea()
                                .getCcupOldDetails().getCcupOldCardid().trim()));
        // [T-Up#INFO][COCRDUPC.cbl:679] MOVE statement
        container.getCardRecord().setCardEmbossedName(
                container.getWsThisProgcommarea().getCcupOldDetails()
                        .getCcupOldCarddata().getCcupOldCrdname());
        // [T-Up#INFO][COCRDUPC.cbl:680] MOVE statement
        container.getCardRecord().setCardActiveStatus(
                container.getWsThisProgcommarea().getCcupOldDetails()
                        .getCcupOldCarddata().getCcupOldCrdstcd());
        // [T-Up#INFO][COCRDUPC.cbl:681] MOVE statement
        container
                .getWsMiscStorage()
                .getCicsOutputEditVars()
                .setCardExpiryDay(
                        container.getWsThisProgcommarea().getCcupOldDetails()
                                .getCcupOldCarddata().getCcupOldExpiraionDate()
                                .getCcupOldExpday());
        // [T-Up#INFO][COCRDUPC.cbl:682] MOVE statement
        container
                .getWsMiscStorage()
                .getCicsOutputEditVars()
                .setCardExpiryMonth(
                        container.getWsThisProgcommarea().getCcupOldDetails()
                                .getCcupOldCarddata().getCcupOldExpiraionDate()
                                .getCcupOldExpmon());
        // [T-Up#INFO][COCRDUPC.cbl:683] MOVE statement
        container
                .getWsMiscStorage()
                .getCicsOutputEditVars()
                .setCardExpiryYear(
                        container.getWsThisProgcommarea().getCcupOldDetails()
                                .getCcupOldCarddata().getCcupOldExpiraionDate()
                                .getCcupOldExpyear());
        // *    NEW DATA IS SAME AS OLD DATA
        // [T-Up#INFO][COCRDUPC.cbl:686] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCcupNewDetails().getCcupNewCarddata().get().toUpperCase(),
                container.getWsThisProgcommarea().getCcupOldDetails()
                        .getCcupOldCarddata().get().toUpperCase()) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:688] SET statement
            container.getWsMiscStorage().setWsReturnMsg(NO_CHANGES_DETECTED);
        }
        // [T-Up#INFO][COCRDUPC.cbl:691] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsReturnMsg(), NO_CHANGES_DETECTED) == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_OK_NOT_CONFIRMED) == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_OKAYED_AND_DONE) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:694] SET statement
            container.getWsMiscStorage().setWsEditCardnameFlag(
                    FLG_CARDNAME_ISVALID);
            // [T-Up#INFO][COCRDUPC.cbl:695] SET statement
            container.getWsMiscStorage().setWsEditCardstatusFlag(
                    FLG_CARDSTATUS_ISVALID);
            // [T-Up#INFO][COCRDUPC.cbl:696] SET statement
            container.getWsMiscStorage().setWsEditCardexpmonFlag(
                    FLG_CARDEXPMON_ISVALID);
            // [T-Up#INFO][COCRDUPC.cbl:697] SET statement
            container.getWsMiscStorage().setWsEditCardexpyearFlag(
                    FLG_CARDEXPYEAR_ISVALID);
            // [T-Up#INFO][COCRDUPC.cbl:698] GO TO statement
            context.setGotoTarget(_1200EditMapInputsExit);
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl:702] SET statement
        container.getWsThisProgcommarea().getCardUpdateScreenData()
                .setCcupChangeAction(CCUP_CHANGES_NOT_OK);
        // [T-Up#INFO][COCRDUPC.cbl:704] PERFORM statement
        controlManager.run(context, _1230EditName, _1230EditNameExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl:707] PERFORM statement
        controlManager.run(context, _1240EditCardstatus,
                _1240EditCardstatusExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl:710] PERFORM statement
        controlManager.run(context, _1250EditExpiryMon, _1250EditExpiryMonExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl:713] PERFORM statement
        controlManager.run(context, _1260EditExpiryYear,
                _1260EditExpiryYearExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl:716] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsInputFlag(), INPUT_ERROR) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:717] CONTINUE statement
        } else {
            // [T-Up#INFO][COCRDUPC.cbl:719] SET statement
            container.getWsThisProgcommarea().getCardUpdateScreenData()
                    .setCcupChangeAction(CCUP_CHANGES_OK_NOT_CONFIRMED);
        }
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:723] 1200-EDIT-MAP-INPUTS-EXIT Paragraph</p>
     */
    void _1200EditMapInputsExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl:724] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:727] 1210-EDIT-ACCOUNT Paragraph</p>
     */
    void _1210EditAccount(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl:728] SET statement
        container.getWsMiscStorage().setWsEditAcctFlag(FLG_ACCTFILTER_NOT_OK);
        // *    Not supplied
        // [T-Up#INFO][COCRDUPC.cbl:731] IF statement
        if (CobStringUtils.compare(container.getCcWorkAreas().getCcWorkArea()
                .getCcAcctId(), StringUtils.repeat((char) 0x00, 11)) == 0
                || CobStringUtils.compare(container.getCcWorkAreas()
                        .getCcWorkArea().getCcAcctId(),
                        StringUtils.repeat(' ', 11)) == 0
                || container.getCcWorkAreas().getCcWorkArea().getCcAcctIdN() == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:734] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl:735] SET statement
            container.getWsMiscStorage()
                    .setWsEditAcctFlag(FLG_ACCTFILTER_BLANK);
            // [T-Up#INFO][COCRDUPC.cbl:736] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:737] SET statement
                container.getWsMiscStorage().setWsReturnMsg(WS_PROMPT_FOR_ACCT);
            }
            // [T-Up#INFO][COCRDUPC.cbl:739] MOVE statement
            container.getCarddemoCommarea().getCdemoAccountInfo()
                    .setCdemoAcctId((long) 0);
            // [T-Up#INFO][COCRDUPC.cbl:740] MOVE statement
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .setCcupNewAcctid(StringUtils.repeat((char) 0x00, 11));
            // [T-Up#INFO][COCRDUPC.cbl:741] GO TO statement
            context.setGotoTarget(_1210EditAccountExit);
            return;
        }
        // *
        // *    Not numeric
        // *    Not 11 characters
        // [T-Up#INFO][COCRDUPC.cbl:746] IF statement
        if (!StringUtils.isNumeric(container.getCcWorkAreas().getCcWorkArea()
                .getCcAcctId())) {
            // [T-Up#INFO][COCRDUPC.cbl:747] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl:748] SET statement
            container.getWsMiscStorage().setWsEditAcctFlag(
                    FLG_ACCTFILTER_NOT_OK);
            // [T-Up#INFO][COCRDUPC.cbl:749] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:750] MOVE statement
                container.getWsMiscStorage().setWsReturnMsg(
                        "ACCOUNT FILTER,IF SUPPLIED MUST BE A 11 DIGIT NUMBER");
            }
            // [T-Up#INFO][COCRDUPC.cbl:754] MOVE statement
            container.getCarddemoCommarea().getCdemoAccountInfo()
                    .setCdemoAcctId((long) 0);
            // [T-Up#INFO][COCRDUPC.cbl:755] MOVE statement
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .setCcupNewAcctid(StringUtils.repeat((char) 0x00, 11));
            // [T-Up#INFO][COCRDUPC.cbl:756] GO TO statement
            context.setGotoTarget(_1210EditAccountExit);
            return;
        } else {
            // [T-Up#INFO][COCRDUPC.cbl:758] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoAccountInfo()
                    .setCdemoAcctId(
                            Long.parseLong(container.getCcWorkAreas()
                                    .getCcWorkArea().getCcAcctId().trim()));
            container
                    .getWsThisProgcommarea()
                    .getCcupNewDetails()
                    .setCcupNewAcctid(
                            container.getCcWorkAreas().getCcWorkArea()
                                    .getCcAcctId());
            // [T-Up#INFO][COCRDUPC.cbl:760] SET statement
            container.getWsMiscStorage().setWsEditAcctFlag(
                    FLG_ACCTFILTER_ISVALID);
        }
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:764] 1210-EDIT-ACCOUNT-EXIT Paragraph</p>
     */
    void _1210EditAccountExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl:765] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:768] 1220-EDIT-CARD Paragraph</p>
     */
    void _1220EditCard(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // *    Not numeric
        // *    Not 16 characters
        // [T-Up#INFO][COCRDUPC.cbl:771] SET statement
        container.getWsMiscStorage().setWsEditCardFlag(FLG_CARDFILTER_NOT_OK);
        // *    Not supplied
        // [T-Up#INFO][COCRDUPC.cbl:774] IF statement
        if (CobStringUtils.compare(container.getCcWorkAreas().getCcWorkArea()
                .getCcCardNum(), StringUtils.repeat((char) 0x00, 16)) == 0
                || CobStringUtils.compare(container.getCcWorkAreas()
                        .getCcWorkArea().getCcCardNum(),
                        StringUtils.repeat(' ', 16)) == 0
                || container.getCcWorkAreas().getCcWorkArea().getCcCardNumN() == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:777] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl:778] SET statement
            container.getWsMiscStorage()
                    .setWsEditCardFlag(FLG_CARDFILTER_BLANK);
            // [T-Up#INFO][COCRDUPC.cbl:779] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:780] SET statement
                container.getWsMiscStorage().setWsReturnMsg(WS_PROMPT_FOR_CARD);
            }
            // [T-Up#INFO][COCRDUPC.cbl:783] MOVE statement
            container.getCarddemoCommarea().getCdemoCardInfo()
                    .setCdemoCardNum((long) 0);
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .setCcupNewCardid(StringUtils.repeat('0', 16));
            // [T-Up#INFO][COCRDUPC.cbl:785] GO TO statement
            context.setGotoTarget(_1220EditCardExit);
            return;
        }
        // *
        // *    Not numeric
        // *    Not 16 characters
        // [T-Up#INFO][COCRDUPC.cbl:790] IF statement
        if (!StringUtils.isNumeric(container.getCcWorkAreas().getCcWorkArea()
                .getCcCardNum())) {
            // [T-Up#INFO][COCRDUPC.cbl:791] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl:792] SET statement
            container.getWsMiscStorage().setWsEditCardFlag(
                    FLG_CARDFILTER_NOT_OK);
            // [T-Up#INFO][COCRDUPC.cbl:793] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:794] MOVE statement
                container.getWsMiscStorage().setWsReturnMsg(
                        "CARD ID FILTER,IF SUPPLIED MUST BE A 16 DIGIT NUMBER");
            }
            // [T-Up#INFO][COCRDUPC.cbl:798] MOVE statement
            container.getCarddemoCommarea().getCdemoCardInfo()
                    .setCdemoCardNum((long) 0);
            // [T-Up#INFO][COCRDUPC.cbl:799] MOVE statement
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .setCcupNewCardid(StringUtils.repeat((char) 0x00, 16));
            // [T-Up#INFO][COCRDUPC.cbl:800] GO TO statement
            context.setGotoTarget(_1220EditCardExit);
            return;
        } else {
            // [T-Up#INFO][COCRDUPC.cbl:802] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCardInfo()
                    .setCdemoCardNum(
                            container.getCcWorkAreas().getCcWorkArea()
                                    .getCcCardNumN());
            // [T-Up#INFO][COCRDUPC.cbl:803] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupNewDetails()
                    .setCcupNewCardid(
                            container.getCcWorkAreas().getCcWorkArea()
                                    .getCcCardNum());
            // [T-Up#INFO][COCRDUPC.cbl:804] SET statement
            container.getWsMiscStorage().setWsEditCardFlag(
                    FLG_CARDFILTER_ISVALID);
        }
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:808] 1220-EDIT-CARD-EXIT Paragraph</p>
     */
    void _1220EditCardExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl:809] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:812] 1230-EDIT-NAME Paragraph</p>
     */
    void _1230EditName(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // *    Not BLANK
        // [T-Up#INFO][COCRDUPC.cbl:814] SET statement
        container.getWsMiscStorage().setWsEditCardnameFlag(FLG_CARDNAME_NOT_OK);
        // *    Not supplied
        // [T-Up#INFO][COCRDUPC.cbl:817] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCcupNewDetails().getCcupNewCarddata().getCcupNewCrdname(),
                StringUtils.repeat((char) 0x00, 50)) == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCcupNewDetails().getCcupNewCarddata()
                        .getCcupNewCrdname(), StringUtils.repeat(' ', 50)) == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCcupNewDetails().getCcupNewCarddata()
                        .getCcupNewCrdname(), StringUtils.repeat('0', 50)) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:820] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl:821] SET statement
            container.getWsMiscStorage().setWsEditCardnameFlag(
                    FLG_CARDNAME_BLANK);
            // [T-Up#INFO][COCRDUPC.cbl:822] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:823] SET statement
                container.getWsMiscStorage().setWsReturnMsg(WS_PROMPT_FOR_NAME);
            }
            // [T-Up#INFO][COCRDUPC.cbl:825] GO TO statement
            context.setGotoTarget(_1230EditNameExit);
            return;
        }
        // *    Only Alphabets and space allowed
        // [T-Up#INFO][COCRDUPC.cbl:829] MOVE statement
        container.getWsMiscStorage().setCardNameCheck(
                container.getWsThisProgcommarea().getCcupNewDetails()
                        .getCcupNewCarddata().getCcupNewCrdname());
        // [T-Up#INFO][COCRDUPC.cbl:830] INSPECT statement
        container.getWsMiscStorage().setCardNameCheck(
                StringUtils.replaceChars(container.getWsMiscStorage()
                        .getCardNameCheck(), container.getWsLiterals()
                        .getLitAllAlphaFrom(), container.getWsLiterals()
                        .getLitAllSpacesTo()));
        // [T-Up#INFO][COCRDUPC.cbl:834] IF statement
        if (container.getWsMiscStorage().getCardNameCheck().trim().length() == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:835] CONTINUE statement
        } else {
            // [T-Up#INFO][COCRDUPC.cbl:837] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl:838] SET statement
            container.getWsMiscStorage().setWsEditCardnameFlag(
                    FLG_CARDNAME_NOT_OK);
            // [T-Up#INFO][COCRDUPC.cbl:839] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:840] SET statement
                container.getWsMiscStorage().setWsReturnMsg(
                        WS_NAME_MUST_BE_ALPHA);
            }
            // [T-Up#INFO][COCRDUPC.cbl:842] GO TO statement
            context.setGotoTarget(_1230EditNameExit);
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl:845] SET statement
        container.getWsMiscStorage()
                .setWsEditCardnameFlag(FLG_CARDNAME_ISVALID);
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:847] 1230-EDIT-NAME-EXIT Paragraph</p>
     */
    void _1230EditNameExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl:848] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:851] 1240-EDIT-CARDSTATUS Paragraph</p>
     */
    void _1240EditCardstatus(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // *    Must be Y or N
        // [T-Up#INFO][COCRDUPC.cbl:853] SET statement
        container.getWsMiscStorage().setWsEditCardstatusFlag(
                FLG_CARDSTATUS_NOT_OK);
        // *    Not supplied
        // [T-Up#INFO][COCRDUPC.cbl:856] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCcupNewDetails().getCcupNewCarddata().getCcupNewCrdstcd(),
                StringUtils.repeat((char) 0x00, 1)) == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCcupNewDetails().getCcupNewCarddata()
                        .getCcupNewCrdstcd(), " ") == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCcupNewDetails().getCcupNewCarddata()
                        .getCcupNewCrdstcd(), StringUtils.repeat('0', 1)) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:859] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl:860] SET statement
            container.getWsMiscStorage().setWsEditCardstatusFlag(
                    FLG_CARDSTATUS_BLANK);
            // [T-Up#INFO][COCRDUPC.cbl:861] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:862] SET statement
                container.getWsMiscStorage().setWsReturnMsg(
                        CARD_STATUS_MUST_BE_YES_NO);
            }
            // [T-Up#INFO][COCRDUPC.cbl:864] GO TO statement
            context.setGotoTarget(_1240EditCardstatusExit);
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl:867] MOVE statement
        container.getWsMiscStorage().setFlgYesNoCheck(
                container.getWsThisProgcommarea().getCcupNewDetails()
                        .getCcupNewCarddata().getCcupNewCrdstcd());
        // [T-Up#INFO][COCRDUPC.cbl:869] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getFlgYesNoCheck(), FLG_YES_NO_VALID_1) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getFlgYesNoCheck(), FLG_YES_NO_VALID_2) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:870] SET statement
            container.getWsMiscStorage().setWsEditCardstatusFlag(
                    FLG_CARDSTATUS_ISVALID);
        } else {
            // [T-Up#INFO][COCRDUPC.cbl:872] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl:873] SET statement
            container.getWsMiscStorage().setWsEditCardstatusFlag(
                    FLG_CARDSTATUS_NOT_OK);
            // [T-Up#INFO][COCRDUPC.cbl:874] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:875] SET statement
                container.getWsMiscStorage().setWsReturnMsg(
                        CARD_STATUS_MUST_BE_YES_NO);
            }
            // [T-Up#INFO][COCRDUPC.cbl:877] GO TO statement
            context.setGotoTarget(_1240EditCardstatusExit);
            return;
        }
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:880] 1240-EDIT-CARDSTATUS-EXIT Paragraph</p>
     */
    void _1240EditCardstatusExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl:881] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:883] 1250-EDIT-EXPIRY-MON Paragraph</p>
     */
    void _1250EditExpiryMon(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl:886] SET statement
        container.getWsMiscStorage().setWsEditCardexpmonFlag(
                FLG_CARDEXPMON_NOT_OK);
        // *    Not supplied
        // [T-Up#INFO][COCRDUPC.cbl:889] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCcupNewDetails().getCcupNewCarddata()
                .getCcupNewExpiraionDate().getCcupNewExpmon(),
                StringUtils.repeat((char) 0x00, 2)) == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCcupNewDetails().getCcupNewCarddata()
                        .getCcupNewExpiraionDate().getCcupNewExpmon(),
                        StringUtils.repeat(' ', 2)) == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCcupNewDetails().getCcupNewCarddata()
                        .getCcupNewExpiraionDate().getCcupNewExpmon(),
                        StringUtils.repeat('0', 2)) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:892] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl:893] SET statement
            container.getWsMiscStorage().setWsEditCardexpmonFlag(
                    FLG_CARDEXPMON_BLANK);
            // [T-Up#INFO][COCRDUPC.cbl:894] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:895] SET statement
                container.getWsMiscStorage().setWsReturnMsg(
                        CARD_EXPIRY_MONTH_NOT_VALID);
            }
            // [T-Up#INFO][COCRDUPC.cbl:897] GO TO statement
            context.setGotoTarget(_1250EditExpiryMonExit);
            return;
        }
        // *    Must be numeric
        // *    Must be 1 to 12
        // [T-Up#INFO][COCRDUPC.cbl:902] MOVE statement
        container.getWsMiscStorage().setCardMonthCheck(
                container.getWsThisProgcommarea().getCcupNewDetails()
                        .getCcupNewCarddata().getCcupNewExpiraionDate()
                        .getCcupNewExpmon());
        // [T-Up#INFO][COCRDUPC.cbl:904] IF statement
        if (container.getWsMiscStorage().getCardMonthCheckN() >= VALID_MONTH_START
                && container.getWsMiscStorage().getCardMonthCheckN() <= VALID_MONTH_END) {
            // [T-Up#INFO][COCRDUPC.cbl:905] SET statement
            container.getWsMiscStorage().setWsEditCardexpmonFlag(
                    FLG_CARDEXPMON_ISVALID);
        } else {
            // [T-Up#INFO][COCRDUPC.cbl:907] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl:908] SET statement
            container.getWsMiscStorage().setWsEditCardexpmonFlag(
                    FLG_CARDEXPMON_NOT_OK);
            // [T-Up#INFO][COCRDUPC.cbl:909] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:910] SET statement
                container.getWsMiscStorage().setWsReturnMsg(
                        CARD_EXPIRY_MONTH_NOT_VALID);
            }
            // [T-Up#INFO][COCRDUPC.cbl:912] GO TO statement
            context.setGotoTarget(_1250EditExpiryMonExit);
            return;
        }
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:916] 1250-EDIT-EXPIRY-MON-EXIT Paragraph</p>
     */
    void _1250EditExpiryMonExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl:917] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:919] 1260-EDIT-EXPIRY-YEAR Paragraph</p>
     */
    void _1260EditExpiryYear(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // *    Not supplied
        // [T-Up#INFO][COCRDUPC.cbl:922] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCcupNewDetails().getCcupNewCarddata()
                .getCcupNewExpiraionDate().getCcupNewExpyear(),
                StringUtils.repeat((char) 0x00, 4)) == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCcupNewDetails().getCcupNewCarddata()
                        .getCcupNewExpiraionDate().getCcupNewExpyear(),
                        StringUtils.repeat(' ', 4)) == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCcupNewDetails().getCcupNewCarddata()
                        .getCcupNewExpiraionDate().getCcupNewExpyear(),
                        StringUtils.repeat('0', 4)) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:925] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl:926] SET statement
            container.getWsMiscStorage().setWsEditCardexpyearFlag(
                    FLG_CARDEXPYEAR_BLANK);
            // [T-Up#INFO][COCRDUPC.cbl:927] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:928] SET statement
                container.getWsMiscStorage().setWsReturnMsg(
                        CARD_EXPIRY_YEAR_NOT_VALID);
            }
            // [T-Up#INFO][COCRDUPC.cbl:930] GO TO statement
            context.setGotoTarget(_1260EditExpiryYearExit);
            return;
        }
        // *    Must be numeric
        // *    Must be 1 to 12
        // [T-Up#INFO][COCRDUPC.cbl:936] SET statement
        container.getWsMiscStorage().setWsEditCardexpyearFlag(
                FLG_CARDEXPYEAR_NOT_OK);
        // [T-Up#INFO][COCRDUPC.cbl:938] MOVE statement
        container.getWsMiscStorage().setCardYearCheck(
                container.getWsThisProgcommarea().getCcupNewDetails()
                        .getCcupNewCarddata().getCcupNewExpiraionDate()
                        .getCcupNewExpyear());
        // [T-Up#INFO][COCRDUPC.cbl:940] IF statement
        if (container.getWsMiscStorage().getCardYearCheckN() >= VALID_YEAR_START
                && container.getWsMiscStorage().getCardYearCheckN() <= VALID_YEAR_END) {
            // [T-Up#INFO][COCRDUPC.cbl:941] SET statement
            container.getWsMiscStorage().setWsEditCardexpyearFlag(
                    FLG_CARDEXPYEAR_ISVALID);
        } else {
            // [T-Up#INFO][COCRDUPC.cbl:943] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl:944] SET statement
            container.getWsMiscStorage().setWsEditCardexpyearFlag(
                    FLG_CARDEXPYEAR_NOT_OK);
            // [T-Up#INFO][COCRDUPC.cbl:945] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:946] SET statement
                container.getWsMiscStorage().setWsReturnMsg(
                        CARD_EXPIRY_YEAR_NOT_VALID);
            }
            // [T-Up#INFO][COCRDUPC.cbl:948] GO TO statement
            context.setGotoTarget(_1260EditExpiryYearExit);
            return;
        }
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:951] 1260-EDIT-EXPIRY-YEAR-EXIT Paragraph</p>
     */
    void _1260EditExpiryYearExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl:952] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:954] 2000-DECIDE-ACTION Paragraph</p>
     */
    void _2000DecideAction(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl:955] EVALUATE statement
        if ((CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_DETAILS_NOT_FETCHED_1) == 0 || CobStringUtils.compare(
                container.getWsThisProgcommarea().getCardUpdateScreenData()
                        .getCcupChangeAction(), CCUP_DETAILS_NOT_FETCHED_2) == 0)
                || (CobStringUtils.compare(container.getCcWorkAreas()
                        .getCcWorkArea().getCcardAid(), CCARD_AID_PFK12) == 0)) {
            // ******************************************************************
            // *       NO DETAILS SHOWN.
            // *       SO GET THEM AND SETUP DETAIL EDIT SCREEN
            // ******************************************************************
            // ******************************************************************
            // *       CHANGES MADE. BUT USER CANCELS
            // ******************************************************************
            // [T-Up#INFO][COCRDUPC.cbl:965] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsEditAcctFlag(), FLG_ACCTFILTER_ISVALID) == 0
                    && CobStringUtils.compare(container.getWsMiscStorage()
                            .getWsEditCardFlag(), FLG_CARDFILTER_ISVALID) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:967] PERFORM statement
                controlManager.run(context, _9000ReadData, _9000ReadDataExit);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][COCRDUPC.cbl:969] IF statement
                if (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsInfoMsg(), FOUND_CARDS_FOR_ACCOUNT) == 0) {
                    // [T-Up#INFO][COCRDUPC.cbl:970] SET statement
                    container.getWsThisProgcommarea().getCardUpdateScreenData()
                            .setCcupChangeAction(CCUP_SHOW_DETAILS);
                }
            }
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_SHOW_DETAILS) == 0) {
            // ******************************************************************
            // *       DETAILS SHOWN
            // *       CHECK CHANGES AND ASK CONFIRMATION IF GOOD
            // ******************************************************************
            // [T-Up#INFO][COCRDUPC.cbl:978] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsInputFlag(), INPUT_ERROR) == 0
                    || CobStringUtils.compare(container.getWsMiscStorage()
                            .getWsReturnMsg(), NO_CHANGES_DETECTED) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:980] CONTINUE statement
            } else {
                // [T-Up#INFO][COCRDUPC.cbl:982] SET statement
                container.getWsThisProgcommarea().getCardUpdateScreenData()
                        .setCcupChangeAction(CCUP_CHANGES_OK_NOT_CONFIRMED);
            }
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_CHANGES_NOT_OK) == 0) {
            // ******************************************************************
            // *       DETAILS SHOWN
            // *       BUT INPUT EDIT ERRORS FOUND
            // ******************************************************************
            // [T-Up#INFO][COCRDUPC.cbl:989] CONTINUE statement
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_CHANGES_OK_NOT_CONFIRMED) == 0
                && CobStringUtils.compare(container.getCcWorkAreas()
                        .getCcWorkArea().getCcardAid(), CCARD_AID_PFK05) == 0) {
            // ******************************************************************
            // *       DETAILS EDITED , FOUND OK, CONFIRM SAVE REQUESTED
            // *       CONFIRMATION GIVEN.SO SAVE THE CHANGES
            // ******************************************************************
            // [T-Up#INFO][COCRDUPC.cbl:996] PERFORM statement
            controlManager.run(context, _9200WriteProcessing,
                    _9200WriteProcessingExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDUPC.cbl:998] EVALUATE statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), COULD_NOT_LOCK_FOR_UPDATE) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:1000] SET statement
                container.getWsThisProgcommarea().getCardUpdateScreenData()
                        .setCcupChangeAction(CCUP_CHANGES_OKAYED_LOCK_ERROR);
            } else if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), LOCKED_BUT_UPDATE_FAILED) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:1002] SET statement
                container.getWsThisProgcommarea().getCardUpdateScreenData()
                        .setCcupChangeAction(CCUP_CHANGES_OKAYED_BUT_FAILED);
            } else if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), DATA_WAS_CHANGED_BEFORE_UPDATE) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:1004] SET statement
                container.getWsThisProgcommarea().getCardUpdateScreenData()
                        .setCcupChangeAction(CCUP_SHOW_DETAILS);
            } else {
                // [T-Up#INFO][COCRDUPC.cbl:1006] SET statement
                container.getWsThisProgcommarea().getCardUpdateScreenData()
                        .setCcupChangeAction(CCUP_CHANGES_OKAYED_AND_DONE);
            }
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_CHANGES_OK_NOT_CONFIRMED) == 0) {
            // ******************************************************************
            // *       DETAILS EDITED , FOUND OK, CONFIRM SAVE REQUESTED
            // *       CONFIRMATION NOT GIVEN. SO SHOW DETAILS AGAIN
            // ******************************************************************
            // [T-Up#INFO][COCRDUPC.cbl:1013] CONTINUE statement
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_CHANGES_OKAYED_AND_DONE) == 0) {
            // ******************************************************************
            // *       SHOW CONFIRMATION. GO BACK TO SQUARE 1
            // ******************************************************************
            // [T-Up#INFO][COCRDUPC.cbl:1018] SET statement
            container.getWsThisProgcommarea().getCardUpdateScreenData()
                    .setCcupChangeAction(CCUP_SHOW_DETAILS);
            // [T-Up#INFO][COCRDUPC.cbl:1019] IF statement
            if (CobStringUtils.compare(container.getCarddemoCommarea()
                    .getCdemoGeneralInfo().getCdemoFromTranid(),
                    StringUtils.repeat((char) 0x00, 4)) == 0
                    || CobStringUtils.compare(container.getCarddemoCommarea()
                            .getCdemoGeneralInfo().getCdemoFromTranid(),
                            StringUtils.repeat(' ', 4)) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:1021] MOVE statement
                container.getCarddemoCommarea().getCdemoAccountInfo()
                        .setCdemoAcctId((long) 0);
                container.getCarddemoCommarea().getCdemoCardInfo()
                        .setCdemoCardNum((long) 0);
                // [T-Up#INFO][COCRDUPC.cbl:1023] MOVE statement
                container.getCarddemoCommarea().getCdemoAccountInfo()
                        .setCdemoAcctStatus(StringUtils.repeat((char) 0x00, 1));
            }
        } else {
            // [T-Up#INFO][COCRDUPC.cbl:1026] MOVE statement
            container.getAbendData().setAbendCulprit(
                    container.getWsLiterals().getLitThispgm());
            // [T-Up#INFO][COCRDUPC.cbl:1027] MOVE statement
            container.getAbendData().setAbendCode("0001");
            // [T-Up#INFO][COCRDUPC.cbl:1028] MOVE statement
            container.getAbendData()
                    .setAbendReason(StringUtils.repeat(' ', 50));
            // [T-Up#INFO][COCRDUPC.cbl:1029] MOVE statement
            container.getAbendData().setAbendMsg("UNEXPECTED DATA SCENARIO");
            // [T-Up#INFO][COCRDUPC.cbl:1031] PERFORM statement
            controlManager.run(context, abendRoutine, abendRoutineExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:1035] 2000-DECIDE-ACTION-EXIT Paragraph</p>
     */
    void _2000DecideActionExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl:1036] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:1041] 3000-SEND-MAP Paragraph</p>
     */
    void _3000SendMap(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl:1042] PERFORM statement
        controlManager.run(context, _3100ScreenInit, _3100ScreenInitExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl:1044] PERFORM statement
        controlManager.run(context, _3200SetupScreenVars,
                _3200SetupScreenVarsExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl:1046] PERFORM statement
        controlManager.run(context, _3250SetupInfomsg, _3250SetupInfomsgExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl:1048] PERFORM statement
        controlManager.run(context, _3300SetupScreenAttrs,
                _3300SetupScreenAttrsExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl:1050] PERFORM statement
        controlManager.run(context, _3400SendScreen, _3400SendScreenExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:1054] 3000-SEND-MAP-EXIT Paragraph</p>
     */
    void _3000SendMapExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl:1055] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:1058] 3100-SCREEN-INIT Paragraph</p>
     */
    void _3100ScreenInit(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl:1059] MOVE statement
        container.setCcrdupao(Ccrdupai.createDefaultValueInstance().get());
        // [T-Up#INFO][COCRDUPC.cbl:1061] MOVE statement
        container.getWsDateTime().getWsCurdateData()
                .set(IntrinsicFunction.functionCurrentDate());
        // [T-Up#INFO][COCRDUPC.cbl:1063] MOVE statement
        container.setTitle01o(container.getCcdaScreenTitle().getCcdaTitle01());
        // [T-Up#INFO][COCRDUPC.cbl:1064] MOVE statement
        container.setTitle02o(container.getCcdaScreenTitle().getCcdaTitle02());
        // [T-Up#INFO][COCRDUPC.cbl:1065] MOVE statement
        container.setTrnnameo(container.getWsLiterals().getLitThistranid());
        // [T-Up#INFO][COCRDUPC.cbl:1066] MOVE statement
        container.setPgmnameo(container.getWsLiterals().getLitThispgm());
        // [T-Up#INFO][COCRDUPC.cbl:1068] MOVE statement
        container.getWsDateTime().getWsCurdateData()
                .set(IntrinsicFunction.functionCurrentDate());
        // [T-Up#INFO][COCRDUPC.cbl:1070] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateMonth());
        // [T-Up#INFO][COCRDUPC.cbl:1071] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateDd(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateDay());
        // [T-Up#INFO][COCRDUPC.cbl:1072] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateYy(
                        Integer.parseInt(CobStream
                                .convZonedIntToString(
                                        container.getWsDateTime()
                                                .getWsCurdateData()
                                                .getWsCurdate()
                                                .getWsCurdateYear(), 4)
                                .substring(2, 4).trim()));
        // [T-Up#INFO][COCRDUPC.cbl:1074] MOVE statement
        container.setCurdateo(container.getWsDateTime().getWsCurdateMmDdYy()
                .get());
        // [T-Up#INFO][COCRDUPC.cbl:1076] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeHh(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeHours());
        // [T-Up#INFO][COCRDUPC.cbl:1077] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeMinute());
        // [T-Up#INFO][COCRDUPC.cbl:1078] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeSs(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeSecond());
        // [T-Up#INFO][COCRDUPC.cbl:1080] MOVE statement
        container.setCurtimeo(container.getWsDateTime().getWsCurtimeHhMmSs()
                .get());
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:1084] 3100-SCREEN-INIT-EXIT Paragraph</p>
     */
    void _3100ScreenInitExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl:1085] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:1088] 3200-SETUP-SCREEN-VARS Paragraph</p>
     */
    void _3200SetupScreenVars(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // *    INITIALIZE SEARCH CRITERIA
        // [T-Up#INFO][COCRDUPC.cbl:1090] IF statement
        if (container.getCarddemoCommarea().getCdemoGeneralInfo()
                .getCdemoPgmContext() == CDEMO_PGM_ENTER) {
            // [T-Up#INFO][COCRDUPC.cbl:1091] CONTINUE statement
        } else {
            // [T-Up#INFO][COCRDUPC.cbl:1093] IF statement
            if (container.getCcWorkAreas().getCcWorkArea().getCcAcctIdN() == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:1094] MOVE statement
                container.setAcctsido(StringUtils.repeat((char) 0x00, 11));
            } else {
                // [T-Up#INFO][COCRDUPC.cbl:1096] MOVE statement
                container.setAcctsido(container.getCcWorkAreas()
                        .getCcWorkArea().getCcAcctId());
            }
            // [T-Up#INFO][COCRDUPC.cbl:1099] IF statement
            if (container.getCcWorkAreas().getCcWorkArea().getCcCardNumN() == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:1100] MOVE statement
                container.setCardsido(StringUtils.repeat((char) 0x00, 16));
            } else {
                // [T-Up#INFO][COCRDUPC.cbl:1102] MOVE statement
                container.setCardsido(container.getCcWorkAreas()
                        .getCcWorkArea().getCcCardNum());
            }
            // [T-Up#INFO][COCRDUPC.cbl:1105] EVALUATE statement
            if (CobStringUtils.compare(container.getWsThisProgcommarea()
                    .getCardUpdateScreenData().getCcupChangeAction(),
                    CCUP_DETAILS_NOT_FETCHED_1) == 0
                    || CobStringUtils.compare(container.getWsThisProgcommarea()
                            .getCardUpdateScreenData().getCcupChangeAction(),
                            CCUP_DETAILS_NOT_FETCHED_2) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:1107] MOVE statement
                container.setCrdnameo(StringUtils.repeat((char) 0x00, 50));
                container.setCrdnameo(StringUtils.repeat((char) 0x00, 50));
                container.setCrdstcdo(StringUtils.repeat((char) 0x00, 1));
                container.setExpdayo(StringUtils.repeat((char) 0x00, 2));
                container.setExpmono(StringUtils.repeat((char) 0x00, 2));
                container.setExpyearo(StringUtils.repeat((char) 0x00, 4));
            } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                    .getCardUpdateScreenData().getCcupChangeAction(),
                    CCUP_SHOW_DETAILS) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:1114] MOVE statement
                container.setCrdnameo(container.getWsThisProgcommarea()
                        .getCcupOldDetails().getCcupOldCarddata()
                        .getCcupOldCrdname());
                // [T-Up#INFO][COCRDUPC.cbl:1115] MOVE statement
                container.setCrdstcdo(container.getWsThisProgcommarea()
                        .getCcupOldDetails().getCcupOldCarddata()
                        .getCcupOldCrdstcd());
                // [T-Up#INFO][COCRDUPC.cbl:1116] MOVE statement
                container.setExpdayo(container.getWsThisProgcommarea()
                        .getCcupOldDetails().getCcupOldCarddata()
                        .getCcupOldExpiraionDate().getCcupOldExpday());
                // [T-Up#INFO][COCRDUPC.cbl:1117] MOVE statement
                container.setExpmono(container.getWsThisProgcommarea()
                        .getCcupOldDetails().getCcupOldCarddata()
                        .getCcupOldExpiraionDate().getCcupOldExpmon());
                // [T-Up#INFO][COCRDUPC.cbl:1118] MOVE statement
                container.setExpyearo(container.getWsThisProgcommarea()
                        .getCcupOldDetails().getCcupOldCarddata()
                        .getCcupOldExpiraionDate().getCcupOldExpyear());
            } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                    .getCardUpdateScreenData().getCcupChangeAction(),
                    CCUP_CHANGES_MADE_1) == 0
                    || CobStringUtils.compare(container.getWsThisProgcommarea()
                            .getCardUpdateScreenData().getCcupChangeAction(),
                            CCUP_CHANGES_MADE_2) == 0
                    || CobStringUtils.compare(container.getWsThisProgcommarea()
                            .getCardUpdateScreenData().getCcupChangeAction(),
                            CCUP_CHANGES_MADE_3) == 0
                    || CobStringUtils.compare(container.getWsThisProgcommarea()
                            .getCardUpdateScreenData().getCcupChangeAction(),
                            CCUP_CHANGES_MADE_4) == 0
                    || CobStringUtils.compare(container.getWsThisProgcommarea()
                            .getCardUpdateScreenData().getCcupChangeAction(),
                            CCUP_CHANGES_MADE_5) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:1120] MOVE statement
                container.setCrdnameo(container.getWsThisProgcommarea()
                        .getCcupNewDetails().getCcupNewCarddata()
                        .getCcupNewCrdname());
                // [T-Up#INFO][COCRDUPC.cbl:1121] MOVE statement
                container.setCrdstcdo(container.getWsThisProgcommarea()
                        .getCcupNewDetails().getCcupNewCarddata()
                        .getCcupNewCrdstcd());
                // [T-Up#INFO][COCRDUPC.cbl:1122] MOVE statement
                container.setExpmono(container.getWsThisProgcommarea()
                        .getCcupNewDetails().getCcupNewCarddata()
                        .getCcupNewExpiraionDate().getCcupNewExpmon());
                // [T-Up#INFO][COCRDUPC.cbl:1123] MOVE statement
                container.setExpyearo(container.getWsThisProgcommarea()
                        .getCcupNewDetails().getCcupNewCarddata()
                        .getCcupNewExpiraionDate().getCcupNewExpyear());
                // ******************************************************************
                // *               MOVE OLD VALUES TO NON-DISPLAY FIELDS
                // *               THAT WE ARE NOT ALLOWING USER TO CHANGE(FOR NOW)
                // *****************************************************************
                // *               MOVE CCUP-NEW-EXPDAY     TO EXPDAYO  OF CCRDUPAO
                // [T-Up#INFO][COCRDUPC.cbl:1129] MOVE statement
                container.setExpdayo(container.getWsThisProgcommarea()
                        .getCcupOldDetails().getCcupOldCarddata()
                        .getCcupOldExpiraionDate().getCcupOldExpday());
            } else {
                // [T-Up#INFO][COCRDUPC.cbl:1131] MOVE statement
                container.setCrdnameo(container.getWsThisProgcommarea()
                        .getCcupOldDetails().getCcupOldCarddata()
                        .getCcupOldCrdname());
                // [T-Up#INFO][COCRDUPC.cbl:1132] MOVE statement
                container.setCrdstcdo(container.getWsThisProgcommarea()
                        .getCcupOldDetails().getCcupOldCarddata()
                        .getCcupOldCrdstcd());
                // [T-Up#INFO][COCRDUPC.cbl:1133] MOVE statement
                container.setExpdayo(container.getWsThisProgcommarea()
                        .getCcupOldDetails().getCcupOldCarddata()
                        .getCcupOldExpiraionDate().getCcupOldExpday());
                // [T-Up#INFO][COCRDUPC.cbl:1134] MOVE statement
                container.setExpmono(container.getWsThisProgcommarea()
                        .getCcupOldDetails().getCcupOldCarddata()
                        .getCcupOldExpiraionDate().getCcupOldExpmon());
                // [T-Up#INFO][COCRDUPC.cbl:1135] MOVE statement
                container.setExpyearo(container.getWsThisProgcommarea()
                        .getCcupOldDetails().getCcupOldCarddata()
                        .getCcupOldExpiraionDate().getCcupOldExpyear());
            }
        }
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:1141] 3200-SETUP-SCREEN-VARS-EXIT Paragraph</p>
     */
    void _3200SetupScreenVarsExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl:1142] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:1144] 3250-SETUP-INFOMSG Paragraph</p>
     */
    void _3250SetupInfomsg(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // *    SETUP INFORMATION MESSAGE
        // [T-Up#INFO][COCRDUPC.cbl:1146] EVALUATE statement
        if (container.getCarddemoCommarea().getCdemoGeneralInfo()
                .getCdemoPgmContext() == CDEMO_PGM_ENTER) {
            // [T-Up#INFO][COCRDUPC.cbl:1148] SET statement
            container.getWsMiscStorage().setWsInfoMsg(PROMPT_FOR_SEARCH_KEYS);
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_DETAILS_NOT_FETCHED_1) == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_DETAILS_NOT_FETCHED_2) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1150] SET statement
            container.getWsMiscStorage().setWsInfoMsg(PROMPT_FOR_SEARCH_KEYS);
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_SHOW_DETAILS) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1152] SET statement
            container.getWsMiscStorage().setWsInfoMsg(FOUND_CARDS_FOR_ACCOUNT);
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_CHANGES_NOT_OK) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1154] SET statement
            container.getWsMiscStorage().setWsInfoMsg(PROMPT_FOR_CHANGES);
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_CHANGES_OK_NOT_CONFIRMED) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1156] SET statement
            container.getWsMiscStorage().setWsInfoMsg(PROMPT_FOR_CONFIRMATION);
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_CHANGES_OKAYED_AND_DONE) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1158] SET statement
            container.getWsMiscStorage().setWsInfoMsg(CONFIRM_UPDATE_SUCCESS);
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_CHANGES_OKAYED_LOCK_ERROR) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1160] SET statement
            container.getWsMiscStorage().setWsInfoMsg(INFORM_FAILURE);
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_CHANGES_OKAYED_BUT_FAILED) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1162] SET statement
            container.getWsMiscStorage().setWsInfoMsg(INFORM_FAILURE);
        } else if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsInfoMsg(), WS_NO_INFO_MESSAGE_1) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsInfoMsg(), WS_NO_INFO_MESSAGE_2) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1164] SET statement
            container.getWsMiscStorage().setWsInfoMsg(PROMPT_FOR_SEARCH_KEYS);
        }
        // [T-Up#INFO][COCRDUPC.cbl:1167] MOVE statement
        container.setInfomsgo(container.getWsMiscStorage().getWsInfoMsg());
        // [T-Up#INFO][COCRDUPC.cbl:1169] MOVE statement
        container.setErrmsgo(container.getWsMiscStorage().getWsReturnMsg());
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:1171] 3250-SETUP-INFOMSG-EXIT Paragraph</p>
     */
    void _3250SetupInfomsgExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl:1172] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:1174] 3300-SETUP-SCREEN-ATTRS Paragraph</p>
     */
    void _3300SetupScreenAttrs(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // *    PROTECT OR UNPROTECT BASED ON CONTEXT
        // [T-Up#INFO][COCRDUPC.cbl:1178] EVALUATE statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_DETAILS_NOT_FETCHED_1) == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_DETAILS_NOT_FETCHED_2) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1180] MOVE statement
            container.getCcrdupai().setAcctsida(
                    container.getDfhbmsca().getDfhbmfse());
            container.getCcrdupai().setCardsida(
                    container.getDfhbmsca().getDfhbmfse());
            // [T-Up#INFO][COCRDUPC.cbl:1182] MOVE statement
            container.getCcrdupai().setCrdnamea(
                    container.getDfhbmsca().getDfhbmprf());
            container.getCcrdupai().setCrdstcda(
                    container.getDfhbmsca().getDfhbmprf());
            container.getCcrdupai().setExpmona(
                    container.getDfhbmsca().getDfhbmprf());
            container.getCcrdupai().setExpyeara(
                    container.getDfhbmsca().getDfhbmprf());
        } else if ((CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_SHOW_DETAILS) == 0)
                || (CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_NOT_OK) == 0)) {
            // *                                  EXPDAYA  OF CCRDUPAI
            // [T-Up#INFO][COCRDUPC.cbl:1189] MOVE statement
            container.getCcrdupai().setAcctsida(
                    container.getDfhbmsca().getDfhbmprf());
            container.getCcrdupai().setCardsida(
                    container.getDfhbmsca().getDfhbmprf());
            // *                                  EXPDAYA  OF CCRDUPAI
            // [T-Up#INFO][COCRDUPC.cbl:1192] MOVE statement
            container.getCcrdupai().setCrdnamea(
                    container.getDfhbmsca().getDfhbmfse());
            container.getCcrdupai().setCrdstcda(
                    container.getDfhbmsca().getDfhbmfse());
            container.getCcrdupai().setExpmona(
                    container.getDfhbmsca().getDfhbmfse());
            container.getCcrdupai().setExpyeara(
                    container.getDfhbmsca().getDfhbmfse());
        } else if ((CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_CHANGES_OK_NOT_CONFIRMED) == 0)
                || (CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_OKAYED_AND_DONE) == 0)) {
            // [T-Up#INFO][COCRDUPC.cbl:1199] MOVE statement
            container.getCcrdupai().setAcctsida(
                    container.getDfhbmsca().getDfhbmprf());
            container.getCcrdupai().setCardsida(
                    container.getDfhbmsca().getDfhbmprf());
            container.getCcrdupai().setCrdnamea(
                    container.getDfhbmsca().getDfhbmprf());
            container.getCcrdupai().setCrdstcda(
                    container.getDfhbmsca().getDfhbmprf());
            container.getCcrdupai().setExpmona(
                    container.getDfhbmsca().getDfhbmprf());
            container.getCcrdupai().setExpyeara(
                    container.getDfhbmsca().getDfhbmprf());
        } else {
            // *                                  EXPDAYA  OF CCRDUPAI
            // [T-Up#INFO][COCRDUPC.cbl:1207] MOVE statement
            container.getCcrdupai().setAcctsida(
                    container.getDfhbmsca().getDfhbmfse());
            container.getCcrdupai().setCardsida(
                    container.getDfhbmsca().getDfhbmfse());
            // [T-Up#INFO][COCRDUPC.cbl:1209] MOVE statement
            container.getCcrdupai().setCrdnamea(
                    container.getDfhbmsca().getDfhbmprf());
            container.getCcrdupai().setCrdstcda(
                    container.getDfhbmsca().getDfhbmprf());
            container.getCcrdupai().setExpmona(
                    container.getDfhbmsca().getDfhbmprf());
            container.getCcrdupai().setExpyeara(
                    container.getDfhbmsca().getDfhbmprf());
        }
        // *                                  EXPDAYA  OF CCRDUPAI
        // *    POSITION CURSOR
        // [T-Up#INFO][COCRDUPC.cbl:1217] EVALUATE statement
        if ((CobStringUtils.compare(
                container.getWsMiscStorage().getWsInfoMsg(),
                FOUND_CARDS_FOR_ACCOUNT) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsReturnMsg(), NO_CHANGES_DETECTED) == 0)) {
            // [T-Up#INFO][COCRDUPC.cbl:1220] MOVE statement
            container.getCcrdupai().setCrdnamel(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditAcctFlag(), FLG_ACCTFILTER_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsEditAcctFlag(), FLG_ACCTFILTER_BLANK) == 0)) {
            // [T-Up#INFO][COCRDUPC.cbl:1223] MOVE statement
            container.getCcrdupai().setAcctsidl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardFlag(), FLG_CARDFILTER_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsEditCardFlag(), FLG_CARDFILTER_BLANK) == 0)) {
            // [T-Up#INFO][COCRDUPC.cbl:1226] MOVE statement
            container.getCcrdupai().setCardsidl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardnameFlag(), FLG_CARDNAME_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsEditCardnameFlag(), FLG_CARDNAME_BLANK) == 0)) {
            // [T-Up#INFO][COCRDUPC.cbl:1229] MOVE statement
            container.getCcrdupai().setCrdnamel(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardstatusFlag(), FLG_CARDSTATUS_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsEditCardstatusFlag(), FLG_CARDSTATUS_BLANK) == 0)) {
            // [T-Up#INFO][COCRDUPC.cbl:1232] MOVE statement
            container.getCcrdupai().setCrdstcdl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardexpmonFlag(), FLG_CARDEXPMON_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsEditCardexpmonFlag(), FLG_CARDEXPMON_BLANK) == 0)) {
            // [T-Up#INFO][COCRDUPC.cbl:1235] MOVE statement
            container.getCcrdupai().setExpmonl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardexpyearFlag(), FLG_CARDEXPYEAR_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsEditCardexpyearFlag(), FLG_CARDEXPYEAR_BLANK) == 0)) {
            // [T-Up#INFO][COCRDUPC.cbl:1238] MOVE statement
            container.getCcrdupai().setExpyearl(-1);
        } else {
            // [T-Up#INFO][COCRDUPC.cbl:1240] MOVE statement
            container.getCcrdupai().setAcctsidl(-1);
        }
        // *    SETUP COLOR
        // [T-Up#INFO][COCRDUPC.cbl:1244] IF statement
        if (CobStringUtils.compare(container.getCarddemoCommarea()
                .getCdemoMoreInfo().getCdemoLastMapset(), container
                .getWsLiterals().getLitCclistmapset()) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1245] MOVE statement
            container.setAcctsidc(container.getDfhbmsca().getDfhdfcol());
            // [T-Up#INFO][COCRDUPC.cbl:1246] MOVE statement
            container.setCardsidc(container.getDfhbmsca().getDfhdfcol());
        }
        // [T-Up#INFO][COCRDUPC.cbl:1249] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditAcctFlag(), FLG_ACCTFILTER_NOT_OK) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1250] MOVE statement
            container.setAcctsidc(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COCRDUPC.cbl:1253] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditAcctFlag(), FLG_ACCTFILTER_BLANK) == 0
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][COCRDUPC.cbl:1255] MOVE statement
            container.setAcctsido("*");
            // [T-Up#INFO][COCRDUPC.cbl:1256] MOVE statement
            container.setAcctsidc(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COCRDUPC.cbl:1259] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardFlag(), FLG_CARDFILTER_NOT_OK) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1260] MOVE statement
            container.setCardsidc(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COCRDUPC.cbl:1263] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardFlag(), FLG_CARDFILTER_BLANK) == 0
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][COCRDUPC.cbl:1265] MOVE statement
            container.setCardsido("*");
            // [T-Up#INFO][COCRDUPC.cbl:1266] MOVE statement
            container.setCardsidc(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COCRDUPC.cbl:1269] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardnameFlag(), FLG_CARDNAME_NOT_OK) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_NOT_OK) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1271] MOVE statement
            container.setCrdnamec(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COCRDUPC.cbl:1274] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardnameFlag(), FLG_CARDNAME_BLANK) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_NOT_OK) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1276] MOVE statement
            container.setCrdnameo("*");
            // [T-Up#INFO][COCRDUPC.cbl:1277] MOVE statement
            container.setCrdnamec(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COCRDUPC.cbl:1280] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardstatusFlag(), FLG_CARDSTATUS_NOT_OK) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_NOT_OK) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1282] MOVE statement
            container.setCrdstcdc(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COCRDUPC.cbl:1285] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardstatusFlag(), FLG_CARDSTATUS_BLANK) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_NOT_OK) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1287] MOVE statement
            container.setCrdstcdo("*");
            // [T-Up#INFO][COCRDUPC.cbl:1288] MOVE statement
            container.setCrdstcdc(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COCRDUPC.cbl:1291] MOVE statement
        container.setExpdayc(container.getDfhbmsca().getDfhbmdar());
        // [T-Up#INFO][COCRDUPC.cbl:1293] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardexpmonFlag(), FLG_CARDEXPMON_NOT_OK) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_NOT_OK) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1295] MOVE statement
            container.setExpmonc(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COCRDUPC.cbl:1298] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardexpmonFlag(), FLG_CARDEXPMON_BLANK) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_NOT_OK) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1300] MOVE statement
            container.setExpmono("*");
            // [T-Up#INFO][COCRDUPC.cbl:1301] MOVE statement
            container.setExpmonc(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COCRDUPC.cbl:1304] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardexpyearFlag(), FLG_CARDEXPYEAR_NOT_OK) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_NOT_OK) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1306] MOVE statement
            container.setExpyearc(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COCRDUPC.cbl:1309] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardexpyearFlag(), FLG_CARDEXPYEAR_BLANK) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_NOT_OK) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1311] MOVE statement
            container.setExpyearo("*");
            // [T-Up#INFO][COCRDUPC.cbl:1312] MOVE statement
            container.setExpyearc(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COCRDUPC.cbl:1315] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage().getWsInfoMsg(),
                WS_NO_INFO_MESSAGE_1) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsInfoMsg(), WS_NO_INFO_MESSAGE_2) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1316] MOVE statement
            container.getCcrdupai().setInfomsga(
                    container.getDfhbmsca().getDfhbmdar());
        } else {
            // [T-Up#INFO][COCRDUPC.cbl:1318] MOVE statement
            container.getCcrdupai().setInfomsga(
                    container.getDfhbmsca().getDfhbmbry());
        }
        // [T-Up#INFO][COCRDUPC.cbl:1321] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage().getWsInfoMsg(),
                PROMPT_FOR_CONFIRMATION) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1322] MOVE statement
            container.getCcrdupai().setFkeysca(
                    container.getDfhbmsca().getDfhbmbry());
        }
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:1325] 3300-SETUP-SCREEN-ATTRS-EXIT Paragraph</p>
     */
    void _3300SetupScreenAttrsExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl:1326] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:1330] 3400-SEND-SCREEN Paragraph</p>
     */
    void _3400SendScreen(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl:1332] MOVE statement
        container
                .getCcWorkAreas()
                .getCcWorkArea()
                .setCcardNextMapset(
                        container.getWsLiterals().getLitThismapset());
        // [T-Up#INFO][COCRDUPC.cbl:1333] MOVE statement
        container.getCcWorkAreas().getCcWorkArea()
                .setCcardNextMap(container.getWsLiterals().getLitThismap());
        // [T-Up#INFO][COCRDUPC.cbl:1335] EXEC_CICS statement
        /*
                       EXEC CICS SEND MAP('CCRDUPA')
                                      MAPSET('COCRDUP')
                                      FROM(CCRDUPAO)
                                      CURSOR
                                      ERASE
                                      FREEKB
                                      RESP(WS-RESP-CD)
                       END-EXEC
         */
        try {
            ((CocrdupcOutputDto) task.getOutputDto())
                    .setPageName("COCRDUP_CCRDUPA");
            ((CocrdupcOutputDto) task.getOutputDto()).setCcrdupao(container
                    .getCcrdupao());
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
        }
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:1344] 3400-SEND-SCREEN-EXIT Paragraph</p>
     */
    void _3400SendScreenExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl:1345] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:1349] 9000-READ-DATA Paragraph</p>
     */
    void _9000ReadData(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl:1351] INITIALIZE statement
        container.getWsThisProgcommarea().setCcupOldDetails(
                CocrdupcWsThisProgcommarea.CocrdupcCcupOldDetails
                        .createDefaultValueInstance());
        // [T-Up#INFO][COCRDUPC.cbl:1352] MOVE statement
        container
                .getWsThisProgcommarea()
                .getCcupOldDetails()
                .setCcupOldAcctid(
                        container.getCcWorkAreas().getCcWorkArea()
                                .getCcAcctId());
        // [T-Up#INFO][COCRDUPC.cbl:1353] MOVE statement
        container
                .getWsThisProgcommarea()
                .getCcupOldDetails()
                .setCcupOldCardid(
                        container.getCcWorkAreas().getCcWorkArea()
                                .getCcCardNum());
        // [T-Up#INFO][COCRDUPC.cbl:1355] PERFORM statement
        controlManager.run(context, _9100GetcardByacctcard,
                _9100GetcardByacctcardExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl:1358] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage().getWsInfoMsg(),
                FOUND_CARDS_FOR_ACCOUNT) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1360] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupOldDetails()
                    .setCcupOldCvvCd(
                            StringUtils.leftPad(String.valueOf(Math
                                    .abs(container.getCardRecord()
                                            .getCardCvvCd())), 3, '0'));
            // [T-Up#INFO][COCRDUPC.cbl:1362] INSPECT statement
            container.getCardRecord().setCardEmbossedName(
                    StringUtils.replaceChars(container.getCardRecord()
                            .getCardEmbossedName(), container.getWsLiterals()
                            .getLitLower(), container.getWsLiterals()
                            .getLitUpper()));
            // [T-Up#INFO][COCRDUPC.cbl:1366] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupOldDetails()
                    .getCcupOldCarddata()
                    .setCcupOldCrdname(
                            container.getCardRecord().getCardEmbossedName());
            // [T-Up#INFO][COCRDUPC.cbl:1367] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupOldDetails()
                    .getCcupOldCarddata()
                    .getCcupOldExpiraionDate()
                    .setCcupOldExpyear(
                            container.getCardRecord().getCardExpiraionDate()
                                    .substring(0, 4));
            // [T-Up#INFO][COCRDUPC.cbl:1369] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupOldDetails()
                    .getCcupOldCarddata()
                    .getCcupOldExpiraionDate()
                    .setCcupOldExpmon(
                            container.getCardRecord().getCardExpiraionDate()
                                    .substring(5, 7));
            // [T-Up#INFO][COCRDUPC.cbl:1371] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupOldDetails()
                    .getCcupOldCarddata()
                    .getCcupOldExpiraionDate()
                    .setCcupOldExpday(
                            container.getCardRecord().getCardExpiraionDate()
                                    .substring(8, 10));
            // [T-Up#INFO][COCRDUPC.cbl:1373] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupOldDetails()
                    .getCcupOldCarddata()
                    .setCcupOldCrdstcd(
                            container.getCardRecord().getCardActiveStatus());
        }
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:1378] 9000-READ-DATA-EXIT Paragraph</p>
     */
    void _9000ReadDataExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl:1379] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:1382] 9100-GETCARD-BYACCTCARD Paragraph</p>
     */
    void _9100GetcardByacctcard(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // *    Read the Card file
        // *
        // *    MOVE CC-ACCT-ID-N            TO WS-CARD-RID-ACCT-ID
        // [T-Up#INFO][COCRDUPC.cbl:1386] MOVE statement
        container
                .getWsMiscStorage()
                .getWsCardRid()
                .setWsCardRidCardnum(
                        container.getCcWorkAreas().getCcWorkArea()
                                .getCcCardNum());
        // [T-Up#INFO][COCRDUPC.cbl:1388] EXEC_CICS statement
        /*
                       EXEC CICS READ
                            FILE      (LIT-CARDFILENAME)
                            RIDFLD    (WS-CARD-RID-CARDNUM)
                            KEYLENGTH (LENGTH OF WS-CARD-RID-CARDNUM)
                            INTO      (CARD-RECORD)
                            LENGTH    (LENGTH OF CARD-RECORD)
                            RESP      (WS-RESP-CD)
                            RESP2     (WS-REAS-CD)
                       END-EXEC
         */
        try {
            AwsM2CarddemoCarddataVsamKsdsDto awsM2CarddemoCarddataVsamKsdsDto = recordKeyAccessor
                    .read("awsM2CarddemoCarddataVsamKsdsDao", container
                            .getWsMiscStorage().getWsCardRid()
                            .getWsCardRidCardnum());
            container
                    .setCardRecord(CardRecordToAwsM2CarddemoCarddataVsamKsdsDto.INSTANCE
                            .toSource(awsM2CarddemoCarddataVsamKsdsDto));
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsReasCd(task.getLastResp2());
        }
        // [T-Up#INFO][COCRDUPC.cbl:1398] EVALUATE statement
        if (container.getWsMiscStorage().getWsCicsProcessngVars().getWsRespCd() == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1400] SET statement
            container.getWsMiscStorage().setWsInfoMsg(FOUND_CARDS_FOR_ACCOUNT);
        } else if (container.getWsMiscStorage().getWsCicsProcessngVars()
                .getWsRespCd() == 13) {
            // [T-Up#INFO][COCRDUPC.cbl:1402] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl:1403] SET statement
            container.getWsMiscStorage().setWsEditAcctFlag(
                    FLG_ACCTFILTER_NOT_OK);
            // [T-Up#INFO][COCRDUPC.cbl:1404] SET statement
            container.getWsMiscStorage().setWsEditCardFlag(
                    FLG_CARDFILTER_NOT_OK);
            // [T-Up#INFO][COCRDUPC.cbl:1405] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:1406] SET statement
                container.getWsMiscStorage().setWsReturnMsg(
                        DID_NOT_FIND_ACCTCARD_COMBO);
            }
        } else {
            // [T-Up#INFO][COCRDUPC.cbl:1409] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl:1410] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:1411] SET statement
                container.getWsMiscStorage().setWsEditAcctFlag(
                        FLG_ACCTFILTER_NOT_OK);
            }
            // [T-Up#INFO][COCRDUPC.cbl:1413] MOVE statement
            container.getWsMiscStorage().getWsFileErrorMessage()
                    .setErrorOpname("READ");
            // [T-Up#INFO][COCRDUPC.cbl:1414] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorFile(
                            container.getWsLiterals().getLitCardfilename());
            // [T-Up#INFO][COCRDUPC.cbl:1415] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorResp(
                            StringUtils.leftPad(
                                    String.valueOf(Math.abs(container
                                            .getWsMiscStorage()
                                            .getWsCicsProcessngVars()
                                            .getWsRespCd())), 9, '0'));
            // [T-Up#INFO][COCRDUPC.cbl:1416] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorResp2(
                            StringUtils.leftPad(
                                    String.valueOf(Math.abs(container
                                            .getWsMiscStorage()
                                            .getWsCicsProcessngVars()
                                            .getWsReasCd())), 9, '0'));
            // [T-Up#INFO][COCRDUPC.cbl:1417] MOVE statement
            container.getWsMiscStorage().setWsReturnMsg(
                    container.getWsMiscStorage().getWsFileErrorMessage().get());
        }
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:1421] 9100-GETCARD-BYACCTCARD-EXIT Paragraph</p>
     */
    void _9100GetcardByacctcardExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl:1422] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:1426] 9200-WRITE-PROCESSING Paragraph</p>
     */
    void _9200WriteProcessing(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // *    Read the Card file
        // *
        // *    MOVE CC-ACCT-ID-N            TO WS-CARD-RID-ACCT-ID
        // [T-Up#INFO][COCRDUPC.cbl:1431] MOVE statement
        container
                .getWsMiscStorage()
                .getWsCardRid()
                .setWsCardRidCardnum(
                        container.getCcWorkAreas().getCcWorkArea()
                                .getCcCardNum());
        // [T-Up#INFO][COCRDUPC.cbl:1433] EXEC_CICS statement
        /*
                       EXEC CICS READ
                            FILE      (LIT-CARDFILENAME)
                            UPDATE
                            RIDFLD    (WS-CARD-RID-CARDNUM)
                            KEYLENGTH (LENGTH OF WS-CARD-RID-CARDNUM)
                            INTO      (CARD-RECORD)
                            LENGTH    (LENGTH OF CARD-RECORD)
                            RESP      (WS-RESP-CD)
                            RESP2     (WS-REAS-CD)
                       END-EXEC
         */
        try {
            AwsM2CarddemoCarddataVsamKsdsDto awsM2CarddemoCarddataVsamKsdsDto = recordKeyAccessor
                    .readForUpdate("awsM2CarddemoCarddataVsamKsdsDao",
                            container.getWsMiscStorage().getWsCardRid()
                                    .getWsCardRidCardnum());
            container
                    .setCardRecord(CardRecordToAwsM2CarddemoCarddataVsamKsdsDto.INSTANCE
                            .toSource(awsM2CarddemoCarddataVsamKsdsDto));
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsReasCd(task.getLastResp2());
        }
        // *****************************************************************
        // *    Could we lock the record ?
        // *****************************************************************
        // [T-Up#INFO][COCRDUPC.cbl:1447] IF statement
        if (container.getWsMiscStorage().getWsCicsProcessngVars().getWsRespCd() == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1448] CONTINUE statement
        } else {
            // [T-Up#INFO][COCRDUPC.cbl:1450] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl:1451] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl:1452] SET statement
                container.getWsMiscStorage().setWsReturnMsg(
                        COULD_NOT_LOCK_FOR_UPDATE);
            }
            // [T-Up#INFO][COCRDUPC.cbl:1454] GO TO statement
            context.setGotoTarget(_9200WriteProcessingExit);
            return;
        }
        // *****************************************************************
        // *    Did someone change the record while we were out ?
        // *****************************************************************
        // [T-Up#INFO][COCRDUPC.cbl:1459] PERFORM statement
        controlManager.run(context, _9300CheckChangeInRec,
                _9300CheckChangeInRecExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl:1461] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsReturnMsg(), DATA_WAS_CHANGED_BEFORE_UPDATE) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1462] GO TO statement
            context.setGotoTarget(_9200WriteProcessingExit);
            return;
        }
        // *****************************************************************
        // * Prepare the update
        // *****************************************************************
        // [T-Up#INFO][COCRDUPC.cbl:1467] INITIALIZE statement
        container.getWsThisProgcommarea().setCardUpdateRecord(
                CocrdupcWsThisProgcommarea.CocrdupcCardUpdateRecord
                        .createDefaultValueInstance());
        // [T-Up#INFO][COCRDUPC.cbl:1468] MOVE statement
        container
                .getWsThisProgcommarea()
                .getCardUpdateRecord()
                .setCardUpdateNum(
                        container.getWsThisProgcommarea().getCcupNewDetails()
                                .getCcupNewCardid());
        // [T-Up#INFO][COCRDUPC.cbl:1469] MOVE statement
        container
                .getWsThisProgcommarea()
                .getCardUpdateRecord()
                .setCardUpdateAcctId(
                        container.getCcWorkAreas().getCcWorkArea()
                                .getCcAcctIdN());
        // [T-Up#INFO][COCRDUPC.cbl:1470] MOVE statement
        container
                .getWsMiscStorage()
                .getCicsOutputEditVars()
                .setCardCvvCdX(
                        container.getWsThisProgcommarea().getCcupNewDetails()
                                .getCcupNewCvvCd());
        // [T-Up#INFO][COCRDUPC.cbl:1471] MOVE statement
        container
                .getWsThisProgcommarea()
                .getCardUpdateRecord()
                .setCardUpdateCvvCd(
                        container.getWsMiscStorage().getCicsOutputEditVars()
                                .getCardCvvCdN());
        // [T-Up#INFO][COCRDUPC.cbl:1472] MOVE statement
        container
                .getWsThisProgcommarea()
                .getCardUpdateRecord()
                .setCardUpdateEmbossedName(
                        container.getWsThisProgcommarea().getCcupNewDetails()
                                .getCcupNewCarddata().getCcupNewCrdname());
        // [T-Up#INFO][COCRDUPC.cbl:1473] STRING statement
        tempStringBuilder1 = new StringBuilder();
        tempStringBuilder2 = new StringBuilder(container
                .getWsThisProgcommarea().getCardUpdateRecord()
                .getCardUpdateExpiraionDate());
        tempStringBuilder1
                .append(container.getWsThisProgcommarea().getCcupNewDetails()
                        .getCcupNewCarddata().getCcupNewExpiraionDate()
                        .getCcupNewExpyear())
                .append("-")
                .append(container.getWsThisProgcommarea().getCcupNewDetails()
                        .getCcupNewCarddata().getCcupNewExpiraionDate()
                        .getCcupNewExpmon())
                .append("-")
                .append(container.getWsThisProgcommarea().getCcupNewDetails()
                        .getCcupNewCarddata().getCcupNewExpiraionDate()
                        .getCcupNewExpday());
        if (tempStringBuilder1.length() <= 10) {
            tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                    tempStringBuilder1.toString());
            container.getWsThisProgcommarea().getCardUpdateRecord()
                    .setCardUpdateExpiraionDate(tempStringBuilder2.toString());
        }
        // [T-Up#INFO][COCRDUPC.cbl:1481] MOVE statement
        container
                .getWsThisProgcommarea()
                .getCardUpdateRecord()
                .setCardUpdateActiveStatus(
                        container.getWsThisProgcommarea().getCcupNewDetails()
                                .getCcupNewCarddata().getCcupNewCrdstcd());
        // [T-Up#INFO][COCRDUPC.cbl:1483] EXEC_CICS statement
        /*
                       EXEC CICS
                            REWRITE FILE(LIT-CARDFILENAME)
                                    FROM(CARD-UPDATE-RECORD)
                                    LENGTH(LENGTH OF CARD-UPDATE-RECORD)
                                    RESP      (WS-RESP-CD)
                                    RESP2     (WS-REAS-CD)
                       END-EXEC
         */
        try {
            AwsM2CarddemoCarddataVsamKsdsDto awsM2CarddemoCarddataVsamKsdsDto = CocrdupcCardUpdateRecordToAwsM2CarddemoCarddataVsamKsdsDto.INSTANCE
                    .toTarget(container.getWsThisProgcommarea()
                            .getCardUpdateRecord());
            recordKeyAccessor.updateLast("awsM2CarddemoCarddataVsamKsdsDao",
                    awsM2CarddemoCarddataVsamKsdsDto);
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsReasCd(task.getLastResp2());
        }
        // *****************************************************************
        // * Did the update succeed ?  *
        // *****************************************************************
        // [T-Up#INFO][COCRDUPC.cbl:1494] IF statement
        if (container.getWsMiscStorage().getWsCicsProcessngVars().getWsRespCd() == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1495] CONTINUE statement
        } else {
            // [T-Up#INFO][COCRDUPC.cbl:1497] SET statement
            container.getWsMiscStorage().setWsReturnMsg(
                    LOCKED_BUT_UPDATE_FAILED);
        }
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:1500] 9200-WRITE-PROCESSING-EXIT Paragraph</p>
     */
    void _9200WriteProcessingExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl:1501] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:1504] 9300-CHECK-CHANGE-IN-REC Paragraph</p>
     */
    void _9300CheckChangeInRec(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl:1505] INSPECT statement
        container.getCardRecord().setCardEmbossedName(
                StringUtils
                        .replaceChars(container.getCardRecord()
                                .getCardEmbossedName(), container
                                .getWsLiterals().getLitLower(), container
                                .getWsLiterals().getLitUpper()));
        // [T-Up#INFO][COCRDUPC.cbl:1509] IF statement
        if (CobStringUtils.compare(PictureFormatter.intFormatWithoutSign(
                container.getCardRecord().getCardCvvCd(), "000"), container
                .getWsThisProgcommarea().getCcupOldDetails().getCcupOldCvvCd()) == 0
                && CobStringUtils.compare(container.getCardRecord()
                        .getCardEmbossedName(), container
                        .getWsThisProgcommarea().getCcupOldDetails()
                        .getCcupOldCarddata().getCcupOldCrdname()) == 0
                && CobStringUtils.compare(container.getCardRecord()
                        .getCardExpiraionDate().substring(0, 4), container
                        .getWsThisProgcommarea().getCcupOldDetails()
                        .getCcupOldCarddata().getCcupOldExpiraionDate()
                        .getCcupOldExpyear()) == 0
                && CobStringUtils.compare(container.getCardRecord()
                        .getCardExpiraionDate().substring(5, 7), container
                        .getWsThisProgcommarea().getCcupOldDetails()
                        .getCcupOldCarddata().getCcupOldExpiraionDate()
                        .getCcupOldExpmon()) == 0
                && CobStringUtils.compare(container.getCardRecord()
                        .getCardExpiraionDate().substring(8, 10), container
                        .getWsThisProgcommarea().getCcupOldDetails()
                        .getCcupOldCarddata().getCcupOldExpiraionDate()
                        .getCcupOldExpday()) == 0
                && CobStringUtils.compare(container.getCardRecord()
                        .getCardActiveStatus(), container
                        .getWsThisProgcommarea().getCcupOldDetails()
                        .getCcupOldCarddata().getCcupOldCrdstcd()) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1515] CONTINUE statement
        } else {
            // [T-Up#INFO][COCRDUPC.cbl:1517] SET statement
            container.getWsMiscStorage().setWsReturnMsg(
                    DATA_WAS_CHANGED_BEFORE_UPDATE);
            // [T-Up#INFO][COCRDUPC.cbl:1518] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupOldDetails()
                    .setCcupOldCvvCd(
                            StringUtils.leftPad(String.valueOf(Math
                                    .abs(container.getCardRecord()
                                            .getCardCvvCd())), 3, '0'));
            // [T-Up#INFO][COCRDUPC.cbl:1519] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupOldDetails()
                    .getCcupOldCarddata()
                    .setCcupOldCrdname(
                            container.getCardRecord().getCardEmbossedName());
            // [T-Up#INFO][COCRDUPC.cbl:1520] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupOldDetails()
                    .getCcupOldCarddata()
                    .getCcupOldExpiraionDate()
                    .setCcupOldExpyear(
                            container.getCardRecord().getCardExpiraionDate()
                                    .substring(0, 4));
            // [T-Up#INFO][COCRDUPC.cbl:1521] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupOldDetails()
                    .getCcupOldCarddata()
                    .getCcupOldExpiraionDate()
                    .setCcupOldExpmon(
                            container.getCardRecord().getCardExpiraionDate()
                                    .substring(5, 7));
            // [T-Up#INFO][COCRDUPC.cbl:1522] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupOldDetails()
                    .getCcupOldCarddata()
                    .getCcupOldExpiraionDate()
                    .setCcupOldExpday(
                            container.getCardRecord().getCardExpiraionDate()
                                    .substring(8, 10));
            // [T-Up#INFO][COCRDUPC.cbl:1523] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupOldDetails()
                    .getCcupOldCarddata()
                    .setCcupOldCrdstcd(
                            container.getCardRecord().getCardActiveStatus());
            // [T-Up#INFO][COCRDUPC.cbl:1524] GO TO statement
            context.setGotoTarget(_9200WriteProcessingExit);
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl:1525] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:1527] 9300-CHECK-CHANGE-IN-REC-EXIT Paragraph</p>
     */
    void _9300CheckChangeInRecExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl:1528] EXIT statement
    }

    // ******************************************************************
    // *Common code to store PFKey
    // ******************************************************************
    //       *COPY 'CSSTRPFY'
    //       *    .
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSTRPFY.cpy)
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************

    /** 
     * <p>[T-Up#INFO][CSSTRPFY.cpy:18] YYYY-STORE-PFKEY Paragraph</p>
     */
    void yyyyStorePfkey(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // *****************************************************************
        // * Map AID to PFKey in COMMON Area
        // *****************************************************************
        // [T-Up#INFO][CSSTRPFY.cpy:22] EVALUATE statement
        if (CobStringUtils.compare(task.getPressedKey(), container.getDfhaid()
                .getDfhenter()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:24] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_ENTER);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhclear()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:26] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_CLEAR);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpa1()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:28] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PA1);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpa2()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:30] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PA2);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf1()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:32] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK01);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf2()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:34] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK02);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf3()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:36] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK03);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf4()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:38] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK04);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf5()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:40] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK05);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf6()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:42] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK06);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf7()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:44] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK07);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf8()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:46] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK08);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf9()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:48] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK09);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf10()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:50] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK10);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf11()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:52] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK11);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf12()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:54] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK12);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf13()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:56] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK01);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf14()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:58] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK02);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf15()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:60] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK03);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf16()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:62] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK04);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf17()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:64] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK05);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf18()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:66] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK06);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf19()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:68] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK07);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf20()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:70] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK08);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf21()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:72] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK09);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf22()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:74] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK10);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf23()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:76] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK11);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf24()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:78] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK12);
        }
    }

    /** 
     * <p>[T-Up#INFO][CSSTRPFY.cpy:81] YYYY-STORE-PFKEY-EXIT Paragraph</p>
     */
    void yyyyStorePfkeyExit(OpenFrameContext context) {
        // [T-Up#INFO][CSSTRPFY.cpy:82] EXIT statement
    }

    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:59 CDT
    // *

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:1537] ABEND-ROUTINE Paragraph</p>
     */
    void abendRoutine(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl:1539] IF statement
        if (CobStringUtils.compare(container.getAbendData().getAbendMsg(),
                StringUtils.repeat((char) 0x00, 72)) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl:1540] MOVE statement
            container.getAbendData().setAbendMsg("UNEXPECTED ABEND OCCURRED.");
        }
        // [T-Up#INFO][COCRDUPC.cbl:1543] MOVE statement
        container.getAbendData().setAbendCulprit(
                container.getWsLiterals().getLitThispgm());
        // [T-Up#INFO][COCRDUPC.cbl:1545] EXEC_CICS statement
        /*
                       EXEC CICS SEND
                                        FROM (ABEND-DATA)
                                        LENGTH(LENGTH OF ABEND-DATA)
                                        NOHANDLE
                                        ERASE
                       END-EXEC
         */
        try {
            task.getOutputDto().getSystemDto()
                    .setNotification(container.getAbendData());
        } catch (OnlineException e) {
        }
        // [T-Up#INFO][COCRDUPC.cbl:1552] EXEC_CICS statement
        /*
                       EXEC CICS HANDLE ABEND
                            CANCEL
                       END-EXEC
         */
        abendHandler.cancel();
        // [T-Up#INFO][COCRDUPC.cbl:1556] EXEC_CICS statement
        /*
                       EXEC CICS ABEND
                            ABCODE('9999')
                       END-EXEC
         */
        throw new AbendException();
    }

    /** 
     * <p>[T-Up#INFO][COCRDUPC.cbl:1560] ABEND-ROUTINE-EXIT Paragraph</p>
     */
    void abendRoutineExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl:1561] EXIT statement
    }

    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:12:33 CDT
    // *
}
