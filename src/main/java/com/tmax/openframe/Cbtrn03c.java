package com.tmax.openframe;

import static com.tmax.openframe.variable.Cbtrn03cVariableContainer.*;
import com.tmax.openframe.file.*;
import com.tmax.openframe.mapper.Cbtrn03cMapperInterface;
import com.tmax.openframe.runtime.cobol.CobStringUtils;
import com.tmax.openframe.runtime.context.OpenFrameContext;
import com.tmax.openframe.runtime.file.FileStatus;
import com.tmax.openframe.runtime.flow.ControlManager;
import com.tmax.openframe.variable.Cbtrn03cVariableContainer;
import com.tmax.openframe.variable.group.Cbtrn03cFdCardxrefRec;
import com.tmax.openframe.variable.group.Cbtrn03cFdTranCatRecord;
import com.tmax.openframe.variable.group.Cbtrn03cFdTranfileRec;
import com.tmax.openframe.variable.group.Cbtrn03cFdTrantypeRec;
import com.tmax.openframe.variable.group.Cbtrn03cTransactionDetailReport;
import java.math.*;
import java.util.*;
import java.util.function.Consumer;
import lombok.*;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Primary;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:11 KST</p>
 * <hr>
 * <p>Java class for defining logics of COBOL program</p>
 * <ul>
 * <li>The name of COBOL program: CBTRN03C.cbl</li>
 * <li>Variable container class: {@link Cbtrn03cVariableContainer}</li>
 * <li>The list of files used in the program</li>
 * <ul>
 * <li>TRANSACT-FILE: FD class {@code ->} {@link Cbtrn03cFdTransactFile}, record class {@code -> } {@link Cbtrn03cFdTranfileRec}</li>
 * <li>XREF-FILE: FD class {@code ->} {@link Cbtrn03cFdXrefFile}, record class {@code -> } {@link Cbtrn03cFdCardxrefRec}</li>
 * <li>TRANTYPE-FILE: FD class {@code ->} {@link Cbtrn03cFdTrantypeFile}, record class {@code -> } {@link Cbtrn03cFdTrantypeRec}</li>
 * <li>TRANCATG-FILE: FD class {@code ->} {@link Cbtrn03cFdTrancatgFile}, record class {@code -> } {@link Cbtrn03cFdTranCatRecord}</li>
 * <li>REPORT-FILE: FD class {@code ->} {@link Cbtrn03cFdReportFile}, record class {@code -> } {@link String}</li>
 * <li>DATE-PARMS-FILE: FD class {@code ->} {@link Cbtrn03cFdDateParmsFile}, record class {@code -> } {@link String}</li>
 * </ul>
 * </ul>
 */
@Service
@RequiredArgsConstructor
@Transactional
@Primary
public class Cbtrn03c {
    // *
    /** 
     * <p>Class that manages an execution flow of the program</p>
     */
    protected final ControlManager controlManager;
    Consumer<OpenFrameContext> unnamedSentence = this::unnamedSentence;
    Consumer<OpenFrameContext> _0550DateparmRead = this::_0550DateparmRead;
    Consumer<OpenFrameContext> _1000TranfileGetNext = this::_1000TranfileGetNext;
    Consumer<OpenFrameContext> _1100WriteTransactionReport = this::_1100WriteTransactionReport;
    Consumer<OpenFrameContext> _1110WritePageTotals = this::_1110WritePageTotals;
    Consumer<OpenFrameContext> _1120WriteAccountTotals = this::_1120WriteAccountTotals;
    Consumer<OpenFrameContext> _1110WriteGrandTotals = this::_1110WriteGrandTotals;
    Consumer<OpenFrameContext> _1120WriteHeaders = this::_1120WriteHeaders;
    Consumer<OpenFrameContext> _1111WriteReportRec = this::_1111WriteReportRec;
    Consumer<OpenFrameContext> _1120WriteDetail = this::_1120WriteDetail;
    Consumer<OpenFrameContext> _0000TranfileOpen = this::_0000TranfileOpen;
    Consumer<OpenFrameContext> _0100ReptfileOpen = this::_0100ReptfileOpen;
    Consumer<OpenFrameContext> _0200CardxrefOpen = this::_0200CardxrefOpen;
    Consumer<OpenFrameContext> _0300TrantypeOpen = this::_0300TrantypeOpen;
    Consumer<OpenFrameContext> _0400TrancatgOpen = this::_0400TrancatgOpen;
    Consumer<OpenFrameContext> _0500DateparmOpen = this::_0500DateparmOpen;
    Consumer<OpenFrameContext> _1500ALookupXref = this::_1500ALookupXref;
    Consumer<OpenFrameContext> _1500BLookupTrantype = this::_1500BLookupTrantype;
    Consumer<OpenFrameContext> _1500CLookupTrancatg = this::_1500CLookupTrancatg;
    Consumer<OpenFrameContext> _9000TranfileClose = this::_9000TranfileClose;
    Consumer<OpenFrameContext> _9100ReptfileClose = this::_9100ReptfileClose;
    Consumer<OpenFrameContext> _9200CardxrefClose = this::_9200CardxrefClose;
    Consumer<OpenFrameContext> _9300TrantypeClose = this::_9300TrantypeClose;
    Consumer<OpenFrameContext> _9400TrancatgClose = this::_9400TrancatgClose;
    Consumer<OpenFrameContext> _9500DateparmClose = this::_9500DateparmClose;
    Consumer<OpenFrameContext> _9999AbendProgram = this::_9999AbendProgram;
    Consumer<OpenFrameContext> _9910DisplayIoStatus = this::_9910DisplayIoStatus;
    /** 
     * <p>Execution flow of COBOL program that defined in the procedure division</p>
     */
    ArrayList<Consumer> methodList = new ArrayList<>();
    {
        methodList.add(unnamedSentence);
        methodList.add(_0550DateparmRead);
        methodList.add(_1000TranfileGetNext);
        methodList.add(_1100WriteTransactionReport);
        methodList.add(_1110WritePageTotals);
        methodList.add(_1120WriteAccountTotals);
        methodList.add(_1110WriteGrandTotals);
        methodList.add(_1120WriteHeaders);
        methodList.add(_1111WriteReportRec);
        methodList.add(_1120WriteDetail);
        methodList.add(_0000TranfileOpen);
        methodList.add(_0100ReptfileOpen);
        methodList.add(_0200CardxrefOpen);
        methodList.add(_0300TrantypeOpen);
        methodList.add(_0400TrancatgOpen);
        methodList.add(_0500DateparmOpen);
        methodList.add(_1500ALookupXref);
        methodList.add(_1500BLookupTrantype);
        methodList.add(_1500CLookupTrancatg);
        methodList.add(_9000TranfileClose);
        methodList.add(_9100ReptfileClose);
        methodList.add(_9200CardxrefClose);
        methodList.add(_9300TrantypeClose);
        methodList.add(_9400TrancatgClose);
        methodList.add(_9500DateparmClose);
        methodList.add(_9999AbendProgram);
        methodList.add(_9910DisplayIoStatus);
    }
    @Autowired
    private Cbtrn03cFileOpTransactFile fdTransactFile;
    @Autowired
    private Cbtrn03cFileOpXrefFile fdXrefFile;
    @Autowired
    private Cbtrn03cFileOpTrantypeFile fdTrantypeFile;
    @Autowired
    private Cbtrn03cFileOpTrancatgFile fdTrancatgFile;
    @Autowired
    private Cbtrn03cFileOpReportFile fdReportFile;
    @Autowired
    private Cbtrn03cFileOpDateParmsFile fdDateParmsFile;

    /** 
     * <p>Method for executing a program logic that defined in the procedure division</p>
     * @param generalContext context that is necessary for executing program
     * @return return value of program
     */
    public int run(Map<String, Object> generalContext) {
        OpenFrameContext context = new OpenFrameContext(generalContext,
                methodList);
        if (context.getProgramVariableContainer("Cbtrn03c") == null) {
            Cbtrn03cVariableContainer container = new Cbtrn03cVariableContainer();
            context.setProgramVariableContainer("Cbtrn03c", container);
        }
        controlManager.run(context);
        return context.getReturnValue();
    }

    // ******************************************************************
    // * Program     : CBTRN03C.CBL
    // * Application : CardDemo
    // * Type        : BATCH COBOL Program
    // * Function    : Print the transaction detail report.
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // *****************************************************************

    void unnamedSentence(OpenFrameContext context) {
        BigDecimal tempBigDecimal1;
        BigDecimal tempBigDecimal2;
        BigDecimal tempBigDecimal3;
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        // [T-Up#INFO][CBTRN03C.cbl:160] DISPLAY statement
        System.out.println("START OF EXECUTION OF PROGRAM CBTRN03C");
        // [T-Up#INFO][CBTRN03C.cbl:161] PERFORM statement
        controlManager.run(context, _0000TranfileOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN03C.cbl:162] PERFORM statement
        controlManager.run(context, _0100ReptfileOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN03C.cbl:163] PERFORM statement
        controlManager.run(context, _0200CardxrefOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN03C.cbl:164] PERFORM statement
        controlManager.run(context, _0300TrantypeOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN03C.cbl:165] PERFORM statement
        controlManager.run(context, _0400TrancatgOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN03C.cbl:166] PERFORM statement
        controlManager.run(context, _0500DateparmOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN03C.cbl:168] PERFORM statement
        controlManager.run(context, _0550DateparmRead);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN03C.cbl:170] PERFORM statement
        Sentence: while (!(CobStringUtils
                .compare(container.getEndOfFile(), "Y") == 0)) {
            // [T-Up#INFO][CBTRN03C.cbl:171] IF statement
            if (CobStringUtils.compare(container.getEndOfFile(), "N") == 0) {
                // [T-Up#INFO][CBTRN03C.cbl:172] PERFORM statement
                controlManager.run(context, _1000TranfileGetNext);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][CBTRN03C.cbl:173] IF statement
                if (CobStringUtils.compare(container.getTranRecord()
                        .getTranProcTs().substring(0, 10), container
                        .getWsDateparmRecord().getWsStartDate()) >= 0
                        && CobStringUtils.compare(container.getTranRecord()
                                .getTranProcTs().substring(0, 10), container
                                .getWsDateparmRecord().getWsEndDate()) <= 0) {
                    // [T-Up#INFO][CBTRN03C.cbl:175] CONTINUE statement
                } else {
                    // [T-Up#INFO][CBTRN03C.cbl:177] NEXT_SENTENCE statement
                    break Sentence;
                }
                // [T-Up#INFO][CBTRN03C.cbl:179] IF statement
                if (CobStringUtils.compare(container.getEndOfFile(), "N") == 0) {
                    // [T-Up#INFO][CBTRN03C.cbl:180] DISPLAY statement
                    System.out.println(container.getTranRecord());
                    // [T-Up#INFO][CBTRN03C.cbl:181] IF statement
                    if (CobStringUtils.compare(container.getWsReportVars()
                            .getWsCurrCardNum(), container.getTranRecord()
                            .getTranCardNum()) != 0) {
                        // [T-Up#INFO][CBTRN03C.cbl:182] IF statement
                        if (CobStringUtils.compare(container.getWsReportVars()
                                .getWsFirstTime(), "N") == 0) {
                            // [T-Up#INFO][CBTRN03C.cbl:183] PERFORM statement
                            controlManager
                                    .run(context, _1120WriteAccountTotals);
                            if (controlManager.isTerminate(context)) {
                                return;
                            }
                        }
                        // [T-Up#INFO][CBTRN03C.cbl:185] MOVE statement
                        container.getWsReportVars().setWsCurrCardNum(
                                container.getTranRecord().getTranCardNum());
                        // [T-Up#INFO][CBTRN03C.cbl:186] MOVE statement
                        container.getFdCardxrefRec().setFdXrefCardNum(
                                container.getTranRecord().getTranCardNum());
                        // [T-Up#INFO][CBTRN03C.cbl:187] PERFORM statement
                        controlManager.run(context, _1500ALookupXref);
                        if (controlManager.isTerminate(context)) {
                            return;
                        }
                    }
                    // [T-Up#INFO][CBTRN03C.cbl:189] MOVE statement
                    container.getFdTrantypeRec().setFdTranType(
                            container.getTranRecord().getTranTypeCd());
                    // [T-Up#INFO][CBTRN03C.cbl:190] PERFORM statement
                    controlManager.run(context, _1500BLookupTrantype);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                    // [T-Up#INFO][CBTRN03C.cbl:191] MOVE statement
                    container
                            .getFdTranCatRecord()
                            .getFdTranCatKey()
                            .setFdTranTypeCd(
                                    container.getTranRecord().getTranTypeCd());
                    // [T-Up#INFO][CBTRN03C.cbl:193] MOVE statement
                    container
                            .getFdTranCatRecord()
                            .getFdTranCatKey()
                            .setFdTranCatCd(
                                    container.getTranRecord().getTranCatCd());
                    // [T-Up#INFO][CBTRN03C.cbl:195] PERFORM statement
                    controlManager.run(context, _1500CLookupTrancatg);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                    // [T-Up#INFO][CBTRN03C.cbl:196] PERFORM statement
                    controlManager.run(context, _1100WriteTransactionReport);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                } else {
                    // [T-Up#INFO][CBTRN03C.cbl:198] DISPLAY statement
                    System.out.print("TRAN-AMT ");
                    System.out.println(container.getTranRecord().getTranAmt());
                    // [T-Up#INFO][CBTRN03C.cbl:199] DISPLAY statement
                    System.out.print("WS-PAGE-TOTAL");
                    System.out.println(container.getWsReportVars()
                            .getWsPageTotal());
                    // [T-Up#INFO][CBTRN03C.cbl:200] ADD statement
                    tempBigDecimal1 = container.getTranRecord().getTranAmt();
                    tempBigDecimal2 = container.getWsReportVars()
                            .getWsPageTotal().add(tempBigDecimal1);
                    container.getWsReportVars().setWsPageTotal(tempBigDecimal2);
                    tempBigDecimal3 = container.getWsReportVars()
                            .getWsAccountTotal().add(tempBigDecimal1);
                    container.getWsReportVars().setWsAccountTotal(
                            tempBigDecimal3);
                    // [T-Up#INFO][CBTRN03C.cbl:202] PERFORM statement
                    controlManager.run(context, _1110WritePageTotals);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                    // [T-Up#INFO][CBTRN03C.cbl:203] PERFORM statement
                    controlManager.run(context, _1110WriteGrandTotals);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                }
            }
        }
        // [T-Up#INFO][CBTRN03C.cbl:208] PERFORM statement
        controlManager.run(context, _9000TranfileClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN03C.cbl:209] PERFORM statement
        controlManager.run(context, _9100ReptfileClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN03C.cbl:210] PERFORM statement
        controlManager.run(context, _9200CardxrefClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN03C.cbl:211] PERFORM statement
        controlManager.run(context, _9300TrantypeClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN03C.cbl:212] PERFORM statement
        controlManager.run(context, _9400TrancatgClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN03C.cbl:213] PERFORM statement
        controlManager.run(context, _9500DateparmClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN03C.cbl:215] DISPLAY statement
        System.out.println("END OF EXECUTION OF PROGRAM CBTRN03C");
        // [T-Up#INFO][CBTRN03C.cbl:217] GOBACK statement
        context.setReturnFlag(true);
        return;
    }

    // * Read the date parameter file.

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:220] 0550-DATEPARM-READ Paragraph</p>
     */
    void _0550DateparmRead(OpenFrameContext context) {
        String tempString1;
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        tempString1 = fdDateParmsFile.readNext(context);
        if (tempString1 != null) {
            container.setFdDateparmRec(tempString1);
            container.getWsDateparmRecord().set(container.getFdDateparmRec());
        }
        // [T-Up#INFO][CBTRN03C.cbl:222] EVALUATE statement
        switch (container.getDateparmStatus().toString()) {
        case "00": {
            // [T-Up#INFO][CBTRN03C.cbl:224] MOVE statement
            container.setApplResult(0);
            break;
        }
        case "10": {
            // [T-Up#INFO][CBTRN03C.cbl:226] MOVE statement
            container.setApplResult(16);
            break;
        }
        default: {
            // [T-Up#INFO][CBTRN03C.cbl:228] MOVE statement
            container.setApplResult(12);
            break;
        }
        }
        // [T-Up#INFO][CBTRN03C.cbl:231] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN03C.cbl:232] DISPLAY statement
            System.out.print("Reporting from ");
            System.out.print(container.getWsDateparmRecord().getWsStartDate());
            System.out.print(" to ");
            System.out.println(container.getWsDateparmRecord().getWsEndDate());
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:235] IF statement
            if (container.getApplResult() == APPL_EOF) {
                // [T-Up#INFO][CBTRN03C.cbl:236] MOVE statement
                container.setEndOfFile("Y");
            } else {
                // [T-Up#INFO][CBTRN03C.cbl:238] DISPLAY statement
                System.out.println("ERROR READING DATEPARM FILE");
                // [T-Up#INFO][CBTRN03C.cbl:239] MOVE statement
                Cbtrn03cMapperInterface.Cbtrn03cDateparmStatusToCbtrn03cIoStatus
                        .set(container.getDateparmStatus(),
                                container.getIoStatus());
                // [T-Up#INFO][CBTRN03C.cbl:240] PERFORM statement
                controlManager.run(context, _9910DisplayIoStatus);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][CBTRN03C.cbl:241] PERFORM statement
                controlManager.run(context, _9999AbendProgram);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
        }
    }

    // *****************************************************************
    // * I/O ROUTINES TO ACCESS A KSDS, VSAM DATA SET...               *
    // *****************************************************************

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:248] 1000-TRANFILE-GET-NEXT Paragraph</p>
     */
    void _1000TranfileGetNext(OpenFrameContext context) {
        Cbtrn03cFdTranfileRec tempCbtrn03cFdTranfileRec1;
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        tempCbtrn03cFdTranfileRec1 = fdTransactFile.readNext(context);
        if (tempCbtrn03cFdTranfileRec1 != null) {
            container.setFdTranfileRec(tempCbtrn03cFdTranfileRec1);
            Cbtrn03cMapperInterface.Cbtrn03cFdTranfileRecToTranRecord.set(
                    container.getFdTranfileRec(), container.getTranRecord());
        }
        // [T-Up#INFO][CBTRN03C.cbl:251] EVALUATE statement
        switch (container.getTranfileStatus().toString()) {
        case "00": {
            // [T-Up#INFO][CBTRN03C.cbl:253] MOVE statement
            container.setApplResult(0);
            break;
        }
        case "10": {
            // [T-Up#INFO][CBTRN03C.cbl:255] MOVE statement
            container.setApplResult(16);
            break;
        }
        default: {
            // [T-Up#INFO][CBTRN03C.cbl:257] MOVE statement
            container.setApplResult(12);
            break;
        }
        }
        // [T-Up#INFO][CBTRN03C.cbl:260] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN03C.cbl:261] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:263] IF statement
            if (container.getApplResult() == APPL_EOF) {
                // [T-Up#INFO][CBTRN03C.cbl:264] MOVE statement
                container.setEndOfFile("Y");
            } else {
                // [T-Up#INFO][CBTRN03C.cbl:266] DISPLAY statement
                System.out.println("ERROR READING TRANSACTION FILE");
                // [T-Up#INFO][CBTRN03C.cbl:267] MOVE statement
                Cbtrn03cMapperInterface.Cbtrn03cTranfileStatusToCbtrn03cIoStatus
                        .set(container.getTranfileStatus(),
                                container.getIoStatus());
                // [T-Up#INFO][CBTRN03C.cbl:268] PERFORM statement
                controlManager.run(context, _9910DisplayIoStatus);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][CBTRN03C.cbl:269] PERFORM statement
                controlManager.run(context, _9999AbendProgram);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
        }
        // [T-Up#INFO][CBTRN03C.cbl:272] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:274] 1100-WRITE-TRANSACTION-REPORT Paragraph</p>
     */
    void _1100WriteTransactionReport(OpenFrameContext context) {
        BigDecimal tempBigDecimal1;
        BigDecimal tempBigDecimal2;
        BigDecimal tempBigDecimal3;
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        // [T-Up#INFO][CBTRN03C.cbl:275] IF statement
        if (CobStringUtils.compare(
                container.getWsReportVars().getWsFirstTime(), "Y") == 0) {
            // [T-Up#INFO][CBTRN03C.cbl:276] MOVE statement
            container.getWsReportVars().setWsFirstTime("N");
            // [T-Up#INFO][CBTRN03C.cbl:277] MOVE statement
            container.getReportNameHeader().setReptStartDate(
                    container.getWsDateparmRecord().getWsStartDate());
            // [T-Up#INFO][CBTRN03C.cbl:278] MOVE statement
            container.getReportNameHeader().setReptEndDate(
                    container.getWsDateparmRecord().getWsEndDate());
            // [T-Up#INFO][CBTRN03C.cbl:279] PERFORM statement
            controlManager.run(context, _1120WriteHeaders);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN03C.cbl:282] IF statement
        if (Math.floorMod(container.getWsReportVars().getWsLineCounter(),
                container.getWsReportVars().getWsPageSize()) == 0) {
            // [T-Up#INFO][CBTRN03C.cbl:283] PERFORM statement
            controlManager.run(context, _1110WritePageTotals);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN03C.cbl:284] PERFORM statement
            controlManager.run(context, _1120WriteHeaders);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN03C.cbl:287] ADD statement
        tempBigDecimal1 = container.getTranRecord().getTranAmt();
        tempBigDecimal2 = container.getWsReportVars().getWsPageTotal()
                .add(tempBigDecimal1);
        container.getWsReportVars().setWsPageTotal(tempBigDecimal2);
        tempBigDecimal3 = container.getWsReportVars().getWsAccountTotal()
                .add(tempBigDecimal1);
        container.getWsReportVars().setWsAccountTotal(tempBigDecimal3);
        // [T-Up#INFO][CBTRN03C.cbl:289] PERFORM statement
        controlManager.run(context, _1120WriteDetail);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN03C.cbl:290] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:293] 1110-WRITE-PAGE-TOTALS Paragraph</p>
     */
    void _1110WritePageTotals(OpenFrameContext context) {
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        // [T-Up#INFO][CBTRN03C.cbl:294] MOVE statement
        container.getReportPageTotals().setReptPageTotal(
                container.getWsReportVars().getWsPageTotal().longValue());
        // [T-Up#INFO][CBTRN03C.cbl:295] MOVE statement
        container.setFdReptfileRec(container.getReportPageTotals().get());
        // [T-Up#INFO][CBTRN03C.cbl:296] PERFORM statement
        controlManager.run(context, _1111WriteReportRec);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN03C.cbl:297] ADD statement
        container.getWsReportVars().setWsGrandTotal(
                container.getWsReportVars().getWsGrandTotal()
                        .add(container.getWsReportVars().getWsPageTotal()));
        // [T-Up#INFO][CBTRN03C.cbl:298] MOVE statement
        container.getWsReportVars().setWsPageTotal(BigDecimal.valueOf(0));
        // [T-Up#INFO][CBTRN03C.cbl:299] ADD statement
        container.getWsReportVars().setWsLineCounter(
                container.getWsReportVars().getWsLineCounter() + 1);
        // [T-Up#INFO][CBTRN03C.cbl:300] MOVE statement
        container.setFdReptfileRec(container.getTransactionHeader2());
        // [T-Up#INFO][CBTRN03C.cbl:301] PERFORM statement
        controlManager.run(context, _1111WriteReportRec);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN03C.cbl:302] ADD statement
        container.getWsReportVars().setWsLineCounter(
                container.getWsReportVars().getWsLineCounter() + 1);
        // [T-Up#INFO][CBTRN03C.cbl:304] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:306] 1120-WRITE-ACCOUNT-TOTALS Paragraph</p>
     */
    void _1120WriteAccountTotals(OpenFrameContext context) {
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        // [T-Up#INFO][CBTRN03C.cbl:307] MOVE statement
        container.getReportAccountTotals().setReptAccountTotal(
                container.getWsReportVars().getWsAccountTotal().longValue());
        // [T-Up#INFO][CBTRN03C.cbl:308] MOVE statement
        container.setFdReptfileRec(container.getReportAccountTotals().get());
        // [T-Up#INFO][CBTRN03C.cbl:309] PERFORM statement
        controlManager.run(context, _1111WriteReportRec);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN03C.cbl:310] MOVE statement
        container.getWsReportVars().setWsAccountTotal(BigDecimal.valueOf(0));
        // [T-Up#INFO][CBTRN03C.cbl:311] ADD statement
        container.getWsReportVars().setWsLineCounter(
                container.getWsReportVars().getWsLineCounter() + 1);
        // [T-Up#INFO][CBTRN03C.cbl:312] MOVE statement
        container.setFdReptfileRec(container.getTransactionHeader2());
        // [T-Up#INFO][CBTRN03C.cbl:313] PERFORM statement
        controlManager.run(context, _1111WriteReportRec);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN03C.cbl:314] ADD statement
        container.getWsReportVars().setWsLineCounter(
                container.getWsReportVars().getWsLineCounter() + 1);
        // [T-Up#INFO][CBTRN03C.cbl:316] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:318] 1110-WRITE-GRAND-TOTALS Paragraph</p>
     */
    void _1110WriteGrandTotals(OpenFrameContext context) {
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        // [T-Up#INFO][CBTRN03C.cbl:319] MOVE statement
        container.getReportGrandTotals().setReptGrandTotal(
                container.getWsReportVars().getWsGrandTotal().longValue());
        // [T-Up#INFO][CBTRN03C.cbl:320] MOVE statement
        container.setFdReptfileRec(container.getReportGrandTotals().get());
        // [T-Up#INFO][CBTRN03C.cbl:321] PERFORM statement
        controlManager.run(context, _1111WriteReportRec);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN03C.cbl:322] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:324] 1120-WRITE-HEADERS Paragraph</p>
     */
    void _1120WriteHeaders(OpenFrameContext context) {
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        // [T-Up#INFO][CBTRN03C.cbl:325] MOVE statement
        container.setFdReptfileRec(container.getReportNameHeader().get());
        // [T-Up#INFO][CBTRN03C.cbl:326] PERFORM statement
        controlManager.run(context, _1111WriteReportRec);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN03C.cbl:327] ADD statement
        container.getWsReportVars().setWsLineCounter(
                container.getWsReportVars().getWsLineCounter() + 1);
        // [T-Up#INFO][CBTRN03C.cbl:329] MOVE statement
        container
                .setFdReptfileRec(container.getWsReportVars().getWsBlankLine());
        // [T-Up#INFO][CBTRN03C.cbl:330] PERFORM statement
        controlManager.run(context, _1111WriteReportRec);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN03C.cbl:331] ADD statement
        container.getWsReportVars().setWsLineCounter(
                container.getWsReportVars().getWsLineCounter() + 1);
        // [T-Up#INFO][CBTRN03C.cbl:333] MOVE statement
        container.setFdReptfileRec(container.getTransactionHeader1().get());
        // [T-Up#INFO][CBTRN03C.cbl:334] PERFORM statement
        controlManager.run(context, _1111WriteReportRec);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN03C.cbl:335] ADD statement
        container.getWsReportVars().setWsLineCounter(
                container.getWsReportVars().getWsLineCounter() + 1);
        // [T-Up#INFO][CBTRN03C.cbl:337] MOVE statement
        container.setFdReptfileRec(container.getTransactionHeader2());
        // [T-Up#INFO][CBTRN03C.cbl:338] PERFORM statement
        controlManager.run(context, _1111WriteReportRec);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN03C.cbl:339] ADD statement
        container.getWsReportVars().setWsLineCounter(
                container.getWsReportVars().getWsLineCounter() + 1);
        // [T-Up#INFO][CBTRN03C.cbl:341] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:343] 1111-WRITE-REPORT-REC Paragraph</p>
     */
    void _1111WriteReportRec(OpenFrameContext context) {
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        // [T-Up#INFO][CBTRN03C.cbl:345] WRITE statement
        fdReportFile.write(context, container.getFdReptfileRec());
        // [T-Up#INFO][CBTRN03C.cbl:346] IF statement
        if (CobStringUtils.compare(container.getTranreptStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN03C.cbl:347] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:349] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN03C.cbl:351] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN03C.cbl:352] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:354] DISPLAY statement
            System.out.println("ERROR WRITING REPTFILE");
            // [T-Up#INFO][CBTRN03C.cbl:355] MOVE statement
            Cbtrn03cMapperInterface.Cbtrn03cTranreptStatusToCbtrn03cIoStatus
                    .set(container.getTranreptStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN03C.cbl:356] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN03C.cbl:357] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN03C.cbl:359] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:361] 1120-WRITE-DETAIL Paragraph</p>
     */
    void _1120WriteDetail(OpenFrameContext context) {
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        // [T-Up#INFO][CBTRN03C.cbl:362] INITIALIZE statement
        container.setTransactionDetailReport(Cbtrn03cTransactionDetailReport
                .createDefaultValueInstance());
        // [T-Up#INFO][CBTRN03C.cbl:363] MOVE statement
        container.getTransactionDetailReport().setTranReportTransId(
                container.getTranRecord().getTranId());
        // [T-Up#INFO][CBTRN03C.cbl:364] MOVE statement
        container.getTransactionDetailReport().setTranReportAccountId(
                StringUtils.leftPad(String.valueOf(Math.abs(container
                        .getCardXrefRecord().getXrefAcctId())), 11, '0'));
        // [T-Up#INFO][CBTRN03C.cbl:365] MOVE statement
        container.getTransactionDetailReport().setTranReportTypeCd(
                container.getTranRecord().getTranTypeCd());
        // [T-Up#INFO][CBTRN03C.cbl:366] MOVE statement
        container.getTransactionDetailReport().setTranReportTypeDesc(
                container.getTranTypeRecord().getTranTypeDesc());
        // [T-Up#INFO][CBTRN03C.cbl:367] MOVE statement
        container.getTransactionDetailReport().setTranReportCatCd(
                container.getTranRecord().getTranCatCd());
        // [T-Up#INFO][CBTRN03C.cbl:368] MOVE statement
        container.getTransactionDetailReport().setTranReportCatDesc(
                container.getTranCatRecord().getTranCatTypeDesc());
        // [T-Up#INFO][CBTRN03C.cbl:369] MOVE statement
        container.getTransactionDetailReport().setTranReportSource(
                container.getTranRecord().getTranSource());
        // [T-Up#INFO][CBTRN03C.cbl:370] MOVE statement
        container.getTransactionDetailReport().setTranReportAmt(
                container.getTranRecord().getTranAmt().longValue());
        // [T-Up#INFO][CBTRN03C.cbl:371] MOVE statement
        container
                .setFdReptfileRec(container.getTransactionDetailReport().get());
        // [T-Up#INFO][CBTRN03C.cbl:372] PERFORM statement
        controlManager.run(context, _1111WriteReportRec);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN03C.cbl:373] ADD statement
        container.getWsReportVars().setWsLineCounter(
                container.getWsReportVars().getWsLineCounter() + 1);
        // [T-Up#INFO][CBTRN03C.cbl:374] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:376] 0000-TRANFILE-OPEN Paragraph</p>
     */
    void _0000TranfileOpen(OpenFrameContext context) {
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        // [T-Up#INFO][CBTRN03C.cbl:377] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN03C.cbl:378] OPEN statement
        fdTransactFile.open(context);
        // [T-Up#INFO][CBTRN03C.cbl:379] IF statement
        if (CobStringUtils.compare(container.getTranfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN03C.cbl:380] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:382] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN03C.cbl:384] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN03C.cbl:385] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:387] DISPLAY statement
            System.out.println("ERROR OPENING TRANFILE");
            // [T-Up#INFO][CBTRN03C.cbl:388] MOVE statement
            Cbtrn03cMapperInterface.Cbtrn03cTranfileStatusToCbtrn03cIoStatus
                    .set(container.getTranfileStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN03C.cbl:389] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN03C.cbl:390] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN03C.cbl:392] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:394] 0100-REPTFILE-OPEN Paragraph</p>
     */
    void _0100ReptfileOpen(OpenFrameContext context) {
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        // [T-Up#INFO][CBTRN03C.cbl:395] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN03C.cbl:396] OPEN statement
        fdReportFile.open(context);
        // [T-Up#INFO][CBTRN03C.cbl:397] IF statement
        if (CobStringUtils.compare(container.getTranreptStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN03C.cbl:398] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:400] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN03C.cbl:402] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN03C.cbl:403] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:405] DISPLAY statement
            System.out.println("ERROR OPENING REPTFILE");
            // [T-Up#INFO][CBTRN03C.cbl:406] MOVE statement
            Cbtrn03cMapperInterface.Cbtrn03cTranreptStatusToCbtrn03cIoStatus
                    .set(container.getTranreptStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN03C.cbl:407] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN03C.cbl:408] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN03C.cbl:410] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:412] 0200-CARDXREF-OPEN Paragraph</p>
     */
    void _0200CardxrefOpen(OpenFrameContext context) {
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        // [T-Up#INFO][CBTRN03C.cbl:413] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN03C.cbl:414] OPEN statement
        fdXrefFile.open(context);
        // [T-Up#INFO][CBTRN03C.cbl:415] IF statement
        if (CobStringUtils.compare(container.getCardxrefStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN03C.cbl:416] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:418] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN03C.cbl:420] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN03C.cbl:421] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:423] DISPLAY statement
            System.out.println("ERROR OPENING CROSS REF FILE");
            // [T-Up#INFO][CBTRN03C.cbl:424] MOVE statement
            Cbtrn03cMapperInterface.Cbtrn03cCardxrefStatusToCbtrn03cIoStatus
                    .set(container.getCardxrefStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN03C.cbl:425] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN03C.cbl:426] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN03C.cbl:428] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:430] 0300-TRANTYPE-OPEN Paragraph</p>
     */
    void _0300TrantypeOpen(OpenFrameContext context) {
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        // [T-Up#INFO][CBTRN03C.cbl:431] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN03C.cbl:432] OPEN statement
        fdTrantypeFile.open(context);
        // [T-Up#INFO][CBTRN03C.cbl:433] IF statement
        if (CobStringUtils.compare(container.getTrantypeStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN03C.cbl:434] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:436] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN03C.cbl:438] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN03C.cbl:439] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:441] DISPLAY statement
            System.out.println("ERROR OPENING TRANSACTION TYPE FILE");
            // [T-Up#INFO][CBTRN03C.cbl:442] MOVE statement
            Cbtrn03cMapperInterface.Cbtrn03cTrantypeStatusToCbtrn03cIoStatus
                    .set(container.getTrantypeStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN03C.cbl:443] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN03C.cbl:444] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN03C.cbl:446] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:448] 0400-TRANCATG-OPEN Paragraph</p>
     */
    void _0400TrancatgOpen(OpenFrameContext context) {
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        // [T-Up#INFO][CBTRN03C.cbl:449] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN03C.cbl:450] OPEN statement
        fdTrancatgFile.open(context);
        // [T-Up#INFO][CBTRN03C.cbl:451] IF statement
        if (CobStringUtils.compare(container.getTrancatgStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN03C.cbl:452] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:454] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN03C.cbl:456] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN03C.cbl:457] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:459] DISPLAY statement
            System.out.println("ERROR OPENING TRANSACTION CATG FILE");
            // [T-Up#INFO][CBTRN03C.cbl:460] MOVE statement
            Cbtrn03cMapperInterface.Cbtrn03cTrancatgStatusToCbtrn03cIoStatus
                    .set(container.getTrancatgStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN03C.cbl:461] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN03C.cbl:462] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN03C.cbl:464] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:466] 0500-DATEPARM-OPEN Paragraph</p>
     */
    void _0500DateparmOpen(OpenFrameContext context) {
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        // [T-Up#INFO][CBTRN03C.cbl:467] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN03C.cbl:468] OPEN statement
        fdDateParmsFile.open(context);
        // [T-Up#INFO][CBTRN03C.cbl:469] IF statement
        if (CobStringUtils.compare(container.getDateparmStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN03C.cbl:470] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:472] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN03C.cbl:474] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN03C.cbl:475] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:477] DISPLAY statement
            System.out.println("ERROR OPENING DATE PARM FILE");
            // [T-Up#INFO][CBTRN03C.cbl:478] MOVE statement
            Cbtrn03cMapperInterface.Cbtrn03cDateparmStatusToCbtrn03cIoStatus
                    .set(container.getDateparmStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN03C.cbl:479] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN03C.cbl:480] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN03C.cbl:482] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:484] 1500-A-LOOKUP-XREF Paragraph</p>
     */
    void _1500ALookupXref(OpenFrameContext context) {
        Cbtrn03cFdCardxrefRec tempCbtrn03cFdCardxrefRec1;
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        tempCbtrn03cFdCardxrefRec1 = fdXrefFile.readKey(context, container
                .getFdCardxrefRec().getFdXrefCardNum());
        if (tempCbtrn03cFdCardxrefRec1 != null) {
            container.setFdCardxrefRec(tempCbtrn03cFdCardxrefRec1);
            Cbtrn03cMapperInterface.Cbtrn03cFdCardxrefRecToCardXrefRecord
                    .set(container.getFdCardxrefRec(),
                            container.getCardXrefRecord());
        } else if (fdXrefFile.getFileStatus(context) == FileStatus.INVALID_KEY_READ) {
            // [T-Up#INFO][CBTRN03C.cbl:487] DISPLAY statement
            System.out.print("INVALID CARD NUMBER : ");
            System.out.println(container.getFdCardxrefRec().getFdXrefCardNum());
            // [T-Up#INFO][CBTRN03C.cbl:488] MOVE statement
            container.getIoStatus().set("23");
            // [T-Up#INFO][CBTRN03C.cbl:489] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN03C.cbl:490] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN03C.cbl:492] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:494] 1500-B-LOOKUP-TRANTYPE Paragraph</p>
     */
    void _1500BLookupTrantype(OpenFrameContext context) {
        Cbtrn03cFdTrantypeRec tempCbtrn03cFdTrantypeRec1;
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        tempCbtrn03cFdTrantypeRec1 = fdTrantypeFile.readKey(context, container
                .getFdTrantypeRec().getFdTranType());
        if (tempCbtrn03cFdTrantypeRec1 != null) {
            container.setFdTrantypeRec(tempCbtrn03cFdTrantypeRec1);
            Cbtrn03cMapperInterface.Cbtrn03cFdTrantypeRecToTranTypeRecord
                    .set(container.getFdTrantypeRec(),
                            container.getTranTypeRecord());
        } else if (fdTrantypeFile.getFileStatus(context) == FileStatus.INVALID_KEY_READ) {
            // [T-Up#INFO][CBTRN03C.cbl:497] DISPLAY statement
            System.out.print("INVALID TRANSACTION TYPE : ");
            System.out.println(container.getFdTrantypeRec().getFdTranType());
            // [T-Up#INFO][CBTRN03C.cbl:498] MOVE statement
            container.getIoStatus().set("23");
            // [T-Up#INFO][CBTRN03C.cbl:499] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN03C.cbl:500] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN03C.cbl:502] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:504] 1500-C-LOOKUP-TRANCATG Paragraph</p>
     */
    void _1500CLookupTrancatg(OpenFrameContext context) {
        Cbtrn03cFdTranCatRecord tempCbtrn03cFdTranCatRecord1;
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        tempCbtrn03cFdTranCatRecord1 = fdTrancatgFile.readKey(context,
                container.getFdTranCatRecord().getFdTranCatKey());
        if (tempCbtrn03cFdTranCatRecord1 != null) {
            container.setFdTranCatRecord(tempCbtrn03cFdTranCatRecord1);
            Cbtrn03cMapperInterface.Cbtrn03cFdTranCatRecordToTranCatRecord.set(
                    container.getFdTranCatRecord(),
                    container.getTranCatRecord());
        } else if (fdTrancatgFile.getFileStatus(context) == FileStatus.INVALID_KEY_READ) {
            // [T-Up#INFO][CBTRN03C.cbl:507] DISPLAY statement
            System.out.print("INVALID TRAN CATG KEY : ");
            System.out
                    .println(container.getFdTranCatRecord().getFdTranCatKey());
            // [T-Up#INFO][CBTRN03C.cbl:508] MOVE statement
            container.getIoStatus().set("23");
            // [T-Up#INFO][CBTRN03C.cbl:509] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN03C.cbl:510] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN03C.cbl:512] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:514] 9000-TRANFILE-CLOSE Paragraph</p>
     */
    void _9000TranfileClose(OpenFrameContext context) {
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        // [T-Up#INFO][CBTRN03C.cbl:515] ADD statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN03C.cbl:516] CLOSE statement
        fdTransactFile.close(context);
        // [T-Up#INFO][CBTRN03C.cbl:517] IF statement
        if (CobStringUtils.compare(container.getTranfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN03C.cbl:518] SUBTRACT statement
            container.setApplResult(container.getApplResult()
                    - container.getApplResult());
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:520] ADD statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN03C.cbl:522] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN03C.cbl:523] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:525] DISPLAY statement
            System.out.println("ERROR CLOSING POSTED TRANSACTION FILE");
            // [T-Up#INFO][CBTRN03C.cbl:526] MOVE statement
            Cbtrn03cMapperInterface.Cbtrn03cTranfileStatusToCbtrn03cIoStatus
                    .set(container.getTranfileStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN03C.cbl:527] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN03C.cbl:528] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN03C.cbl:530] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:532] 9100-REPTFILE-CLOSE Paragraph</p>
     */
    void _9100ReptfileClose(OpenFrameContext context) {
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        // [T-Up#INFO][CBTRN03C.cbl:533] ADD statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN03C.cbl:534] CLOSE statement
        fdReportFile.close(context);
        // [T-Up#INFO][CBTRN03C.cbl:535] IF statement
        if (CobStringUtils.compare(container.getTranreptStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN03C.cbl:536] SUBTRACT statement
            container.setApplResult(container.getApplResult()
                    - container.getApplResult());
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:538] ADD statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN03C.cbl:540] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN03C.cbl:541] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:543] DISPLAY statement
            System.out.println("ERROR CLOSING REPORT FILE");
            // [T-Up#INFO][CBTRN03C.cbl:544] MOVE statement
            Cbtrn03cMapperInterface.Cbtrn03cTranreptStatusToCbtrn03cIoStatus
                    .set(container.getTranreptStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN03C.cbl:545] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN03C.cbl:546] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN03C.cbl:548] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:551] 9200-CARDXREF-CLOSE Paragraph</p>
     */
    void _9200CardxrefClose(OpenFrameContext context) {
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        // [T-Up#INFO][CBTRN03C.cbl:552] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN03C.cbl:553] CLOSE statement
        fdXrefFile.close(context);
        // [T-Up#INFO][CBTRN03C.cbl:554] IF statement
        if (CobStringUtils.compare(container.getCardxrefStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN03C.cbl:555] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:557] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN03C.cbl:559] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN03C.cbl:560] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:562] DISPLAY statement
            System.out.println("ERROR CLOSING CROSS REF FILE");
            // [T-Up#INFO][CBTRN03C.cbl:563] MOVE statement
            Cbtrn03cMapperInterface.Cbtrn03cCardxrefStatusToCbtrn03cIoStatus
                    .set(container.getCardxrefStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN03C.cbl:564] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN03C.cbl:565] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN03C.cbl:567] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:569] 9300-TRANTYPE-CLOSE Paragraph</p>
     */
    void _9300TrantypeClose(OpenFrameContext context) {
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        // [T-Up#INFO][CBTRN03C.cbl:570] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN03C.cbl:571] CLOSE statement
        fdTrantypeFile.close(context);
        // [T-Up#INFO][CBTRN03C.cbl:572] IF statement
        if (CobStringUtils.compare(container.getTrantypeStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN03C.cbl:573] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:575] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN03C.cbl:577] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN03C.cbl:578] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:580] DISPLAY statement
            System.out.println("ERROR CLOSING TRANSACTION TYPE FILE");
            // [T-Up#INFO][CBTRN03C.cbl:581] MOVE statement
            Cbtrn03cMapperInterface.Cbtrn03cTrantypeStatusToCbtrn03cIoStatus
                    .set(container.getTrantypeStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN03C.cbl:582] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN03C.cbl:583] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN03C.cbl:585] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:587] 9400-TRANCATG-CLOSE Paragraph</p>
     */
    void _9400TrancatgClose(OpenFrameContext context) {
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        // [T-Up#INFO][CBTRN03C.cbl:588] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN03C.cbl:589] CLOSE statement
        fdTrancatgFile.close(context);
        // [T-Up#INFO][CBTRN03C.cbl:590] IF statement
        if (CobStringUtils.compare(container.getTrancatgStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN03C.cbl:591] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:593] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN03C.cbl:595] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN03C.cbl:596] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:598] DISPLAY statement
            System.out.println("ERROR CLOSING TRANSACTION CATG FILE");
            // [T-Up#INFO][CBTRN03C.cbl:599] MOVE statement
            Cbtrn03cMapperInterface.Cbtrn03cTrancatgStatusToCbtrn03cIoStatus
                    .set(container.getTrancatgStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN03C.cbl:600] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN03C.cbl:601] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN03C.cbl:603] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:605] 9500-DATEPARM-CLOSE Paragraph</p>
     */
    void _9500DateparmClose(OpenFrameContext context) {
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        // [T-Up#INFO][CBTRN03C.cbl:606] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN03C.cbl:607] CLOSE statement
        fdDateParmsFile.close(context);
        // [T-Up#INFO][CBTRN03C.cbl:608] IF statement
        if (CobStringUtils.compare(container.getDateparmStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN03C.cbl:609] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:611] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN03C.cbl:613] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN03C.cbl:614] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:616] DISPLAY statement
            System.out.println("ERROR CLOSING DATE PARM FILE");
            // [T-Up#INFO][CBTRN03C.cbl:617] MOVE statement
            Cbtrn03cMapperInterface.Cbtrn03cDateparmStatusToCbtrn03cIoStatus
                    .set(container.getDateparmStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN03C.cbl:618] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN03C.cbl:619] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN03C.cbl:621] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:626] 9999-ABEND-PROGRAM Paragraph</p>
     */
    void _9999AbendProgram(OpenFrameContext context) {
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        // [T-Up#INFO][CBTRN03C.cbl:627] DISPLAY statement
        System.out.println("ABENDING PROGRAM");
        // [T-Up#INFO][CBTRN03C.cbl:628] MOVE statement
        container.setTiming(0);
        // [T-Up#INFO][CBTRN03C.cbl:629] MOVE statement
        container.setAbcode(999);
        // [T-Up#INFO][CBTRN03C.cbl:630] CALL statement
        throw new RuntimeException();
    }

    // *****************************************************************

    /** 
     * <p>[T-Up#INFO][CBTRN03C.cbl:633] 9910-DISPLAY-IO-STATUS Paragraph</p>
     */
    void _9910DisplayIoStatus(OpenFrameContext context) {
        Cbtrn03cVariableContainer container = (Cbtrn03cVariableContainer) context
                .getProgramVariableContainer("Cbtrn03c");
        // [T-Up#INFO][CBTRN03C.cbl:634] IF statement
        if (!StringUtils.isNumeric(container.getIoStatus().toString())
                || CobStringUtils.compare(container.getIoStatus().getIoStat1(),
                        "9") == 0) {
            // [T-Up#INFO][CBTRN03C.cbl:636] MOVE statement
            container.getIoStatus04().set(
                    StringUtils.overlay(container.getIoStatus04().get(),
                            container.getIoStatus().getIoStat1(), 0, 1));
            // [T-Up#INFO][CBTRN03C.cbl:637] MOVE statement
            container.setTwoBytesBinary(0);
            // [T-Up#INFO][CBTRN03C.cbl:638] MOVE statement
            container.setTwoBytesRight(container.getIoStatus().getIoStat2());
            // [T-Up#INFO][CBTRN03C.cbl:639] MOVE statement
            container.getIoStatus04().setIoStatus0403(
                    container.getTwoBytesBinary());
            // [T-Up#INFO][CBTRN03C.cbl:640] DISPLAY statement
            System.out.print("FILE STATUS IS: NNNN");
            System.out.println(container.getIoStatus04());
        } else {
            // [T-Up#INFO][CBTRN03C.cbl:642] MOVE statement
            container.getIoStatus04().set("0000");
            // [T-Up#INFO][CBTRN03C.cbl:643] MOVE statement
            container.getIoStatus04().set(
                    StringUtils.overlay(container.getIoStatus04().get(),
                            container.getIoStatus().get(), 2, 4));
            // [T-Up#INFO][CBTRN03C.cbl:644] DISPLAY statement
            System.out.print("FILE STATUS IS: NNNN");
            System.out.println(container.getIoStatus04());
        }
        // [T-Up#INFO][CBTRN03C.cbl:646] EXIT statement
    }

    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:12:32 CDT
    // *
}
