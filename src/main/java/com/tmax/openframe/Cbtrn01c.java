package com.tmax.openframe;

import static com.tmax.openframe.variable.Cbtrn01cVariableContainer.*;
import com.tmax.openframe.file.*;
import com.tmax.openframe.mapper.Cbtrn01cMapperInterface;
import com.tmax.openframe.runtime.cobol.CobStringUtils;
import com.tmax.openframe.runtime.context.OpenFrameContext;
import com.tmax.openframe.runtime.file.FileStatus;
import com.tmax.openframe.runtime.flow.ControlManager;
import com.tmax.openframe.variable.Cbtrn01cVariableContainer;
import com.tmax.openframe.variable.group.Cbtrn01cFdAcctfileRec;
import com.tmax.openframe.variable.group.Cbtrn01cFdCardfileRec;
import com.tmax.openframe.variable.group.Cbtrn01cFdCustfileRec;
import com.tmax.openframe.variable.group.Cbtrn01cFdTranRecord;
import com.tmax.openframe.variable.group.Cbtrn01cFdTranfileRec;
import com.tmax.openframe.variable.group.Cbtrn01cFdXreffileRec;
import java.math.*;
import java.util.*;
import java.util.function.Consumer;
import lombok.*;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Primary;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:10 KST</p>
 * <hr>
 * <p>Java class for defining logics of COBOL program</p>
 * <ul>
 * <li>The name of COBOL program: CBTRN01C.cbl</li>
 * <li>Variable container class: {@link Cbtrn01cVariableContainer}</li>
 * <li>The list of files used in the program</li>
 * <ul>
 * <li>DALYTRAN-FILE: FD class {@code ->} {@link Cbtrn01cFdDalytranFile}, record class {@code -> } {@link Cbtrn01cFdTranRecord}</li>
 * <li>CUSTOMER-FILE: FD class {@code ->} {@link Cbtrn01cFdCustomerFile}, record class {@code -> } {@link Cbtrn01cFdCustfileRec}</li>
 * <li>XREF-FILE: FD class {@code ->} {@link Cbtrn01cFdXrefFile}, record class {@code -> } {@link Cbtrn01cFdXreffileRec}</li>
 * <li>CARD-FILE: FD class {@code ->} {@link Cbtrn01cFdCardFile}, record class {@code -> } {@link Cbtrn01cFdCardfileRec}</li>
 * <li>ACCOUNT-FILE: FD class {@code ->} {@link Cbtrn01cFdAccountFile}, record class {@code -> } {@link Cbtrn01cFdAcctfileRec}</li>
 * <li>TRANSACT-FILE: FD class {@code ->} {@link Cbtrn01cFdTransactFile}, record class {@code -> } {@link Cbtrn01cFdTranfileRec}</li>
 * </ul>
 * </ul>
 */
@Service
@RequiredArgsConstructor
@Transactional
@Primary
public class Cbtrn01c {
    // *
    /** 
     * <p>Class that manages an execution flow of the program</p>
     */
    protected final ControlManager controlManager;
    Consumer<OpenFrameContext> mainPara = this::mainPara;
    Consumer<OpenFrameContext> _1000DalytranGetNext = this::_1000DalytranGetNext;
    Consumer<OpenFrameContext> _2000LookupXref = this::_2000LookupXref;
    Consumer<OpenFrameContext> _3000ReadAccount = this::_3000ReadAccount;
    Consumer<OpenFrameContext> _0000DalytranOpen = this::_0000DalytranOpen;
    Consumer<OpenFrameContext> _0100CustfileOpen = this::_0100CustfileOpen;
    Consumer<OpenFrameContext> _0200XreffileOpen = this::_0200XreffileOpen;
    Consumer<OpenFrameContext> _0300CardfileOpen = this::_0300CardfileOpen;
    Consumer<OpenFrameContext> _0400AcctfileOpen = this::_0400AcctfileOpen;
    Consumer<OpenFrameContext> _0500TranfileOpen = this::_0500TranfileOpen;
    Consumer<OpenFrameContext> _9000DalytranClose = this::_9000DalytranClose;
    Consumer<OpenFrameContext> _9100CustfileClose = this::_9100CustfileClose;
    Consumer<OpenFrameContext> _9200XreffileClose = this::_9200XreffileClose;
    Consumer<OpenFrameContext> _9300CardfileClose = this::_9300CardfileClose;
    Consumer<OpenFrameContext> _9400AcctfileClose = this::_9400AcctfileClose;
    Consumer<OpenFrameContext> _9500TranfileClose = this::_9500TranfileClose;
    Consumer<OpenFrameContext> zAbendProgram = this::zAbendProgram;
    Consumer<OpenFrameContext> zDisplayIoStatus = this::zDisplayIoStatus;
    /** 
     * <p>Execution flow of COBOL program that defined in the procedure division</p>
     */
    ArrayList<Consumer> methodList = new ArrayList<>();
    {
        methodList.add(mainPara);
        methodList.add(_1000DalytranGetNext);
        methodList.add(_2000LookupXref);
        methodList.add(_3000ReadAccount);
        methodList.add(_0000DalytranOpen);
        methodList.add(_0100CustfileOpen);
        methodList.add(_0200XreffileOpen);
        methodList.add(_0300CardfileOpen);
        methodList.add(_0400AcctfileOpen);
        methodList.add(_0500TranfileOpen);
        methodList.add(_9000DalytranClose);
        methodList.add(_9100CustfileClose);
        methodList.add(_9200XreffileClose);
        methodList.add(_9300CardfileClose);
        methodList.add(_9400AcctfileClose);
        methodList.add(_9500TranfileClose);
        methodList.add(zAbendProgram);
        methodList.add(zDisplayIoStatus);
    }
    @Autowired
    private Cbtrn01cFileOpDalytranFile fdDalytranFile;
    @Autowired
    private Cbtrn01cFileOpCustomerFile fdCustomerFile;
    @Autowired
    private Cbtrn01cFileOpXrefFile fdXrefFile;
    @Autowired
    private Cbtrn01cFileOpCardFile fdCardFile;
    @Autowired
    private Cbtrn01cFileOpAccountFile fdAccountFile;
    @Autowired
    private Cbtrn01cFileOpTransactFile fdTransactFile;

    /** 
     * <p>Method for executing a program logic that defined in the procedure division</p>
     * @param generalContext context that is necessary for executing program
     * @return return value of program
     */
    public int run(Map<String, Object> generalContext) {
        OpenFrameContext context = new OpenFrameContext(generalContext,
                methodList);
        if (context.getProgramVariableContainer("Cbtrn01c") == null) {
            Cbtrn01cVariableContainer container = new Cbtrn01cVariableContainer();
            context.setProgramVariableContainer("Cbtrn01c", container);
        }
        controlManager.run(context);
        return context.getReturnValue();
    }

    // ******************************************************************
    // * Program     : CBTRN01C.CBL
    // * Application : CardDemo
    // * Type        : BATCH COBOL Program
    // * Function    : Post the records from daily transaction file.
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // *****************************************************************

    /** 
     * <p>[T-Up#INFO][CBTRN01C.cbl:155] MAIN-PARA Paragraph</p>
     */
    void mainPara(OpenFrameContext context) {
        Cbtrn01cVariableContainer container = (Cbtrn01cVariableContainer) context
                .getProgramVariableContainer("Cbtrn01c");
        // [T-Up#INFO][CBTRN01C.cbl:156] DISPLAY statement
        System.out.println("START OF EXECUTION OF PROGRAM CBTRN01C");
        // [T-Up#INFO][CBTRN01C.cbl:157] PERFORM statement
        controlManager.run(context, _0000DalytranOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN01C.cbl:158] PERFORM statement
        controlManager.run(context, _0100CustfileOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN01C.cbl:159] PERFORM statement
        controlManager.run(context, _0200XreffileOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN01C.cbl:160] PERFORM statement
        controlManager.run(context, _0300CardfileOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN01C.cbl:161] PERFORM statement
        controlManager.run(context, _0400AcctfileOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN01C.cbl:162] PERFORM statement
        controlManager.run(context, _0500TranfileOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN01C.cbl:164] PERFORM statement
        while (!(CobStringUtils
                .compare(container.getEndOfDailyTransFile(), "Y") == 0)) {
            // [T-Up#INFO][CBTRN01C.cbl:165] IF statement
            if (CobStringUtils.compare(container.getEndOfDailyTransFile(), "N") == 0) {
                // [T-Up#INFO][CBTRN01C.cbl:166] PERFORM statement
                controlManager.run(context, _1000DalytranGetNext);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][CBTRN01C.cbl:167] IF statement
                if (CobStringUtils.compare(container.getEndOfDailyTransFile(),
                        "N") == 0) {
                    // [T-Up#INFO][CBTRN01C.cbl:168] DISPLAY statement
                    System.out.println(container.getDalytranRecord());
                }
                // [T-Up#INFO][CBTRN01C.cbl:170] MOVE statement
                container.getWsMiscVariables().setWsXrefReadStatus(0);
                // [T-Up#INFO][CBTRN01C.cbl:171] MOVE statement
                container.getCardXrefRecord().setXrefCardNum(
                        container.getDalytranRecord().getDalytranCardNum());
                // [T-Up#INFO][CBTRN01C.cbl:172] PERFORM statement
                controlManager.run(context, _2000LookupXref);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][CBTRN01C.cbl:173] IF statement
                if (container.getWsMiscVariables().getWsXrefReadStatus() == 0) {
                    // [T-Up#INFO][CBTRN01C.cbl:174] MOVE statement
                    container.getWsMiscVariables().setWsAcctReadStatus(0);
                    // [T-Up#INFO][CBTRN01C.cbl:175] MOVE statement
                    container.getAccountRecord().setAcctId(
                            container.getCardXrefRecord().getXrefAcctId());
                    // [T-Up#INFO][CBTRN01C.cbl:176] PERFORM statement
                    controlManager.run(context, _3000ReadAccount);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                    // [T-Up#INFO][CBTRN01C.cbl:177] IF statement
                    if (container.getWsMiscVariables().getWsAcctReadStatus() != 0) {
                        // [T-Up#INFO][CBTRN01C.cbl:178] DISPLAY statement
                        System.out.print("ACCOUNT ");
                        System.out.print(container.getAccountRecord()
                                .getAcctId());
                        System.out.println(" NOT FOUND");
                    }
                } else {
                    // [T-Up#INFO][CBTRN01C.cbl:181] DISPLAY statement
                    System.out.print("CARD NUMBER ");
                    System.out.print(container.getDalytranRecord()
                            .getDalytranCardNum());
                    System.out
                            .print(" COULD NOT BE VERIFIED. SKIPPING TRANSACTION ID-");
                    System.out.println(container.getDalytranRecord()
                            .getDalytranId());
                }
            }
        }
        // [T-Up#INFO][CBTRN01C.cbl:188] PERFORM statement
        controlManager.run(context, _9000DalytranClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN01C.cbl:189] PERFORM statement
        controlManager.run(context, _9100CustfileClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN01C.cbl:190] PERFORM statement
        controlManager.run(context, _9200XreffileClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN01C.cbl:191] PERFORM statement
        controlManager.run(context, _9300CardfileClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN01C.cbl:192] PERFORM statement
        controlManager.run(context, _9400AcctfileClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN01C.cbl:193] PERFORM statement
        controlManager.run(context, _9500TranfileClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN01C.cbl:195] DISPLAY statement
        System.out.println("END OF EXECUTION OF PROGRAM CBTRN01C");
        // [T-Up#INFO][CBTRN01C.cbl:197] GOBACK statement
        context.setReturnFlag(true);
        return;
    }

    // *****************************************************************
    // * READS FILE                                                    *
    // *****************************************************************

    /** 
     * <p>[T-Up#INFO][CBTRN01C.cbl:202] 1000-DALYTRAN-GET-NEXT Paragraph</p>
     */
    void _1000DalytranGetNext(OpenFrameContext context) {
        Cbtrn01cFdTranRecord tempCbtrn01cFdTranRecord1;
        Cbtrn01cVariableContainer container = (Cbtrn01cVariableContainer) context
                .getProgramVariableContainer("Cbtrn01c");
        tempCbtrn01cFdTranRecord1 = fdDalytranFile.readNext(context);
        if (tempCbtrn01cFdTranRecord1 != null) {
            container.setFdTranRecord(tempCbtrn01cFdTranRecord1);
            Cbtrn01cMapperInterface.Cbtrn01cFdTranRecordToDalytranRecord.set(
                    container.getFdTranRecord(), container.getDalytranRecord());
        }
        // [T-Up#INFO][CBTRN01C.cbl:204] IF statement
        if (CobStringUtils.compare(container.getDalytranStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN01C.cbl:205] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:207] IF statement
            if (CobStringUtils.compare(container.getDalytranStatus().get(),
                    "10") == 0) {
                // [T-Up#INFO][CBTRN01C.cbl:208] MOVE statement
                container.setApplResult(16);
            } else {
                // [T-Up#INFO][CBTRN01C.cbl:210] MOVE statement
                container.setApplResult(12);
            }
        }
        // [T-Up#INFO][CBTRN01C.cbl:213] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN01C.cbl:214] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:216] IF statement
            if (container.getApplResult() == APPL_EOF) {
                // [T-Up#INFO][CBTRN01C.cbl:217] MOVE statement
                container.setEndOfDailyTransFile("Y");
            } else {
                // [T-Up#INFO][CBTRN01C.cbl:219] DISPLAY statement
                System.out.println("ERROR READING DAILY TRANSACTION FILE");
                // [T-Up#INFO][CBTRN01C.cbl:220] MOVE statement
                Cbtrn01cMapperInterface.Cbtrn01cDalytranStatusToCbtrn01cIoStatus
                        .set(container.getDalytranStatus(),
                                container.getIoStatus());
                // [T-Up#INFO][CBTRN01C.cbl:221] PERFORM statement
                controlManager.run(context, zDisplayIoStatus);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][CBTRN01C.cbl:222] PERFORM statement
                controlManager.run(context, zAbendProgram);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
        }
        // [T-Up#INFO][CBTRN01C.cbl:225] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN01C.cbl:227] 2000-LOOKUP-XREF Paragraph</p>
     */
    void _2000LookupXref(OpenFrameContext context) {
        Cbtrn01cFdXreffileRec tempCbtrn01cFdXreffileRec1;
        Cbtrn01cVariableContainer container = (Cbtrn01cVariableContainer) context
                .getProgramVariableContainer("Cbtrn01c");
        // [T-Up#INFO][CBTRN01C.cbl:228] MOVE statement
        container.getFdXreffileRec().setFdXrefCardNum(
                container.getCardXrefRecord().getXrefCardNum());
        tempCbtrn01cFdXreffileRec1 = fdXrefFile.readKey(context, container
                .getFdXreffileRec().getFdXrefCardNum());
        if (tempCbtrn01cFdXreffileRec1 != null) {
            container.setFdXreffileRec(tempCbtrn01cFdXreffileRec1);
            // [T-Up#INFO][CBTRN01C.cbl:235] DISPLAY statement
            System.out.println("SUCCESSFUL READ OF XREF");
            // [T-Up#INFO][CBTRN01C.cbl:236] DISPLAY statement
            System.out.print("CARD NUMBER: ");
            System.out.println(container.getCardXrefRecord().getXrefCardNum());
            // [T-Up#INFO][CBTRN01C.cbl:237] DISPLAY statement
            System.out.print("ACCOUNT ID : ");
            System.out.println(container.getCardXrefRecord().getXrefAcctId());
            // [T-Up#INFO][CBTRN01C.cbl:238] DISPLAY statement
            System.out.print("CUSTOMER ID: ");
            System.out.println(container.getCardXrefRecord().getXrefCustId());
        } else if (fdXrefFile.getFileStatus(context) == FileStatus.INVALID_KEY_READ) {
            // [T-Up#INFO][CBTRN01C.cbl:232] DISPLAY statement
            System.out.println("INVALID CARD NUMBER FOR XREF");
            // [T-Up#INFO][CBTRN01C.cbl:233] MOVE statement
            container.getWsMiscVariables().setWsXrefReadStatus(4);
        }
        Cbtrn01cMapperInterface.Cbtrn01cFdXreffileRecToCardXrefRecord.set(
                container.getFdXreffileRec(), container.getCardXrefRecord());
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN01C.cbl:241] 3000-READ-ACCOUNT Paragraph</p>
     */
    void _3000ReadAccount(OpenFrameContext context) {
        Cbtrn01cFdAcctfileRec tempCbtrn01cFdAcctfileRec1;
        Cbtrn01cVariableContainer container = (Cbtrn01cVariableContainer) context
                .getProgramVariableContainer("Cbtrn01c");
        // [T-Up#INFO][CBTRN01C.cbl:242] MOVE statement
        container.getFdAcctfileRec().setFdAcctId(
                container.getAccountRecord().getAcctId());
        tempCbtrn01cFdAcctfileRec1 = fdAccountFile.readKey(context, container
                .getFdAcctfileRec().getFdAcctId());
        if (tempCbtrn01cFdAcctfileRec1 != null) {
            container.setFdAcctfileRec(tempCbtrn01cFdAcctfileRec1);
            // [T-Up#INFO][CBTRN01C.cbl:249] DISPLAY statement
            System.out.println("SUCCESSFUL READ OF ACCOUNT FILE");
        } else if (fdAccountFile.getFileStatus(context) == FileStatus.INVALID_KEY_READ) {
            // [T-Up#INFO][CBTRN01C.cbl:246] DISPLAY statement
            System.out.println("INVALID ACCOUNT NUMBER FOUND");
            // [T-Up#INFO][CBTRN01C.cbl:247] MOVE statement
            container.getWsMiscVariables().setWsAcctReadStatus(4);
        }
        Cbtrn01cMapperInterface.Cbtrn01cFdAcctfileRecToAccountRecord.set(
                container.getFdAcctfileRec(), container.getAccountRecord());
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN01C.cbl:252] 0000-DALYTRAN-OPEN Paragraph</p>
     */
    void _0000DalytranOpen(OpenFrameContext context) {
        Cbtrn01cVariableContainer container = (Cbtrn01cVariableContainer) context
                .getProgramVariableContainer("Cbtrn01c");
        // [T-Up#INFO][CBTRN01C.cbl:253] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN01C.cbl:254] OPEN statement
        fdDalytranFile.open(context);
        // [T-Up#INFO][CBTRN01C.cbl:255] IF statement
        if (CobStringUtils.compare(container.getDalytranStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN01C.cbl:256] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:258] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN01C.cbl:260] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN01C.cbl:261] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:263] DISPLAY statement
            System.out.println("ERROR OPENING DAILY TRANSACTION FILE");
            // [T-Up#INFO][CBTRN01C.cbl:264] MOVE statement
            Cbtrn01cMapperInterface.Cbtrn01cDalytranStatusToCbtrn01cIoStatus
                    .set(container.getDalytranStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN01C.cbl:265] PERFORM statement
            controlManager.run(context, zDisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN01C.cbl:266] PERFORM statement
            controlManager.run(context, zAbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN01C.cbl:268] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN01C.cbl:271] 0100-CUSTFILE-OPEN Paragraph</p>
     */
    void _0100CustfileOpen(OpenFrameContext context) {
        Cbtrn01cVariableContainer container = (Cbtrn01cVariableContainer) context
                .getProgramVariableContainer("Cbtrn01c");
        // [T-Up#INFO][CBTRN01C.cbl:272] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN01C.cbl:273] OPEN statement
        fdCustomerFile.open(context);
        // [T-Up#INFO][CBTRN01C.cbl:274] IF statement
        if (CobStringUtils.compare(container.getCustfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN01C.cbl:275] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:277] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN01C.cbl:279] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN01C.cbl:280] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:282] DISPLAY statement
            System.out.println("ERROR OPENING CUSTOMER FILE");
            // [T-Up#INFO][CBTRN01C.cbl:283] MOVE statement
            Cbtrn01cMapperInterface.Cbtrn01cCustfileStatusToCbtrn01cIoStatus
                    .set(container.getCustfileStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN01C.cbl:284] PERFORM statement
            controlManager.run(context, zDisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN01C.cbl:285] PERFORM statement
            controlManager.run(context, zAbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN01C.cbl:287] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN01C.cbl:289] 0200-XREFFILE-OPEN Paragraph</p>
     */
    void _0200XreffileOpen(OpenFrameContext context) {
        Cbtrn01cVariableContainer container = (Cbtrn01cVariableContainer) context
                .getProgramVariableContainer("Cbtrn01c");
        // [T-Up#INFO][CBTRN01C.cbl:290] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN01C.cbl:291] OPEN statement
        fdXrefFile.open(context);
        // [T-Up#INFO][CBTRN01C.cbl:292] IF statement
        if (CobStringUtils.compare(container.getXreffileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN01C.cbl:293] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:295] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN01C.cbl:297] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN01C.cbl:298] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:300] DISPLAY statement
            System.out.println("ERROR OPENING CROSS REF FILE");
            // [T-Up#INFO][CBTRN01C.cbl:301] MOVE statement
            Cbtrn01cMapperInterface.Cbtrn01cXreffileStatusToCbtrn01cIoStatus
                    .set(container.getXreffileStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN01C.cbl:302] PERFORM statement
            controlManager.run(context, zDisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN01C.cbl:303] PERFORM statement
            controlManager.run(context, zAbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN01C.cbl:305] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN01C.cbl:307] 0300-CARDFILE-OPEN Paragraph</p>
     */
    void _0300CardfileOpen(OpenFrameContext context) {
        Cbtrn01cVariableContainer container = (Cbtrn01cVariableContainer) context
                .getProgramVariableContainer("Cbtrn01c");
        // [T-Up#INFO][CBTRN01C.cbl:308] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN01C.cbl:309] OPEN statement
        fdCardFile.open(context);
        // [T-Up#INFO][CBTRN01C.cbl:310] IF statement
        if (CobStringUtils.compare(container.getCardfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN01C.cbl:311] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:313] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN01C.cbl:315] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN01C.cbl:316] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:318] DISPLAY statement
            System.out.println("ERROR OPENING CARD FILE");
            // [T-Up#INFO][CBTRN01C.cbl:319] MOVE statement
            Cbtrn01cMapperInterface.Cbtrn01cCardfileStatusToCbtrn01cIoStatus
                    .set(container.getCardfileStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN01C.cbl:320] PERFORM statement
            controlManager.run(context, zDisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN01C.cbl:321] PERFORM statement
            controlManager.run(context, zAbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN01C.cbl:323] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN01C.cbl:325] 0400-ACCTFILE-OPEN Paragraph</p>
     */
    void _0400AcctfileOpen(OpenFrameContext context) {
        Cbtrn01cVariableContainer container = (Cbtrn01cVariableContainer) context
                .getProgramVariableContainer("Cbtrn01c");
        // [T-Up#INFO][CBTRN01C.cbl:326] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN01C.cbl:327] OPEN statement
        fdAccountFile.open(context);
        // [T-Up#INFO][CBTRN01C.cbl:328] IF statement
        if (CobStringUtils.compare(container.getAcctfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN01C.cbl:329] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:331] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN01C.cbl:333] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN01C.cbl:334] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:336] DISPLAY statement
            System.out.println("ERROR OPENING ACCOUNT FILE");
            // [T-Up#INFO][CBTRN01C.cbl:337] MOVE statement
            Cbtrn01cMapperInterface.Cbtrn01cAcctfileStatusToCbtrn01cIoStatus
                    .set(container.getAcctfileStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN01C.cbl:338] PERFORM statement
            controlManager.run(context, zDisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN01C.cbl:339] PERFORM statement
            controlManager.run(context, zAbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN01C.cbl:341] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN01C.cbl:343] 0500-TRANFILE-OPEN Paragraph</p>
     */
    void _0500TranfileOpen(OpenFrameContext context) {
        Cbtrn01cVariableContainer container = (Cbtrn01cVariableContainer) context
                .getProgramVariableContainer("Cbtrn01c");
        // [T-Up#INFO][CBTRN01C.cbl:344] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN01C.cbl:345] OPEN statement
        fdTransactFile.open(context);
        // [T-Up#INFO][CBTRN01C.cbl:346] IF statement
        if (CobStringUtils.compare(container.getTranfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN01C.cbl:347] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:349] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN01C.cbl:351] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN01C.cbl:352] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:354] DISPLAY statement
            System.out.println("ERROR OPENING TRANSACTION FILE");
            // [T-Up#INFO][CBTRN01C.cbl:355] MOVE statement
            Cbtrn01cMapperInterface.Cbtrn01cTranfileStatusToCbtrn01cIoStatus
                    .set(container.getTranfileStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN01C.cbl:356] PERFORM statement
            controlManager.run(context, zDisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN01C.cbl:357] PERFORM statement
            controlManager.run(context, zAbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN01C.cbl:359] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN01C.cbl:361] 9000-DALYTRAN-CLOSE Paragraph</p>
     */
    void _9000DalytranClose(OpenFrameContext context) {
        Cbtrn01cVariableContainer container = (Cbtrn01cVariableContainer) context
                .getProgramVariableContainer("Cbtrn01c");
        // [T-Up#INFO][CBTRN01C.cbl:362] ADD statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN01C.cbl:363] CLOSE statement
        fdDalytranFile.close(context);
        // [T-Up#INFO][CBTRN01C.cbl:364] IF statement
        if (CobStringUtils.compare(container.getDalytranStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN01C.cbl:365] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:367] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN01C.cbl:369] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN01C.cbl:370] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:372] DISPLAY statement
            System.out.println("ERROR CLOSING CUSTOMER FILE");
            // [T-Up#INFO][CBTRN01C.cbl:373] MOVE statement
            Cbtrn01cMapperInterface.Cbtrn01cCustfileStatusToCbtrn01cIoStatus
                    .set(container.getCustfileStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN01C.cbl:374] PERFORM statement
            controlManager.run(context, zDisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN01C.cbl:375] PERFORM statement
            controlManager.run(context, zAbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN01C.cbl:377] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN01C.cbl:379] 9100-CUSTFILE-CLOSE Paragraph</p>
     */
    void _9100CustfileClose(OpenFrameContext context) {
        Cbtrn01cVariableContainer container = (Cbtrn01cVariableContainer) context
                .getProgramVariableContainer("Cbtrn01c");
        // [T-Up#INFO][CBTRN01C.cbl:380] ADD statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN01C.cbl:381] CLOSE statement
        fdCustomerFile.close(context);
        // [T-Up#INFO][CBTRN01C.cbl:382] IF statement
        if (CobStringUtils.compare(container.getCustfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN01C.cbl:383] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:385] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN01C.cbl:387] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN01C.cbl:388] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:390] DISPLAY statement
            System.out.println("ERROR CLOSING CUSTOMER FILE");
            // [T-Up#INFO][CBTRN01C.cbl:391] MOVE statement
            Cbtrn01cMapperInterface.Cbtrn01cCustfileStatusToCbtrn01cIoStatus
                    .set(container.getCustfileStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN01C.cbl:392] PERFORM statement
            controlManager.run(context, zDisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN01C.cbl:393] PERFORM statement
            controlManager.run(context, zAbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN01C.cbl:395] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN01C.cbl:397] 9200-XREFFILE-CLOSE Paragraph</p>
     */
    void _9200XreffileClose(OpenFrameContext context) {
        Cbtrn01cVariableContainer container = (Cbtrn01cVariableContainer) context
                .getProgramVariableContainer("Cbtrn01c");
        // [T-Up#INFO][CBTRN01C.cbl:398] ADD statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN01C.cbl:399] CLOSE statement
        fdXrefFile.close(context);
        // [T-Up#INFO][CBTRN01C.cbl:400] IF statement
        if (CobStringUtils.compare(container.getXreffileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN01C.cbl:401] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:403] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN01C.cbl:405] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN01C.cbl:406] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:408] DISPLAY statement
            System.out.println("ERROR CLOSING CROSS REF FILE");
            // [T-Up#INFO][CBTRN01C.cbl:409] MOVE statement
            Cbtrn01cMapperInterface.Cbtrn01cXreffileStatusToCbtrn01cIoStatus
                    .set(container.getXreffileStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN01C.cbl:410] PERFORM statement
            controlManager.run(context, zDisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN01C.cbl:411] PERFORM statement
            controlManager.run(context, zAbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN01C.cbl:413] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN01C.cbl:415] 9300-CARDFILE-CLOSE Paragraph</p>
     */
    void _9300CardfileClose(OpenFrameContext context) {
        Cbtrn01cVariableContainer container = (Cbtrn01cVariableContainer) context
                .getProgramVariableContainer("Cbtrn01c");
        // [T-Up#INFO][CBTRN01C.cbl:416] ADD statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN01C.cbl:417] CLOSE statement
        fdCardFile.close(context);
        // [T-Up#INFO][CBTRN01C.cbl:418] IF statement
        if (CobStringUtils.compare(container.getCardfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN01C.cbl:419] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:421] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN01C.cbl:423] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN01C.cbl:424] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:426] DISPLAY statement
            System.out.println("ERROR CLOSING CARD FILE");
            // [T-Up#INFO][CBTRN01C.cbl:427] MOVE statement
            Cbtrn01cMapperInterface.Cbtrn01cCardfileStatusToCbtrn01cIoStatus
                    .set(container.getCardfileStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN01C.cbl:428] PERFORM statement
            controlManager.run(context, zDisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN01C.cbl:429] PERFORM statement
            controlManager.run(context, zAbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN01C.cbl:431] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN01C.cbl:433] 9400-ACCTFILE-CLOSE Paragraph</p>
     */
    void _9400AcctfileClose(OpenFrameContext context) {
        Cbtrn01cVariableContainer container = (Cbtrn01cVariableContainer) context
                .getProgramVariableContainer("Cbtrn01c");
        // [T-Up#INFO][CBTRN01C.cbl:434] ADD statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN01C.cbl:435] CLOSE statement
        fdAccountFile.close(context);
        // [T-Up#INFO][CBTRN01C.cbl:436] IF statement
        if (CobStringUtils.compare(container.getAcctfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN01C.cbl:437] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:439] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN01C.cbl:441] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN01C.cbl:442] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:444] DISPLAY statement
            System.out.println("ERROR CLOSING ACCOUNT FILE");
            // [T-Up#INFO][CBTRN01C.cbl:445] MOVE statement
            Cbtrn01cMapperInterface.Cbtrn01cAcctfileStatusToCbtrn01cIoStatus
                    .set(container.getAcctfileStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN01C.cbl:446] PERFORM statement
            controlManager.run(context, zDisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN01C.cbl:447] PERFORM statement
            controlManager.run(context, zAbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN01C.cbl:449] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN01C.cbl:451] 9500-TRANFILE-CLOSE Paragraph</p>
     */
    void _9500TranfileClose(OpenFrameContext context) {
        Cbtrn01cVariableContainer container = (Cbtrn01cVariableContainer) context
                .getProgramVariableContainer("Cbtrn01c");
        // [T-Up#INFO][CBTRN01C.cbl:452] ADD statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN01C.cbl:453] CLOSE statement
        fdTransactFile.close(context);
        // [T-Up#INFO][CBTRN01C.cbl:454] IF statement
        if (CobStringUtils.compare(container.getTranfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN01C.cbl:455] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:457] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN01C.cbl:459] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN01C.cbl:460] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:462] DISPLAY statement
            System.out.println("ERROR CLOSING TRANSACTION FILE");
            // [T-Up#INFO][CBTRN01C.cbl:463] MOVE statement
            Cbtrn01cMapperInterface.Cbtrn01cTranfileStatusToCbtrn01cIoStatus
                    .set(container.getTranfileStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN01C.cbl:464] PERFORM statement
            controlManager.run(context, zDisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN01C.cbl:465] PERFORM statement
            controlManager.run(context, zAbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN01C.cbl:467] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][CBTRN01C.cbl:469] Z-ABEND-PROGRAM Paragraph</p>
     */
    void zAbendProgram(OpenFrameContext context) {
        Cbtrn01cVariableContainer container = (Cbtrn01cVariableContainer) context
                .getProgramVariableContainer("Cbtrn01c");
        // [T-Up#INFO][CBTRN01C.cbl:470] DISPLAY statement
        System.out.println("ABENDING PROGRAM");
        // [T-Up#INFO][CBTRN01C.cbl:471] MOVE statement
        container.setTiming(0);
        // [T-Up#INFO][CBTRN01C.cbl:472] MOVE statement
        container.setAbcode(999);
        // [T-Up#INFO][CBTRN01C.cbl:473] CALL statement
        throw new RuntimeException();
    }

    // *****************************************************************

    /** 
     * <p>[T-Up#INFO][CBTRN01C.cbl:476] Z-DISPLAY-IO-STATUS Paragraph</p>
     */
    void zDisplayIoStatus(OpenFrameContext context) {
        Cbtrn01cVariableContainer container = (Cbtrn01cVariableContainer) context
                .getProgramVariableContainer("Cbtrn01c");
        // [T-Up#INFO][CBTRN01C.cbl:477] IF statement
        if (!StringUtils.isNumeric(container.getIoStatus().toString())
                || CobStringUtils.compare(container.getIoStatus().getIoStat1(),
                        "9") == 0) {
            // [T-Up#INFO][CBTRN01C.cbl:479] MOVE statement
            container.getIoStatus04().set(
                    StringUtils.overlay(container.getIoStatus04().get(),
                            container.getIoStatus().getIoStat1(), 0, 1));
            // [T-Up#INFO][CBTRN01C.cbl:480] MOVE statement
            container.setTwoBytesBinary(0);
            // [T-Up#INFO][CBTRN01C.cbl:481] MOVE statement
            container.setTwoBytesRight(container.getIoStatus().getIoStat2());
            // [T-Up#INFO][CBTRN01C.cbl:482] MOVE statement
            container.getIoStatus04().setIoStatus0403(
                    container.getTwoBytesBinary());
            // [T-Up#INFO][CBTRN01C.cbl:483] DISPLAY statement
            System.out.print("FILE STATUS IS: NNNN");
            System.out.println(container.getIoStatus04());
        } else {
            // [T-Up#INFO][CBTRN01C.cbl:485] MOVE statement
            container.getIoStatus04().set("0000");
            // [T-Up#INFO][CBTRN01C.cbl:486] MOVE statement
            container.getIoStatus04().set(
                    StringUtils.overlay(container.getIoStatus04().get(),
                            container.getIoStatus().get(), 2, 4));
            // [T-Up#INFO][CBTRN01C.cbl:487] DISPLAY statement
            System.out.print("FILE STATUS IS: NNNN");
            System.out.println(container.getIoStatus04());
        }
        // [T-Up#INFO][CBTRN01C.cbl:489] EXIT statement
    }
}
