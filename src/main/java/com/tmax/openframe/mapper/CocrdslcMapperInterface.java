package com.tmax.openframe.mapper;

import com.tmax.openframe.DataConverter;
import org.apache.commons.lang3.StringUtils;
import org.mapstruct.*;
import org.mapstruct.factory.*;
import com.tmax.openframe.variable.group.CardRecord;
import com.tmax.openframe.dto.AwsM2CarddemoCarddataVsamKsdsDto;
import com.tmax.openframe.variable.group.CarddemoCommarea;
import com.tmax.openframe.variable.group.Comen01cDfhcommarea;
import com.tmax.openframe.variable.group.CocrdlicDfhcommarea;
import java.math.*;
import java.util.*;
import lombok.*;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:16 KST</p>
 * <hr>
 * <p>Mapper class for converting data between different classes</p>
 */
public interface CocrdslcMapperInterface {
    /** 
     * <p>Mapper class to convert data for CICS processing</p>
     * <ul>
     * <li>source class: {@link CardRecord}</li>
     * <li>target class: {@link AwsM2CarddemoCarddataVsamKsdsDto}</li>
     * </ul>
     */
    @Mapper(unmappedTargetPolicy = ReportingPolicy.IGNORE, builder = @org.mapstruct.Builder(disableBuilder = true))
    public interface CardRecordToAwsM2CarddemoCarddataVsamKsdsDto {
        CardRecordToAwsM2CarddemoCarddataVsamKsdsDto INSTANCE = Mappers
                .getMapper(CardRecordToAwsM2CarddemoCarddataVsamKsdsDto.class);

        @Mapping(source = "cardNum", target = "cardNum")
        @Mapping(source = "cardAcctId", target = "cardAcctId")
        @Mapping(source = "cardCvvCd", target = "cardCvvCd")
        @Mapping(source = "cardEmbossedName", target = "cardEmbossedName")
        @Mapping(source = "cardExpiraionDate", target = "cardExpiraionDate")
        @Mapping(source = "cardActiveStatus", target = "cardActiveStatus")
        @Mapping(source = "FILLER_1", target = "filler")
        AwsM2CarddemoCarddataVsamKsdsDto toTarget(CardRecord source);

        @Mapping(source = "cardNum", target = "cardNum")
        @Mapping(source = "cardAcctId", target = "cardAcctId")
        @Mapping(source = "cardCvvCd", target = "cardCvvCd")
        @Mapping(source = "cardEmbossedName", target = "cardEmbossedName")
        @Mapping(source = "cardExpiraionDate", target = "cardExpiraionDate")
        @Mapping(source = "cardActiveStatus", target = "cardActiveStatus")
        @Mapping(source = "filler", target = "FILLER_1")
        CardRecord toSource(AwsM2CarddemoCarddataVsamKsdsDto source);
    }

    /** 
     * <p>Mapper class to convert data for CICS processing</p>
     * <ul>
     * <li>source class: {@link CarddemoCommarea}</li>
     * <li>target class: {@link Comen01cDfhcommarea}</li>
     * </ul>
     */
    @Mapper(unmappedTargetPolicy = ReportingPolicy.IGNORE, builder = @org.mapstruct.Builder(disableBuilder = true))
    public interface CarddemoCommareaToComen01cDfhcommarea {
        CarddemoCommareaToComen01cDfhcommarea INSTANCE = Mappers
                .getMapper(CarddemoCommareaToComen01cDfhcommarea.class);

        Comen01cDfhcommarea toTarget(CarddemoCommarea source);

        CarddemoCommarea toSource(Comen01cDfhcommarea source);

        @AfterMapping
        default void makeTarget(CarddemoCommarea source,
                @MappingTarget Comen01cDfhcommarea target) {
            target.setLkCommarea(source.getCdemoGeneralInfo()
                    .getCdemoFromTranid()
                    + source.getCdemoGeneralInfo().getCdemoFromProgram()
                    + source.getCdemoGeneralInfo().getCdemoToTranid()
                    + source.getCdemoGeneralInfo().getCdemoToProgram()
                    + source.getCdemoGeneralInfo().getCdemoUserId()
                    + source.getCdemoGeneralInfo().getCdemoUserType()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoGeneralInfo().getCdemoPgmContext(), 1)
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCustomerInfo().getCdemoCustId(), 9)
                    + source.getCdemoCustomerInfo().getCdemoCustFname()
                    + source.getCdemoCustomerInfo().getCdemoCustMname()
                    + source.getCdemoCustomerInfo().getCdemoCustLname()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoAccountInfo().getCdemoAcctId(), 11)
                    + source.getCdemoAccountInfo().getCdemoAcctStatus()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCardInfo().getCdemoCardNum(), 16)
                    + source.getCdemoMoreInfo().getCdemoLastMap()
                    + source.getCdemoMoreInfo().getCdemoLastMapset());
        }

        @AfterMapping
        default void makeSource(Comen01cDfhcommarea source,
                @MappingTarget CarddemoCommarea target) {
            target.getCdemoGeneralInfo().setCdemoFromTranid(
                    StringUtils.substring(source.getLkCommarea(), 0, 4));
            target.getCdemoGeneralInfo().setCdemoFromProgram(
                    StringUtils.substring(source.getLkCommarea(), 4, 12));
            target.getCdemoGeneralInfo().setCdemoToTranid(
                    StringUtils.substring(source.getLkCommarea(), 12, 16));
            target.getCdemoGeneralInfo().setCdemoToProgram(
                    StringUtils.substring(source.getLkCommarea(), 16, 24));
            target.getCdemoGeneralInfo().setCdemoUserId(
                    StringUtils.substring(source.getLkCommarea(), 24, 32));
            target.getCdemoGeneralInfo().setCdemoUserType(
                    StringUtils.substring(source.getLkCommarea(), 32, 33));
            target.getCdemoGeneralInfo().setCdemoPgmContext(
                    ((int) DataConverter.convZonedStringToLong(StringUtils
                            .substring(source.getLkCommarea(), 33, 34), 1)));
            target.getCdemoCustomerInfo().setCdemoCustId(
                    ((int) DataConverter.convZonedStringToLong(StringUtils
                            .substring(source.getLkCommarea(), 34, 43), 9)));
            target.getCdemoCustomerInfo().setCdemoCustFname(
                    StringUtils.substring(source.getLkCommarea(), 43, 68));
            target.getCdemoCustomerInfo().setCdemoCustMname(
                    StringUtils.substring(source.getLkCommarea(), 68, 93));
            target.getCdemoCustomerInfo().setCdemoCustLname(
                    StringUtils.substring(source.getLkCommarea(), 93, 118));
            try {
                target.getCdemoAccountInfo().setCdemoAcctId(
                        DataConverter.convZonedStringToLong(StringUtils
                                .substring(source.getLkCommarea(), 118, 129),
                                11));
            } catch (Exception e) {
                e.printStackTrace();
            }
            target.getCdemoAccountInfo().setCdemoAcctStatus(
                    StringUtils.substring(source.getLkCommarea(), 129, 130));
            try {
                target.getCdemoCardInfo().setCdemoCardNum(
                        DataConverter.convZonedStringToLong(StringUtils
                                .substring(source.getLkCommarea(), 130, 146),
                                16));
            } catch (Exception e) {
                e.printStackTrace();
            }
            target.getCdemoMoreInfo().setCdemoLastMap(
                    StringUtils.substring(source.getLkCommarea(), 146, 153));
            target.getCdemoMoreInfo().setCdemoLastMapset(
                    StringUtils.substring(source.getLkCommarea(), 153, 160));
        }
    }

    /** 
     * <p>Mapper class to convert data for CICS processing</p>
     * <ul>
     * <li>source class: {@link CarddemoCommarea}</li>
     * <li>target class: {@link CocrdlicDfhcommarea}</li>
     * </ul>
     */
    @Mapper(unmappedTargetPolicy = ReportingPolicy.IGNORE, builder = @org.mapstruct.Builder(disableBuilder = true))
    public interface CarddemoCommareaToCocrdlicDfhcommarea {
        CarddemoCommareaToCocrdlicDfhcommarea INSTANCE = Mappers
                .getMapper(CarddemoCommareaToCocrdlicDfhcommarea.class);

        CocrdlicDfhcommarea toTarget(CarddemoCommarea source);

        CarddemoCommarea toSource(CocrdlicDfhcommarea source);

        @AfterMapping
        default void makeTarget(CarddemoCommarea source,
                @MappingTarget CocrdlicDfhcommarea target) {
            target.setFILLER_1(source.getCdemoGeneralInfo()
                    .getCdemoFromTranid()
                    + source.getCdemoGeneralInfo().getCdemoFromProgram()
                    + source.getCdemoGeneralInfo().getCdemoToTranid()
                    + source.getCdemoGeneralInfo().getCdemoToProgram()
                    + source.getCdemoGeneralInfo().getCdemoUserId()
                    + source.getCdemoGeneralInfo().getCdemoUserType()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoGeneralInfo().getCdemoPgmContext(), 1)
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCustomerInfo().getCdemoCustId(), 9)
                    + source.getCdemoCustomerInfo().getCdemoCustFname()
                    + source.getCdemoCustomerInfo().getCdemoCustMname()
                    + source.getCdemoCustomerInfo().getCdemoCustLname()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoAccountInfo().getCdemoAcctId(), 11)
                    + source.getCdemoAccountInfo().getCdemoAcctStatus()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCardInfo().getCdemoCardNum(), 16)
                    + source.getCdemoMoreInfo().getCdemoLastMap()
                    + source.getCdemoMoreInfo().getCdemoLastMapset());
        }

        @AfterMapping
        default void makeSource(CocrdlicDfhcommarea source,
                @MappingTarget CarddemoCommarea target) {
            target.getCdemoGeneralInfo().setCdemoFromTranid(
                    StringUtils.substring(source.getFILLER_1(), 0, 4));
            target.getCdemoGeneralInfo().setCdemoFromProgram(
                    StringUtils.substring(source.getFILLER_1(), 4, 12));
            target.getCdemoGeneralInfo().setCdemoToTranid(
                    StringUtils.substring(source.getFILLER_1(), 12, 16));
            target.getCdemoGeneralInfo().setCdemoToProgram(
                    StringUtils.substring(source.getFILLER_1(), 16, 24));
            target.getCdemoGeneralInfo().setCdemoUserId(
                    StringUtils.substring(source.getFILLER_1(), 24, 32));
            target.getCdemoGeneralInfo().setCdemoUserType(
                    StringUtils.substring(source.getFILLER_1(), 32, 33));
            target.getCdemoGeneralInfo()
                    .setCdemoPgmContext(
                            ((int) DataConverter.convZonedStringToLong(
                                    StringUtils.substring(source.getFILLER_1(),
                                            33, 34), 1)));
            target.getCdemoCustomerInfo()
                    .setCdemoCustId(
                            ((int) DataConverter.convZonedStringToLong(
                                    StringUtils.substring(source.getFILLER_1(),
                                            34, 43), 9)));
            target.getCdemoCustomerInfo().setCdemoCustFname(
                    StringUtils.substring(source.getFILLER_1(), 43, 68));
            target.getCdemoCustomerInfo().setCdemoCustMname(
                    StringUtils.substring(source.getFILLER_1(), 68, 93));
            target.getCdemoCustomerInfo().setCdemoCustLname(
                    StringUtils.substring(source.getFILLER_1(), 93, 118));
            try {
                target.getCdemoAccountInfo()
                        .setCdemoAcctId(
                                DataConverter.convZonedStringToLong(
                                        StringUtils.substring(
                                                source.getFILLER_1(), 118, 129),
                                        11));
            } catch (Exception e) {
                e.printStackTrace();
            }
            target.getCdemoAccountInfo().setCdemoAcctStatus(
                    StringUtils.substring(source.getFILLER_1(), 129, 130));
            try {
                target.getCdemoCardInfo()
                        .setCdemoCardNum(
                                DataConverter.convZonedStringToLong(
                                        StringUtils.substring(
                                                source.getFILLER_1(), 130, 146),
                                        16));
            } catch (Exception e) {
                e.printStackTrace();
            }
            target.getCdemoMoreInfo().setCdemoLastMap(
                    StringUtils.substring(source.getFILLER_1(), 146, 153));
            target.getCdemoMoreInfo().setCdemoLastMapset(
                    StringUtils.substring(source.getFILLER_1(), 153, 160));
        }
    }
}
