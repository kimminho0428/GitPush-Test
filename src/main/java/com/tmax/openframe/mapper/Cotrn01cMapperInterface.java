package com.tmax.openframe.mapper;

import com.tmax.openframe.DataConverter;
import org.apache.commons.lang3.StringUtils;
import org.mapstruct.*;
import org.mapstruct.factory.*;
import com.tmax.openframe.variable.group.Cotrn01cCarddemoCommarea;
import com.tmax.openframe.variable.group.Cosgn00cDfhcommarea;
import com.tmax.openframe.variable.group.Comen01cDfhcommarea;
import com.tmax.openframe.variable.group.TranRecord;
import com.tmax.openframe.dto.AwsM2CarddemoTransactVsamKsdsDto;
import com.tmax.openframe.variable.group.Cotrn01cDfhcommarea;
import com.tmax.openframe.variable.group.Cotrn00cDfhcommarea;
import java.math.*;
import java.util.*;
import lombok.*;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:18 KST</p>
 * <hr>
 * <p>Mapper class for converting data between different classes</p>
 */
public interface Cotrn01cMapperInterface {
    /** 
     * <p>Mapper class to convert data for CICS processing</p>
     * <ul>
     * <li>source class: {@link Cotrn01cCarddemoCommarea}</li>
     * <li>target class: {@link Cosgn00cDfhcommarea}</li>
     * </ul>
     */
    @Mapper(unmappedTargetPolicy = ReportingPolicy.IGNORE, builder = @org.mapstruct.Builder(disableBuilder = true))
    public interface Cotrn01cCarddemoCommareaToCosgn00cDfhcommarea {
        Cotrn01cCarddemoCommareaToCosgn00cDfhcommarea INSTANCE = Mappers
                .getMapper(Cotrn01cCarddemoCommareaToCosgn00cDfhcommarea.class);

        Cosgn00cDfhcommarea toTarget(Cotrn01cCarddemoCommarea source);

        Cotrn01cCarddemoCommarea toSource(Cosgn00cDfhcommarea source);

        @AfterMapping
        default void makeTarget(Cotrn01cCarddemoCommarea source,
                @MappingTarget Cosgn00cDfhcommarea target) {
            target.setLkCommarea(source.getCdemoGeneralInfo()
                    .getCdemoFromTranid()
                    + source.getCdemoGeneralInfo().getCdemoFromProgram()
                    + source.getCdemoGeneralInfo().getCdemoToTranid()
                    + source.getCdemoGeneralInfo().getCdemoToProgram()
                    + source.getCdemoGeneralInfo().getCdemoUserId()
                    + source.getCdemoGeneralInfo().getCdemoUserType()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoGeneralInfo().getCdemoPgmContext(), 1)
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCustomerInfo().getCdemoCustId(), 9)
                    + source.getCdemoCustomerInfo().getCdemoCustFname()
                    + source.getCdemoCustomerInfo().getCdemoCustMname()
                    + source.getCdemoCustomerInfo().getCdemoCustLname()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoAccountInfo().getCdemoAcctId(), 11)
                    + source.getCdemoAccountInfo().getCdemoAcctStatus()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCardInfo().getCdemoCardNum(), 16)
                    + source.getCdemoMoreInfo().getCdemoLastMap()
                    + source.getCdemoMoreInfo().getCdemoLastMapset()
                    + source.getCdemoCt01Info().getCdemoCt01TrnidFirst()
                    + source.getCdemoCt01Info().getCdemoCt01TrnidLast()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCt01Info().getCdemoCt01PageNum(), 8)
                    + source.getCdemoCt01Info().getCdemoCt01NextPageFlg()
                    + source.getCdemoCt01Info().getCdemoCt01TrnSelFlg()
                    + source.getCdemoCt01Info().getCdemoCt01TrnSelected());
        }

        @AfterMapping
        default void makeSource(Cosgn00cDfhcommarea source,
                @MappingTarget Cotrn01cCarddemoCommarea target) {
            target.getCdemoGeneralInfo().setCdemoFromTranid(
                    StringUtils.substring(source.getLkCommarea(), 0, 4));
            target.getCdemoGeneralInfo().setCdemoFromProgram(
                    StringUtils.substring(source.getLkCommarea(), 4, 12));
            target.getCdemoGeneralInfo().setCdemoToTranid(
                    StringUtils.substring(source.getLkCommarea(), 12, 16));
            target.getCdemoGeneralInfo().setCdemoToProgram(
                    StringUtils.substring(source.getLkCommarea(), 16, 24));
            target.getCdemoGeneralInfo().setCdemoUserId(
                    StringUtils.substring(source.getLkCommarea(), 24, 32));
            target.getCdemoGeneralInfo().setCdemoUserType(
                    StringUtils.substring(source.getLkCommarea(), 32, 33));
            target.getCdemoGeneralInfo().setCdemoPgmContext(
                    ((int) DataConverter.convZonedStringToLong(StringUtils
                            .substring(source.getLkCommarea(), 33, 34), 1)));
            target.getCdemoCustomerInfo().setCdemoCustId(
                    ((int) DataConverter.convZonedStringToLong(StringUtils
                            .substring(source.getLkCommarea(), 34, 43), 9)));
            target.getCdemoCustomerInfo().setCdemoCustFname(
                    StringUtils.substring(source.getLkCommarea(), 43, 68));
            target.getCdemoCustomerInfo().setCdemoCustMname(
                    StringUtils.substring(source.getLkCommarea(), 68, 93));
            target.getCdemoCustomerInfo().setCdemoCustLname(
                    StringUtils.substring(source.getLkCommarea(), 93, 118));
            try {
                target.getCdemoAccountInfo().setCdemoAcctId(
                        DataConverter.convZonedStringToLong(StringUtils
                                .substring(source.getLkCommarea(), 118, 129),
                                11));
            } catch (Exception e) {
                e.printStackTrace();
            }
            target.getCdemoAccountInfo().setCdemoAcctStatus(
                    StringUtils.substring(source.getLkCommarea(), 129, 130));
            try {
                target.getCdemoCardInfo().setCdemoCardNum(
                        DataConverter.convZonedStringToLong(StringUtils
                                .substring(source.getLkCommarea(), 130, 146),
                                16));
            } catch (Exception e) {
                e.printStackTrace();
            }
            target.getCdemoMoreInfo().setCdemoLastMap(
                    StringUtils.substring(source.getLkCommarea(), 146, 153));
            target.getCdemoMoreInfo().setCdemoLastMapset(
                    StringUtils.substring(source.getLkCommarea(), 153, 160));
            target.getCdemoCt01Info().setCdemoCt01TrnidFirst(
                    StringUtils.substring(source.getLkCommarea(), 160, 176));
            target.getCdemoCt01Info().setCdemoCt01TrnidLast(
                    StringUtils.substring(source.getLkCommarea(), 176, 192));
            target.getCdemoCt01Info().setCdemoCt01PageNum(
                    ((int) DataConverter.convZonedStringToLong(StringUtils
                            .substring(source.getLkCommarea(), 192, 200), 8)));
            target.getCdemoCt01Info().setCdemoCt01NextPageFlg(
                    StringUtils.substring(source.getLkCommarea(), 200, 201));
            target.getCdemoCt01Info().setCdemoCt01TrnSelFlg(
                    StringUtils.substring(source.getLkCommarea(), 201, 202));
            target.getCdemoCt01Info().setCdemoCt01TrnSelected(
                    StringUtils.substring(source.getLkCommarea(), 202, 218));
        }
    }

    /** 
     * <p>Mapper class to convert data for CICS processing</p>
     * <ul>
     * <li>source class: {@link Cotrn01cCarddemoCommarea}</li>
     * <li>target class: {@link Comen01cDfhcommarea}</li>
     * </ul>
     */
    @Mapper(unmappedTargetPolicy = ReportingPolicy.IGNORE, builder = @org.mapstruct.Builder(disableBuilder = true))
    public interface Cotrn01cCarddemoCommareaToComen01cDfhcommarea {
        Cotrn01cCarddemoCommareaToComen01cDfhcommarea INSTANCE = Mappers
                .getMapper(Cotrn01cCarddemoCommareaToComen01cDfhcommarea.class);

        Comen01cDfhcommarea toTarget(Cotrn01cCarddemoCommarea source);

        Cotrn01cCarddemoCommarea toSource(Comen01cDfhcommarea source);

        @AfterMapping
        default void makeTarget(Cotrn01cCarddemoCommarea source,
                @MappingTarget Comen01cDfhcommarea target) {
            target.setLkCommarea(source.getCdemoGeneralInfo()
                    .getCdemoFromTranid()
                    + source.getCdemoGeneralInfo().getCdemoFromProgram()
                    + source.getCdemoGeneralInfo().getCdemoToTranid()
                    + source.getCdemoGeneralInfo().getCdemoToProgram()
                    + source.getCdemoGeneralInfo().getCdemoUserId()
                    + source.getCdemoGeneralInfo().getCdemoUserType()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoGeneralInfo().getCdemoPgmContext(), 1)
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCustomerInfo().getCdemoCustId(), 9)
                    + source.getCdemoCustomerInfo().getCdemoCustFname()
                    + source.getCdemoCustomerInfo().getCdemoCustMname()
                    + source.getCdemoCustomerInfo().getCdemoCustLname()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoAccountInfo().getCdemoAcctId(), 11)
                    + source.getCdemoAccountInfo().getCdemoAcctStatus()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCardInfo().getCdemoCardNum(), 16)
                    + source.getCdemoMoreInfo().getCdemoLastMap()
                    + source.getCdemoMoreInfo().getCdemoLastMapset()
                    + source.getCdemoCt01Info().getCdemoCt01TrnidFirst()
                    + source.getCdemoCt01Info().getCdemoCt01TrnidLast()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCt01Info().getCdemoCt01PageNum(), 8)
                    + source.getCdemoCt01Info().getCdemoCt01NextPageFlg()
                    + source.getCdemoCt01Info().getCdemoCt01TrnSelFlg()
                    + source.getCdemoCt01Info().getCdemoCt01TrnSelected());
        }

        @AfterMapping
        default void makeSource(Comen01cDfhcommarea source,
                @MappingTarget Cotrn01cCarddemoCommarea target) {
            target.getCdemoGeneralInfo().setCdemoFromTranid(
                    StringUtils.substring(source.getLkCommarea(), 0, 4));
            target.getCdemoGeneralInfo().setCdemoFromProgram(
                    StringUtils.substring(source.getLkCommarea(), 4, 12));
            target.getCdemoGeneralInfo().setCdemoToTranid(
                    StringUtils.substring(source.getLkCommarea(), 12, 16));
            target.getCdemoGeneralInfo().setCdemoToProgram(
                    StringUtils.substring(source.getLkCommarea(), 16, 24));
            target.getCdemoGeneralInfo().setCdemoUserId(
                    StringUtils.substring(source.getLkCommarea(), 24, 32));
            target.getCdemoGeneralInfo().setCdemoUserType(
                    StringUtils.substring(source.getLkCommarea(), 32, 33));
            target.getCdemoGeneralInfo().setCdemoPgmContext(
                    ((int) DataConverter.convZonedStringToLong(StringUtils
                            .substring(source.getLkCommarea(), 33, 34), 1)));
            target.getCdemoCustomerInfo().setCdemoCustId(
                    ((int) DataConverter.convZonedStringToLong(StringUtils
                            .substring(source.getLkCommarea(), 34, 43), 9)));
            target.getCdemoCustomerInfo().setCdemoCustFname(
                    StringUtils.substring(source.getLkCommarea(), 43, 68));
            target.getCdemoCustomerInfo().setCdemoCustMname(
                    StringUtils.substring(source.getLkCommarea(), 68, 93));
            target.getCdemoCustomerInfo().setCdemoCustLname(
                    StringUtils.substring(source.getLkCommarea(), 93, 118));
            try {
                target.getCdemoAccountInfo().setCdemoAcctId(
                        DataConverter.convZonedStringToLong(StringUtils
                                .substring(source.getLkCommarea(), 118, 129),
                                11));
            } catch (Exception e) {
                e.printStackTrace();
            }
            target.getCdemoAccountInfo().setCdemoAcctStatus(
                    StringUtils.substring(source.getLkCommarea(), 129, 130));
            try {
                target.getCdemoCardInfo().setCdemoCardNum(
                        DataConverter.convZonedStringToLong(StringUtils
                                .substring(source.getLkCommarea(), 130, 146),
                                16));
            } catch (Exception e) {
                e.printStackTrace();
            }
            target.getCdemoMoreInfo().setCdemoLastMap(
                    StringUtils.substring(source.getLkCommarea(), 146, 153));
            target.getCdemoMoreInfo().setCdemoLastMapset(
                    StringUtils.substring(source.getLkCommarea(), 153, 160));
            target.getCdemoCt01Info().setCdemoCt01TrnidFirst(
                    StringUtils.substring(source.getLkCommarea(), 160, 176));
            target.getCdemoCt01Info().setCdemoCt01TrnidLast(
                    StringUtils.substring(source.getLkCommarea(), 176, 192));
            target.getCdemoCt01Info().setCdemoCt01PageNum(
                    ((int) DataConverter.convZonedStringToLong(StringUtils
                            .substring(source.getLkCommarea(), 192, 200), 8)));
            target.getCdemoCt01Info().setCdemoCt01NextPageFlg(
                    StringUtils.substring(source.getLkCommarea(), 200, 201));
            target.getCdemoCt01Info().setCdemoCt01TrnSelFlg(
                    StringUtils.substring(source.getLkCommarea(), 201, 202));
            target.getCdemoCt01Info().setCdemoCt01TrnSelected(
                    StringUtils.substring(source.getLkCommarea(), 202, 218));
        }
    }

    /** 
     * <p>Mapper class to convert data for CICS processing</p>
     * <ul>
     * <li>source class: {@link TranRecord}</li>
     * <li>target class: {@link AwsM2CarddemoTransactVsamKsdsDto}</li>
     * </ul>
     */
    @Mapper(unmappedTargetPolicy = ReportingPolicy.IGNORE, builder = @org.mapstruct.Builder(disableBuilder = true))
    public interface TranRecordToAwsM2CarddemoTransactVsamKsdsDto {
        TranRecordToAwsM2CarddemoTransactVsamKsdsDto INSTANCE = Mappers
                .getMapper(TranRecordToAwsM2CarddemoTransactVsamKsdsDto.class);

        @Mapping(source = "tranId", target = "tranId")
        @Mapping(source = "tranTypeCd", target = "tranTypeCd")
        @Mapping(source = "tranCatCd", target = "tranCatCd")
        @Mapping(source = "tranSource", target = "tranSource")
        @Mapping(source = "tranDesc", target = "tranDesc")
        @Mapping(source = "tranAmt", target = "tranAmt")
        @Mapping(source = "tranMerchantId", target = "tranMerchantId")
        @Mapping(source = "tranMerchantName", target = "tranMerchantName")
        @Mapping(source = "tranMerchantCity", target = "tranMerchantCity")
        @Mapping(source = "tranMerchantZip", target = "tranMerchantZip")
        @Mapping(source = "tranCardNum", target = "tranCardNum")
        @Mapping(source = "tranOrigTs", target = "tranOrigTs")
        @Mapping(source = "tranProcTs", target = "tranProcTs")
        @Mapping(source = "FILLER_1", target = "filler")
        AwsM2CarddemoTransactVsamKsdsDto toTarget(TranRecord source);

        @Mapping(source = "tranId", target = "tranId")
        @Mapping(source = "tranTypeCd", target = "tranTypeCd")
        @Mapping(source = "tranCatCd", target = "tranCatCd")
        @Mapping(source = "tranSource", target = "tranSource")
        @Mapping(source = "tranDesc", target = "tranDesc")
        @Mapping(source = "tranAmt", target = "tranAmt")
        @Mapping(source = "tranMerchantId", target = "tranMerchantId")
        @Mapping(source = "tranMerchantName", target = "tranMerchantName")
        @Mapping(source = "tranMerchantCity", target = "tranMerchantCity")
        @Mapping(source = "tranMerchantZip", target = "tranMerchantZip")
        @Mapping(source = "tranCardNum", target = "tranCardNum")
        @Mapping(source = "tranOrigTs", target = "tranOrigTs")
        @Mapping(source = "tranProcTs", target = "tranProcTs")
        @Mapping(source = "filler", target = "FILLER_1")
        TranRecord toSource(AwsM2CarddemoTransactVsamKsdsDto source);
    }

    /** 
     * <p>Mapper class to convert data for CICS processing</p>
     * <ul>
     * <li>source class: {@link Cotrn01cCarddemoCommarea}</li>
     * <li>target class: {@link Cotrn01cDfhcommarea}</li>
     * </ul>
     */
    @Mapper(unmappedTargetPolicy = ReportingPolicy.IGNORE, builder = @org.mapstruct.Builder(disableBuilder = true))
    public interface Cotrn01cCarddemoCommareaToCotrn01cDfhcommarea {
        Cotrn01cCarddemoCommareaToCotrn01cDfhcommarea INSTANCE = Mappers
                .getMapper(Cotrn01cCarddemoCommareaToCotrn01cDfhcommarea.class);

        Cotrn01cDfhcommarea toTarget(Cotrn01cCarddemoCommarea source);

        Cotrn01cCarddemoCommarea toSource(Cotrn01cDfhcommarea source);

        @AfterMapping
        default void makeTarget(Cotrn01cCarddemoCommarea source,
                @MappingTarget Cotrn01cDfhcommarea target) {
            target.setLkCommarea(source.getCdemoGeneralInfo()
                    .getCdemoFromTranid()
                    + source.getCdemoGeneralInfo().getCdemoFromProgram()
                    + source.getCdemoGeneralInfo().getCdemoToTranid()
                    + source.getCdemoGeneralInfo().getCdemoToProgram()
                    + source.getCdemoGeneralInfo().getCdemoUserId()
                    + source.getCdemoGeneralInfo().getCdemoUserType()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoGeneralInfo().getCdemoPgmContext(), 1)
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCustomerInfo().getCdemoCustId(), 9)
                    + source.getCdemoCustomerInfo().getCdemoCustFname()
                    + source.getCdemoCustomerInfo().getCdemoCustMname()
                    + source.getCdemoCustomerInfo().getCdemoCustLname()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoAccountInfo().getCdemoAcctId(), 11)
                    + source.getCdemoAccountInfo().getCdemoAcctStatus()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCardInfo().getCdemoCardNum(), 16)
                    + source.getCdemoMoreInfo().getCdemoLastMap()
                    + source.getCdemoMoreInfo().getCdemoLastMapset()
                    + source.getCdemoCt01Info().getCdemoCt01TrnidFirst()
                    + source.getCdemoCt01Info().getCdemoCt01TrnidLast()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCt01Info().getCdemoCt01PageNum(), 8)
                    + source.getCdemoCt01Info().getCdemoCt01NextPageFlg()
                    + source.getCdemoCt01Info().getCdemoCt01TrnSelFlg()
                    + source.getCdemoCt01Info().getCdemoCt01TrnSelected());
        }

        @AfterMapping
        default void makeSource(Cotrn01cDfhcommarea source,
                @MappingTarget Cotrn01cCarddemoCommarea target) {
            target.getCdemoGeneralInfo().setCdemoFromTranid(
                    StringUtils.substring(source.getLkCommarea(), 0, 4));
            target.getCdemoGeneralInfo().setCdemoFromProgram(
                    StringUtils.substring(source.getLkCommarea(), 4, 12));
            target.getCdemoGeneralInfo().setCdemoToTranid(
                    StringUtils.substring(source.getLkCommarea(), 12, 16));
            target.getCdemoGeneralInfo().setCdemoToProgram(
                    StringUtils.substring(source.getLkCommarea(), 16, 24));
            target.getCdemoGeneralInfo().setCdemoUserId(
                    StringUtils.substring(source.getLkCommarea(), 24, 32));
            target.getCdemoGeneralInfo().setCdemoUserType(
                    StringUtils.substring(source.getLkCommarea(), 32, 33));
            target.getCdemoGeneralInfo().setCdemoPgmContext(
                    ((int) DataConverter.convZonedStringToLong(StringUtils
                            .substring(source.getLkCommarea(), 33, 34), 1)));
            target.getCdemoCustomerInfo().setCdemoCustId(
                    ((int) DataConverter.convZonedStringToLong(StringUtils
                            .substring(source.getLkCommarea(), 34, 43), 9)));
            target.getCdemoCustomerInfo().setCdemoCustFname(
                    StringUtils.substring(source.getLkCommarea(), 43, 68));
            target.getCdemoCustomerInfo().setCdemoCustMname(
                    StringUtils.substring(source.getLkCommarea(), 68, 93));
            target.getCdemoCustomerInfo().setCdemoCustLname(
                    StringUtils.substring(source.getLkCommarea(), 93, 118));
            try {
                target.getCdemoAccountInfo().setCdemoAcctId(
                        DataConverter.convZonedStringToLong(StringUtils
                                .substring(source.getLkCommarea(), 118, 129),
                                11));
            } catch (Exception e) {
                e.printStackTrace();
            }
            target.getCdemoAccountInfo().setCdemoAcctStatus(
                    StringUtils.substring(source.getLkCommarea(), 129, 130));
            try {
                target.getCdemoCardInfo().setCdemoCardNum(
                        DataConverter.convZonedStringToLong(StringUtils
                                .substring(source.getLkCommarea(), 130, 146),
                                16));
            } catch (Exception e) {
                e.printStackTrace();
            }
            target.getCdemoMoreInfo().setCdemoLastMap(
                    StringUtils.substring(source.getLkCommarea(), 146, 153));
            target.getCdemoMoreInfo().setCdemoLastMapset(
                    StringUtils.substring(source.getLkCommarea(), 153, 160));
            target.getCdemoCt01Info().setCdemoCt01TrnidFirst(
                    StringUtils.substring(source.getLkCommarea(), 160, 176));
            target.getCdemoCt01Info().setCdemoCt01TrnidLast(
                    StringUtils.substring(source.getLkCommarea(), 176, 192));
            target.getCdemoCt01Info().setCdemoCt01PageNum(
                    ((int) DataConverter.convZonedStringToLong(StringUtils
                            .substring(source.getLkCommarea(), 192, 200), 8)));
            target.getCdemoCt01Info().setCdemoCt01NextPageFlg(
                    StringUtils.substring(source.getLkCommarea(), 200, 201));
            target.getCdemoCt01Info().setCdemoCt01TrnSelFlg(
                    StringUtils.substring(source.getLkCommarea(), 201, 202));
            target.getCdemoCt01Info().setCdemoCt01TrnSelected(
                    StringUtils.substring(source.getLkCommarea(), 202, 218));
        }
    }

    /** 
     * <p>Mapper class to convert data for CICS processing</p>
     * <ul>
     * <li>source class: {@link Cotrn01cCarddemoCommarea}</li>
     * <li>target class: {@link Cotrn00cDfhcommarea}</li>
     * </ul>
     */
    @Mapper(unmappedTargetPolicy = ReportingPolicy.IGNORE, builder = @org.mapstruct.Builder(disableBuilder = true))
    public interface Cotrn01cCarddemoCommareaToCotrn00cDfhcommarea {
        Cotrn01cCarddemoCommareaToCotrn00cDfhcommarea INSTANCE = Mappers
                .getMapper(Cotrn01cCarddemoCommareaToCotrn00cDfhcommarea.class);

        Cotrn00cDfhcommarea toTarget(Cotrn01cCarddemoCommarea source);

        Cotrn01cCarddemoCommarea toSource(Cotrn00cDfhcommarea source);

        @AfterMapping
        default void makeTarget(Cotrn01cCarddemoCommarea source,
                @MappingTarget Cotrn00cDfhcommarea target) {
            target.setLkCommarea(source.getCdemoGeneralInfo()
                    .getCdemoFromTranid()
                    + source.getCdemoGeneralInfo().getCdemoFromProgram()
                    + source.getCdemoGeneralInfo().getCdemoToTranid()
                    + source.getCdemoGeneralInfo().getCdemoToProgram()
                    + source.getCdemoGeneralInfo().getCdemoUserId()
                    + source.getCdemoGeneralInfo().getCdemoUserType()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoGeneralInfo().getCdemoPgmContext(), 1)
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCustomerInfo().getCdemoCustId(), 9)
                    + source.getCdemoCustomerInfo().getCdemoCustFname()
                    + source.getCdemoCustomerInfo().getCdemoCustMname()
                    + source.getCdemoCustomerInfo().getCdemoCustLname()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoAccountInfo().getCdemoAcctId(), 11)
                    + source.getCdemoAccountInfo().getCdemoAcctStatus()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCardInfo().getCdemoCardNum(), 16)
                    + source.getCdemoMoreInfo().getCdemoLastMap()
                    + source.getCdemoMoreInfo().getCdemoLastMapset()
                    + source.getCdemoCt01Info().getCdemoCt01TrnidFirst()
                    + source.getCdemoCt01Info().getCdemoCt01TrnidLast()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCt01Info().getCdemoCt01PageNum(), 8)
                    + source.getCdemoCt01Info().getCdemoCt01NextPageFlg()
                    + source.getCdemoCt01Info().getCdemoCt01TrnSelFlg()
                    + source.getCdemoCt01Info().getCdemoCt01TrnSelected());
        }

        @AfterMapping
        default void makeSource(Cotrn00cDfhcommarea source,
                @MappingTarget Cotrn01cCarddemoCommarea target) {
            target.getCdemoGeneralInfo().setCdemoFromTranid(
                    StringUtils.substring(source.getLkCommarea(), 0, 4));
            target.getCdemoGeneralInfo().setCdemoFromProgram(
                    StringUtils.substring(source.getLkCommarea(), 4, 12));
            target.getCdemoGeneralInfo().setCdemoToTranid(
                    StringUtils.substring(source.getLkCommarea(), 12, 16));
            target.getCdemoGeneralInfo().setCdemoToProgram(
                    StringUtils.substring(source.getLkCommarea(), 16, 24));
            target.getCdemoGeneralInfo().setCdemoUserId(
                    StringUtils.substring(source.getLkCommarea(), 24, 32));
            target.getCdemoGeneralInfo().setCdemoUserType(
                    StringUtils.substring(source.getLkCommarea(), 32, 33));
            target.getCdemoGeneralInfo().setCdemoPgmContext(
                    ((int) DataConverter.convZonedStringToLong(StringUtils
                            .substring(source.getLkCommarea(), 33, 34), 1)));
            target.getCdemoCustomerInfo().setCdemoCustId(
                    ((int) DataConverter.convZonedStringToLong(StringUtils
                            .substring(source.getLkCommarea(), 34, 43), 9)));
            target.getCdemoCustomerInfo().setCdemoCustFname(
                    StringUtils.substring(source.getLkCommarea(), 43, 68));
            target.getCdemoCustomerInfo().setCdemoCustMname(
                    StringUtils.substring(source.getLkCommarea(), 68, 93));
            target.getCdemoCustomerInfo().setCdemoCustLname(
                    StringUtils.substring(source.getLkCommarea(), 93, 118));
            try {
                target.getCdemoAccountInfo().setCdemoAcctId(
                        DataConverter.convZonedStringToLong(StringUtils
                                .substring(source.getLkCommarea(), 118, 129),
                                11));
            } catch (Exception e) {
                e.printStackTrace();
            }
            target.getCdemoAccountInfo().setCdemoAcctStatus(
                    StringUtils.substring(source.getLkCommarea(), 129, 130));
            try {
                target.getCdemoCardInfo().setCdemoCardNum(
                        DataConverter.convZonedStringToLong(StringUtils
                                .substring(source.getLkCommarea(), 130, 146),
                                16));
            } catch (Exception e) {
                e.printStackTrace();
            }
            target.getCdemoMoreInfo().setCdemoLastMap(
                    StringUtils.substring(source.getLkCommarea(), 146, 153));
            target.getCdemoMoreInfo().setCdemoLastMapset(
                    StringUtils.substring(source.getLkCommarea(), 153, 160));
            target.getCdemoCt01Info().setCdemoCt01TrnidFirst(
                    StringUtils.substring(source.getLkCommarea(), 160, 176));
            target.getCdemoCt01Info().setCdemoCt01TrnidLast(
                    StringUtils.substring(source.getLkCommarea(), 176, 192));
            target.getCdemoCt01Info().setCdemoCt01PageNum(
                    ((int) DataConverter.convZonedStringToLong(StringUtils
                            .substring(source.getLkCommarea(), 192, 200), 8)));
            target.getCdemoCt01Info().setCdemoCt01NextPageFlg(
                    StringUtils.substring(source.getLkCommarea(), 200, 201));
            target.getCdemoCt01Info().setCdemoCt01TrnSelFlg(
                    StringUtils.substring(source.getLkCommarea(), 201, 202));
            target.getCdemoCt01Info().setCdemoCt01TrnSelected(
                    StringUtils.substring(source.getLkCommarea(), 202, 218));
        }
    }
}
