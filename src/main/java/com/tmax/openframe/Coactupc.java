package com.tmax.openframe;

import com.tmax.openframe.online.handle.service.AbendHandler;
import com.tmax.openframe.online.task.service.ProgramControl;
import com.tmax.openframe.dto.Comen01cInputDto;
import com.tmax.openframe.mapper.CoactupcMapperInterface.*;
import com.tmax.openframe.online.task.service.OtherUserTaskInvoker;
import com.tmax.openframe.online.task.domain.dto.TaskDto.*;
import com.tmax.openframe.online.task.domain.dto.Data;
import com.tmax.openframe.online.task.service.Task;
import com.tmax.openframe.dto.CoactupcInputDto;
import com.tmax.openframe.online.exception.ConditionException;
import com.tmax.openframe.dto.CoactupcOutputDto;
import com.tmax.openframe.dto.AwsM2CarddemoCardxrefVsamKsdsDto;
import com.tmax.openframe.online.daoexecutor.service.ReadPointManager;
import com.tmax.openframe.online.daoexecutor.service.RecordKeyAccessor;
import com.tmax.openframe.dto.AwsM2CarddemoAcctdataVsamKsdsDto;
import com.tmax.openframe.dto.AwsM2CarddemoCustdataVsamKsdsDto;
import com.tmax.openframe.online.exception.OnlineException;
import com.tmax.openframe.online.exception.AbendException;
import static com.tmax.openframe.variable.CoactupcVariableContainer.*;
import static com.tmax.openframe.variable.group.CarddemoCommarea.CdemoGeneralInfo.*;
import static com.tmax.openframe.variable.group.CcWorkAreas.CcWorkArea.*;
import static com.tmax.openframe.variable.group.CoactupcUsStateZipcodeToEdit.*;
import static com.tmax.openframe.variable.group.CoactupcWsMiscStorage.*;
import static com.tmax.openframe.variable.group.CoactupcWsMiscStorage.CoactupcWsCalculationVars.CoactupcWsEditDateCcyymmdd.*;
import static com.tmax.openframe.variable.group.CoactupcWsMiscStorage.CoactupcWsCalculationVars.CoactupcWsEditDateCcyymmdd.CoactupcWsEditDateCcyy.*;
import static com.tmax.openframe.variable.group.CoactupcWsMiscStorage.CoactupcWsCalculationVars.CoactupcWsEditDateFlgs.*;
import static com.tmax.openframe.variable.group.CoactupcWsMiscStorage.CoactupcWsFileReadFlags.*;
import static com.tmax.openframe.variable.group.CoactupcWsMiscStorage.CoactupcWsGenericEdits.*;
import static com.tmax.openframe.variable.group.CoactupcWsMiscStorage.CoactupcWsGenericEdits.CoactupcWsEditUsPhoneNumFlgs.*;
import static com.tmax.openframe.variable.group.CoactupcWsMiscStorage.CoactupcWsGenericEdits.CoactupcWsEditUsSsn.*;
import static com.tmax.openframe.variable.group.CoactupcWsMiscStorage.CoactupcWsGenericEdits.CoactupcWsEditUsSsnFlgs.*;
import static com.tmax.openframe.variable.group.CoactupcWsMiscStorage.CoactupcWsNonKeyFlags.*;
import static com.tmax.openframe.variable.group.CoactupcWsMiscStorage.CoactupcWsNonKeyFlags.CoactupcWsEditAddressFlags.*;
import static com.tmax.openframe.variable.group.CoactupcWsMiscStorage.CoactupcWsNonKeyFlags.CoactupcWsEditAddressFlags.CoactupcWsEditPhoneNum1Flgs.*;
import static com.tmax.openframe.variable.group.CoactupcWsMiscStorage.CoactupcWsNonKeyFlags.CoactupcWsEditAddressFlags.CoactupcWsEditPhoneNum2Flgs.*;
import static com.tmax.openframe.variable.group.CoactupcWsMiscStorage.CoactupcWsNonKeyFlags.CoactupcWsEditDtOfBirthFlgs.*;
import static com.tmax.openframe.variable.group.CoactupcWsMiscStorage.CoactupcWsNonKeyFlags.CoactupcWsEditNameFlags.*;
import static com.tmax.openframe.variable.group.CoactupcWsMiscStorage.CoactupcWsNonKeyFlags.CoactupcWsEditOpenDateFlgs.*;
import static com.tmax.openframe.variable.group.CoactupcWsMiscStorage.CoactupcWsNonKeyFlags.CoactupcWsEditReissueDateFlgs.*;
import static com.tmax.openframe.variable.group.CoactupcWsMiscStorage.CoactupcWsNonKeyFlags.CoactupcWsExpiryDateFlgs.*;
import static com.tmax.openframe.variable.group.CoactupcWsThisProgcommarea.CoactupcAcctUpdateScreenData.*;
import static com.tmax.openframe.variable.group.CoactupcWsThisProgcommarea.CoactupcAcupNewDetails.CoactupcAcupNewCustData.*;
import com.tmax.openframe.mapper.CoactupcMapperInterface;
import com.tmax.openframe.runtime.cobol.CobStream;
import com.tmax.openframe.runtime.cobol.CobStringUtils;
import com.tmax.openframe.runtime.cobol.IntrinsicFunction;
import com.tmax.openframe.runtime.context.OpenFrameContext;
import com.tmax.openframe.runtime.flow.ControlManager;
import com.tmax.openframe.variable.CoactupcVariableContainer;
import com.tmax.openframe.variable.CsutldtcVariableContainer;
import com.tmax.openframe.variable.group.Cactupai;
import com.tmax.openframe.variable.group.CarddemoCommarea;
import com.tmax.openframe.variable.group.CcWorkAreas;
import com.tmax.openframe.variable.group.CoactupcWsMiscStorage;
import com.tmax.openframe.variable.group.CoactupcWsThisProgcommarea;
import java.math.*;
import java.util.*;
import java.util.function.Consumer;
import lombok.*;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Primary;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:12 KST</p>
 * <hr>
 * <p>Java class for defining logics of COBOL program</p>
 * <ul>
 * <li>The name of COBOL program: COACTUPC.cbl</li>
 * <li>Variable container class: {@link CoactupcVariableContainer}</li>
 * </ul>
 */
@Service
@RequiredArgsConstructor
@Transactional
@Primary
public class Coactupc {
    @Autowired
    private Csutldtc csutldtc;
    /** 
     * <p>Class that manages an execution flow of the program</p>
     */
    protected final ControlManager controlManager;
    Consumer<OpenFrameContext> _0000Main = this::_0000Main;
    Consumer<OpenFrameContext> commonReturn = this::commonReturn;
    Consumer<OpenFrameContext> _0000MainExit = this::_0000MainExit;
    Consumer<OpenFrameContext> _1000ProcessInputs = this::_1000ProcessInputs;
    Consumer<OpenFrameContext> _1000ProcessInputsExit = this::_1000ProcessInputsExit;
    Consumer<OpenFrameContext> _1100ReceiveMap = this::_1100ReceiveMap;
    Consumer<OpenFrameContext> _1100ReceiveMapExit = this::_1100ReceiveMapExit;
    Consumer<OpenFrameContext> _1200EditMapInputs = this::_1200EditMapInputs;
    Consumer<OpenFrameContext> _1200EditMapInputsExit = this::_1200EditMapInputsExit;
    Consumer<OpenFrameContext> _1205CompareOldNew = this::_1205CompareOldNew;
    Consumer<OpenFrameContext> _1205CompareOldNewExit = this::_1205CompareOldNewExit;
    Consumer<OpenFrameContext> _1210EditAccount = this::_1210EditAccount;
    Consumer<OpenFrameContext> _1210EditAccountExit = this::_1210EditAccountExit;
    Consumer<OpenFrameContext> _1215EditMandatory = this::_1215EditMandatory;
    Consumer<OpenFrameContext> _1215EditMandatoryExit = this::_1215EditMandatoryExit;
    Consumer<OpenFrameContext> _1220EditYesno = this::_1220EditYesno;
    Consumer<OpenFrameContext> _1220EditYesnoExit = this::_1220EditYesnoExit;
    Consumer<OpenFrameContext> _1225EditAlphaReqd = this::_1225EditAlphaReqd;
    Consumer<OpenFrameContext> _1225EditAlphaReqdExit = this::_1225EditAlphaReqdExit;
    Consumer<OpenFrameContext> _1230EditAlphanumReqd = this::_1230EditAlphanumReqd;
    Consumer<OpenFrameContext> _1230EditAlphanumReqdExit = this::_1230EditAlphanumReqdExit;
    Consumer<OpenFrameContext> _1235EditAlphaOpt = this::_1235EditAlphaOpt;
    Consumer<OpenFrameContext> _1235EditAlphaOptExit = this::_1235EditAlphaOptExit;
    Consumer<OpenFrameContext> _1240EditAlphanumOpt = this::_1240EditAlphanumOpt;
    Consumer<OpenFrameContext> _1240EditAlphanumOptExit = this::_1240EditAlphanumOptExit;
    Consumer<OpenFrameContext> _1245EditNumReqd = this::_1245EditNumReqd;
    Consumer<OpenFrameContext> _1245EditNumReqdExit = this::_1245EditNumReqdExit;
    Consumer<OpenFrameContext> _1250EditSigned9v2 = this::_1250EditSigned9v2;
    Consumer<OpenFrameContext> _1250EditSigned9v2Exit = this::_1250EditSigned9v2Exit;
    Consumer<OpenFrameContext> _1260EditUsPhoneNum = this::_1260EditUsPhoneNum;
    Consumer<OpenFrameContext> editAreaCode = this::editAreaCode;
    Consumer<OpenFrameContext> editUsPhonePrefix = this::editUsPhonePrefix;
    Consumer<OpenFrameContext> editUsPhoneLinenum = this::editUsPhoneLinenum;
    Consumer<OpenFrameContext> editUsPhoneExit = this::editUsPhoneExit;
    Consumer<OpenFrameContext> _1260EditUsPhoneNumExit = this::_1260EditUsPhoneNumExit;
    Consumer<OpenFrameContext> _1265EditUsSsn = this::_1265EditUsSsn;
    Consumer<OpenFrameContext> _1265EditUsSsnExit = this::_1265EditUsSsnExit;
    Consumer<OpenFrameContext> _1270EditUsStateCd = this::_1270EditUsStateCd;
    Consumer<OpenFrameContext> _1270EditUsStateCdExit = this::_1270EditUsStateCdExit;
    Consumer<OpenFrameContext> _1275EditFicoScore = this::_1275EditFicoScore;
    Consumer<OpenFrameContext> _1275EditFicoScoreExit = this::_1275EditFicoScoreExit;
    Consumer<OpenFrameContext> _1280EditUsStateZipCd = this::_1280EditUsStateZipCd;
    Consumer<OpenFrameContext> _1280EditUsStateZipCdExit = this::_1280EditUsStateZipCdExit;
    Consumer<OpenFrameContext> _2000DecideAction = this::_2000DecideAction;
    Consumer<OpenFrameContext> _2000DecideActionExit = this::_2000DecideActionExit;
    Consumer<OpenFrameContext> _3000SendMap = this::_3000SendMap;
    Consumer<OpenFrameContext> _3000SendMapExit = this::_3000SendMapExit;
    Consumer<OpenFrameContext> _3100ScreenInit = this::_3100ScreenInit;
    Consumer<OpenFrameContext> _3100ScreenInitExit = this::_3100ScreenInitExit;
    Consumer<OpenFrameContext> _3200SetupScreenVars = this::_3200SetupScreenVars;
    Consumer<OpenFrameContext> _3200SetupScreenVarsExit = this::_3200SetupScreenVarsExit;
    Consumer<OpenFrameContext> _3201ShowInitialValues = this::_3201ShowInitialValues;
    Consumer<OpenFrameContext> _3201ShowInitialValuesExit = this::_3201ShowInitialValuesExit;
    Consumer<OpenFrameContext> _3202ShowOriginalValues = this::_3202ShowOriginalValues;
    Consumer<OpenFrameContext> _3202ShowOriginalValuesExit = this::_3202ShowOriginalValuesExit;
    Consumer<OpenFrameContext> _3203ShowUpdatedValues = this::_3203ShowUpdatedValues;
    Consumer<OpenFrameContext> _3203ShowUpdatedValuesExit = this::_3203ShowUpdatedValuesExit;
    Consumer<OpenFrameContext> _3250SetupInfomsg = this::_3250SetupInfomsg;
    Consumer<OpenFrameContext> _3250SetupInfomsgExit = this::_3250SetupInfomsgExit;
    Consumer<OpenFrameContext> _3300SetupScreenAttrs = this::_3300SetupScreenAttrs;
    Consumer<OpenFrameContext> _3300SetupScreenAttrsExit = this::_3300SetupScreenAttrsExit;
    Consumer<OpenFrameContext> _3310ProtectAllAttrs = this::_3310ProtectAllAttrs;
    Consumer<OpenFrameContext> _3310ProtectAllAttrsExit = this::_3310ProtectAllAttrsExit;
    Consumer<OpenFrameContext> _3320UnprotectFewAttrs = this::_3320UnprotectFewAttrs;
    Consumer<OpenFrameContext> _3320UnprotectFewAttrsExit = this::_3320UnprotectFewAttrsExit;
    Consumer<OpenFrameContext> _3390SetupInfomsgAttrs = this::_3390SetupInfomsgAttrs;
    Consumer<OpenFrameContext> _3390SetupInfomsgAttrsExit = this::_3390SetupInfomsgAttrsExit;
    Consumer<OpenFrameContext> _3400SendScreen = this::_3400SendScreen;
    Consumer<OpenFrameContext> _3400SendScreenExit = this::_3400SendScreenExit;
    Consumer<OpenFrameContext> _9000ReadAcct = this::_9000ReadAcct;
    Consumer<OpenFrameContext> _9000ReadAcctExit = this::_9000ReadAcctExit;
    Consumer<OpenFrameContext> _9200GetcardxrefByacct = this::_9200GetcardxrefByacct;
    Consumer<OpenFrameContext> _9200GetcardxrefByacctExit = this::_9200GetcardxrefByacctExit;
    Consumer<OpenFrameContext> _9300GetacctdataByacct = this::_9300GetacctdataByacct;
    Consumer<OpenFrameContext> _9300GetacctdataByacctExit = this::_9300GetacctdataByacctExit;
    Consumer<OpenFrameContext> _9400GetcustdataBycust = this::_9400GetcustdataBycust;
    Consumer<OpenFrameContext> _9400GetcustdataBycustExit = this::_9400GetcustdataBycustExit;
    Consumer<OpenFrameContext> _9500StoreFetchedData = this::_9500StoreFetchedData;
    Consumer<OpenFrameContext> _9500StoreFetchedDataExit = this::_9500StoreFetchedDataExit;
    Consumer<OpenFrameContext> _9600WriteProcessing = this::_9600WriteProcessing;
    Consumer<OpenFrameContext> _9600WriteProcessingExit = this::_9600WriteProcessingExit;
    Consumer<OpenFrameContext> _9700CheckChangeInRec = this::_9700CheckChangeInRec;
    Consumer<OpenFrameContext> _9700CheckChangeInRecExit = this::_9700CheckChangeInRecExit;
    Consumer<OpenFrameContext> yyyyStorePfkey = this::yyyyStorePfkey;
    Consumer<OpenFrameContext> yyyyStorePfkeyExit = this::yyyyStorePfkeyExit;
    Consumer<OpenFrameContext> abendRoutine = this::abendRoutine;
    Consumer<OpenFrameContext> abendRoutineExit = this::abendRoutineExit;
    Consumer<OpenFrameContext> editDateCcyymmdd = this::editDateCcyymmdd;
    Consumer<OpenFrameContext> editYearCcyy = this::editYearCcyy;
    Consumer<OpenFrameContext> editYearCcyyExit = this::editYearCcyyExit;
    Consumer<OpenFrameContext> editMonth = this::editMonth;
    Consumer<OpenFrameContext> editMonthExit = this::editMonthExit;
    Consumer<OpenFrameContext> editDay = this::editDay;
    Consumer<OpenFrameContext> editDayExit = this::editDayExit;
    Consumer<OpenFrameContext> editDayMonthYear = this::editDayMonthYear;
    Consumer<OpenFrameContext> editDayMonthYearExit = this::editDayMonthYearExit;
    Consumer<OpenFrameContext> editDateLe = this::editDateLe;
    Consumer<OpenFrameContext> editDateLeExit = this::editDateLeExit;
    Consumer<OpenFrameContext> editDateCcyymmddExit = this::editDateCcyymmddExit;
    Consumer<OpenFrameContext> editDateOfBirth = this::editDateOfBirth;
    Consumer<OpenFrameContext> editDateOfBirthExit = this::editDateOfBirthExit;
    /** 
     * <p>Execution flow of COBOL program that defined in the procedure division</p>
     */
    ArrayList<Consumer> methodList = new ArrayList<>();
    {
        methodList.add(_0000Main);
        methodList.add(commonReturn);
        methodList.add(_0000MainExit);
        methodList.add(_1000ProcessInputs);
        methodList.add(_1000ProcessInputsExit);
        methodList.add(_1100ReceiveMap);
        methodList.add(_1100ReceiveMapExit);
        methodList.add(_1200EditMapInputs);
        methodList.add(_1200EditMapInputsExit);
        methodList.add(_1205CompareOldNew);
        methodList.add(_1205CompareOldNewExit);
        methodList.add(_1210EditAccount);
        methodList.add(_1210EditAccountExit);
        methodList.add(_1215EditMandatory);
        methodList.add(_1215EditMandatoryExit);
        methodList.add(_1220EditYesno);
        methodList.add(_1220EditYesnoExit);
        methodList.add(_1225EditAlphaReqd);
        methodList.add(_1225EditAlphaReqdExit);
        methodList.add(_1230EditAlphanumReqd);
        methodList.add(_1230EditAlphanumReqdExit);
        methodList.add(_1235EditAlphaOpt);
        methodList.add(_1235EditAlphaOptExit);
        methodList.add(_1240EditAlphanumOpt);
        methodList.add(_1240EditAlphanumOptExit);
        methodList.add(_1245EditNumReqd);
        methodList.add(_1245EditNumReqdExit);
        methodList.add(_1250EditSigned9v2);
        methodList.add(_1250EditSigned9v2Exit);
        methodList.add(_1260EditUsPhoneNum);
        methodList.add(editAreaCode);
        methodList.add(editUsPhonePrefix);
        methodList.add(editUsPhoneLinenum);
        methodList.add(editUsPhoneExit);
        methodList.add(_1260EditUsPhoneNumExit);
        methodList.add(_1265EditUsSsn);
        methodList.add(_1265EditUsSsnExit);
        methodList.add(_1270EditUsStateCd);
        methodList.add(_1270EditUsStateCdExit);
        methodList.add(_1275EditFicoScore);
        methodList.add(_1275EditFicoScoreExit);
        methodList.add(_1280EditUsStateZipCd);
        methodList.add(_1280EditUsStateZipCdExit);
        methodList.add(_2000DecideAction);
        methodList.add(_2000DecideActionExit);
        methodList.add(_3000SendMap);
        methodList.add(_3000SendMapExit);
        methodList.add(_3100ScreenInit);
        methodList.add(_3100ScreenInitExit);
        methodList.add(_3200SetupScreenVars);
        methodList.add(_3200SetupScreenVarsExit);
        methodList.add(_3201ShowInitialValues);
        methodList.add(_3201ShowInitialValuesExit);
        methodList.add(_3202ShowOriginalValues);
        methodList.add(_3202ShowOriginalValuesExit);
        methodList.add(_3203ShowUpdatedValues);
        methodList.add(_3203ShowUpdatedValuesExit);
        methodList.add(_3250SetupInfomsg);
        methodList.add(_3250SetupInfomsgExit);
        methodList.add(_3300SetupScreenAttrs);
        methodList.add(_3300SetupScreenAttrsExit);
        methodList.add(_3310ProtectAllAttrs);
        methodList.add(_3310ProtectAllAttrsExit);
        methodList.add(_3320UnprotectFewAttrs);
        methodList.add(_3320UnprotectFewAttrsExit);
        methodList.add(_3390SetupInfomsgAttrs);
        methodList.add(_3390SetupInfomsgAttrsExit);
        methodList.add(_3400SendScreen);
        methodList.add(_3400SendScreenExit);
        methodList.add(_9000ReadAcct);
        methodList.add(_9000ReadAcctExit);
        methodList.add(_9200GetcardxrefByacct);
        methodList.add(_9200GetcardxrefByacctExit);
        methodList.add(_9300GetacctdataByacct);
        methodList.add(_9300GetacctdataByacctExit);
        methodList.add(_9400GetcustdataBycust);
        methodList.add(_9400GetcustdataBycustExit);
        methodList.add(_9500StoreFetchedData);
        methodList.add(_9500StoreFetchedDataExit);
        methodList.add(_9600WriteProcessing);
        methodList.add(_9600WriteProcessingExit);
        methodList.add(_9700CheckChangeInRec);
        methodList.add(_9700CheckChangeInRecExit);
        methodList.add(yyyyStorePfkey);
        methodList.add(yyyyStorePfkeyExit);
        methodList.add(abendRoutine);
        methodList.add(abendRoutineExit);
        methodList.add(editDateCcyymmdd);
        methodList.add(editYearCcyy);
        methodList.add(editYearCcyyExit);
        methodList.add(editMonth);
        methodList.add(editMonthExit);
        methodList.add(editDay);
        methodList.add(editDayExit);
        methodList.add(editDayMonthYear);
        methodList.add(editDayMonthYearExit);
        methodList.add(editDateLe);
        methodList.add(editDateLeExit);
        methodList.add(editDateCcyymmddExit);
        methodList.add(editDateOfBirth);
        methodList.add(editDateOfBirthExit);
    }
    private final ReadPointManager readPointManager;
    private final RecordKeyAccessor recordKeyAccessor;
    private final Task task;
    private final TaskInvoker taskInvoker;
    private final ProgramControl programControl;
    private final AbendHandler abendHandler;

    /** 
     * <p>Method for executing a program logic that defined in the procedure division</p>
     * @param generalContext context that is necessary for executing program
     * @return return value of program
     */
    public int run(Map<String, Object> generalContext) {
        OpenFrameContext context = new OpenFrameContext(generalContext,
                methodList);
        if (context.getProgramVariableContainer("Coactupc") == null) {
            CoactupcVariableContainer container = new CoactupcVariableContainer();
            context.setProgramVariableContainer("Coactupc", container);
        }
        controlManager.run(context);
        return context.getReturnValue();
    }

    // **************************************** *************************
    // * Program:     COACTUPC.CBL                                     *
    // * Layer:       Business logic                                   *
    // * Function:    Accept and process ACCOUNT UPDATE                *
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // *      OCCURS 1 TO 32767 TIMES DEPENDING ON EIBCALEN.

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:860] 0000-MAIN Paragraph</p>
     */
    void _0000Main(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:863] EXEC_CICS statement
        /*
                       EXEC CICS HANDLE ABEND
                                 LABEL(ABEND-ROUTINE)
                       END-EXEC
         */
        abendHandler.setLabel(abendRoutine);
        // [T-Up#INFO][COACTUPC.cbl:867] INITIALIZE statement
        container.getCcWorkAreas().setCcWorkArea(
                CcWorkAreas.CcWorkArea.createDefaultValueInstance());
        container.setWsMiscStorage(CoactupcWsMiscStorage
                .createDefaultValueInstance());
        container.setWsCommarea(StringUtils.repeat(' ', 2000));
        // [T-Up#INFO][COACTUPC.cbl:871] MOVE statement
        container.getCcWorkAreas().getCcWorkArea().setCcAcctIdN((long) 0);
        // [T-Up#INFO][COACTUPC.cbl:872] MOVE statement
        container.getCcWorkAreas().getCcWorkArea().setCcCardNumN((long) 0);
        // *****************************************************************
        // * Store our context
        // *****************************************************************
        // [T-Up#INFO][COACTUPC.cbl:876] MOVE statement
        container.getWsMiscStorage().getWsCicsProcessngVars()
                .setWsTranid(container.getWsLiterals().getLitThistranid());
        // *****************************************************************
        // * Ensure error message is cleared                               *
        // *****************************************************************
        // [T-Up#INFO][COACTUPC.cbl:880] SET statement
        container.getWsMiscStorage().setWsReturnMsg(WS_RETURN_MSG_OFF);
        // *****************************************************************
        // * Store passed data if  any                *
        // *****************************************************************
        // [T-Up#INFO][COACTUPC.cbl:884] IF statement
        if (task.hasCommarea() == 0
                || CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoGeneralInfo().getCdemoFromProgram(), container
                        .getWsLiterals().getLitMenupgm()) == 0
                && !(container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER)) {
            // [T-Up#INFO][COACTUPC.cbl:887] INITIALIZE statement
            container.setCarddemoCommarea(CarddemoCommarea
                    .createDefaultValueInstance());
            container.setWsThisProgcommarea(CoactupcWsThisProgcommarea
                    .createDefaultValueInstance());
            // [T-Up#INFO][COACTUPC.cbl:889] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(CDEMO_PGM_ENTER);
            // [T-Up#INFO][COACTUPC.cbl:890] SET statement
            container.getWsThisProgcommarea().getAcctUpdateScreenData()
                    .setAcupChangeAction(ACUP_DETAILS_NOT_FETCHED_1);
        } else {
            // [T-Up#INFO][COACTUPC.cbl:892] MOVE statement
            container.getCarddemoCommarea().set(
                    container.getDfhcommarea().get().substring(0, 160));
            // [T-Up#INFO][COACTUPC.cbl:894] MOVE statement
            container.getWsThisProgcommarea().set(
                    container.getDfhcommarea().get().substring(160, 1033));
        }
        // *****************************************************************
        // * Remap PFkeys as needed.
        // * Store the Mapped PF Key
        // *****************************************************************
        // [T-Up#INFO][COACTUPC.cbl:902] PERFORM statement
        controlManager.run(context, yyyyStorePfkey, yyyyStorePfkeyExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // *****************************************************************
        // * Check the AID to see if its valid at this point               *
        // * F3 - Exit
        // * Enter show screen again
        // *****************************************************************
        // [T-Up#INFO][COACTUPC.cbl:909] SET statement
        container.getWsMiscStorage().setWsPfkFlag(PFK_INVALID);
        // [T-Up#INFO][COACTUPC.cbl:910] IF statement
        if (CobStringUtils.compare(container.getCcWorkAreas().getCcWorkArea()
                .getCcardAid(), CCARD_AID_ENTER) == 0
                || CobStringUtils.compare(container.getCcWorkAreas()
                        .getCcWorkArea().getCcardAid(), CCARD_AID_PFK03) == 0
                || CobStringUtils.compare(container.getCcWorkAreas()
                        .getCcWorkArea().getCcardAid(), CCARD_AID_PFK05) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcctUpdateScreenData().getAcupChangeAction(),
                        ACUP_CHANGES_OK_NOT_CONFIRMED) == 0
                || CobStringUtils.compare(container.getCcWorkAreas()
                        .getCcWorkArea().getCcardAid(), CCARD_AID_PFK12) == 0
                && !(CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcctUpdateScreenData().getAcupChangeAction(),
                        ACUP_DETAILS_NOT_FETCHED_1) == 0 || CobStringUtils
                        .compare(container.getWsThisProgcommarea()
                                .getAcctUpdateScreenData()
                                .getAcupChangeAction(),
                                ACUP_DETAILS_NOT_FETCHED_2) == 0)) {
            // [T-Up#INFO][COACTUPC.cbl:915] SET statement
            container.getWsMiscStorage().setWsPfkFlag(PFK_VALID);
        }
        // [T-Up#INFO][COACTUPC.cbl:918] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage().getWsPfkFlag(),
                PFK_INVALID) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:919] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_ENTER);
        }
        // *****************************************************************
        // * Decide what to do based on inputs received
        // *****************************************************************
        // [T-Up#INFO][COACTUPC.cbl:925] EVALUATE statement
        if (CobStringUtils.compare(container.getCcWorkAreas().getCcWorkArea()
                .getCcardAid(), CCARD_AID_PFK03) == 0) {
            // ******************************************************************
            // *       USER PRESSES PF03 TO EXIT
            // *  OR   USER IS DONE WITH UPDATE
            // *            XCTL TO CALLING PROGRAM OR MAIN MENU
            // ******************************************************************
            // [T-Up#INFO][COACTUPC.cbl:932] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK03);
            // [T-Up#INFO][COACTUPC.cbl:934] IF statement
            if (CobStringUtils.compare(container.getCarddemoCommarea()
                    .getCdemoGeneralInfo().getCdemoFromTranid(),
                    StringUtils.repeat((char) 0x00, 4)) == 0
                    || CobStringUtils.compare(container.getCarddemoCommarea()
                            .getCdemoGeneralInfo().getCdemoFromTranid(),
                            StringUtils.repeat(' ', 4)) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:936] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoToTranid(
                                container.getWsLiterals().getLitMenutranid());
            } else {
                // [T-Up#INFO][COACTUPC.cbl:938] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoToTranid(
                                container.getCarddemoCommarea()
                                        .getCdemoGeneralInfo()
                                        .getCdemoFromTranid());
            }
            // [T-Up#INFO][COACTUPC.cbl:941] IF statement
            if (CobStringUtils.compare(container.getCarddemoCommarea()
                    .getCdemoGeneralInfo().getCdemoFromProgram(),
                    StringUtils.repeat((char) 0x00, 8)) == 0
                    || CobStringUtils.compare(container.getCarddemoCommarea()
                            .getCdemoGeneralInfo().getCdemoFromProgram(),
                            StringUtils.repeat(' ', 8)) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:943] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoToProgram(
                                container.getWsLiterals().getLitMenupgm());
            } else {
                // [T-Up#INFO][COACTUPC.cbl:945] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoToProgram(
                                container.getCarddemoCommarea()
                                        .getCdemoGeneralInfo()
                                        .getCdemoFromProgram());
            }
            // [T-Up#INFO][COACTUPC.cbl:948] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromTranid(
                            container.getWsLiterals().getLitThistranid());
            // [T-Up#INFO][COACTUPC.cbl:949] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromProgram(
                            container.getWsLiterals().getLitThispgm());
            // [T-Up#INFO][COACTUPC.cbl:951] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoUserType(CDEMO_USRTYP_USER);
            // [T-Up#INFO][COACTUPC.cbl:952] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(CDEMO_PGM_ENTER);
            // [T-Up#INFO][COACTUPC.cbl:953] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoMoreInfo()
                    .setCdemoLastMapset(
                            container.getWsLiterals().getLitThismapset());
            // [T-Up#INFO][COACTUPC.cbl:954] MOVE statement
            container.getCarddemoCommarea().getCdemoMoreInfo()
                    .setCdemoLastMap(container.getWsLiterals().getLitThismap());
            // [T-Up#INFO][COACTUPC.cbl:956] EXEC_CICS statement
            /*
                                   EXEC CICS
                                        SYNCPOINT
                                   END-EXEC
             */
            // [T-Up#ERROR][COACTUPC.cbl:956] Internal error occurred. See log for details. (EXEC CICS)
            // [T-Up#INFO][COACTUPC.cbl:960] EXEC_CICS statement
            /*
                                   EXEC CICS XCTL
                                        PROGRAM ('COMEN01C')
                                        COMMAREA(CARDDEMO-COMMAREA)
                                   END-EXEC
             */
            Comen01cInputDto comen01cInputDto = new Comen01cInputDto();
            comen01cInputDto
                    .setDfhcommarea(CarddemoCommareaToComen01cDfhcommarea.INSTANCE
                            .toTarget(container.getCarddemoCommarea()));
            programControl.forward("CM00", comen01cInputDto);
            context.setReturnFlag(true);
        } else if (((CobStringUtils.compare(container.getWsThisProgcommarea()
                .getAcctUpdateScreenData().getAcupChangeAction(),
                ACUP_DETAILS_NOT_FETCHED_1) == 0 || CobStringUtils.compare(
                container.getWsThisProgcommarea().getAcctUpdateScreenData()
                        .getAcupChangeAction(), ACUP_DETAILS_NOT_FETCHED_2) == 0) && container
                .getCarddemoCommarea().getCdemoGeneralInfo()
                .getCdemoPgmContext() == CDEMO_PGM_ENTER)
                || (CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoGeneralInfo().getCdemoFromProgram(), container
                        .getWsLiterals().getLitMenupgm()) == 0 && !(container
                        .getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER))) {
            // ******************************************************************
            // *       FRESH ENTRY INTO PROGRAM
            // *            ASK THE USER FOR THE KEYS TO FETCH CARD TO BE UPDATED
            // ******************************************************************
            // [T-Up#INFO][COACTUPC.cbl:972] INITIALIZE statement
            container.setWsThisProgcommarea(CoactupcWsThisProgcommarea
                    .createDefaultValueInstance());
            // [T-Up#INFO][COACTUPC.cbl:973] PERFORM statement
            controlManager.run(context, _3000SendMap, _3000SendMapExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COACTUPC.cbl:975] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(CDEMO_PGM_REENTER);
            // [T-Up#INFO][COACTUPC.cbl:976] SET statement
            container.getWsThisProgcommarea().getAcctUpdateScreenData()
                    .setAcupChangeAction(ACUP_DETAILS_NOT_FETCHED_1);
            // [T-Up#INFO][COACTUPC.cbl:977] GO TO statement
            context.setGotoTarget(commonReturn);
            return;
        } else if ((CobStringUtils.compare(container.getWsThisProgcommarea()
                .getAcctUpdateScreenData().getAcupChangeAction(),
                ACUP_CHANGES_OKAYED_AND_DONE) == 0)
                || (CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcctUpdateScreenData().getAcupChangeAction(),
                        ACUP_CHANGES_FAILED_1) == 0 || CobStringUtils.compare(
                        container.getWsThisProgcommarea()
                                .getAcctUpdateScreenData()
                                .getAcupChangeAction(), ACUP_CHANGES_FAILED_2) == 0)) {
            // ******************************************************************
            // *       ACCT DATA CHANGES REVIEWED, OKAYED AND DONE SUCESSFULLY
            // *            RESET THE SEARCH KEYS
            // *            ASK THE USER FOR FRESH SEARCH CRITERIA
            // ******************************************************************
            // [T-Up#INFO][COACTUPC.cbl:985] INITIALIZE statement
            container.setWsThisProgcommarea(CoactupcWsThisProgcommarea
                    .createDefaultValueInstance());
            container.setWsMiscStorage(CoactupcWsMiscStorage
                    .createDefaultValueInstance());
            container.getCarddemoCommarea().getCdemoAccountInfo()
                    .setCdemoAcctId(0);
            // [T-Up#INFO][COACTUPC.cbl:988] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(CDEMO_PGM_ENTER);
            // [T-Up#INFO][COACTUPC.cbl:989] PERFORM statement
            controlManager.run(context, _3000SendMap, _3000SendMapExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COACTUPC.cbl:991] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(CDEMO_PGM_REENTER);
            // [T-Up#INFO][COACTUPC.cbl:992] SET statement
            container.getWsThisProgcommarea().getAcctUpdateScreenData()
                    .setAcupChangeAction(ACUP_DETAILS_NOT_FETCHED_1);
            // [T-Up#INFO][COACTUPC.cbl:993] GO TO statement
            context.setGotoTarget(commonReturn);
            return;
        } else {
            // ******************************************************************
            // *      ACCT DATA HAS BEEN PRESENTED TO USER
            // *            CHECK THE USER INPUTS
            // *            DECIDE WHAT TO DO
            // *            PRESENT NEXT STEPS TO USER
            // ******************************************************************
            // [T-Up#INFO][COACTUPC.cbl:1001] PERFORM statement
            controlManager.run(context, _1000ProcessInputs,
                    _1000ProcessInputsExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COACTUPC.cbl:1003] PERFORM statement
            controlManager.run(context, _2000DecideAction,
                    _2000DecideActionExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COACTUPC.cbl:1005] PERFORM statement
            controlManager.run(context, _3000SendMap, _3000SendMapExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COACTUPC.cbl:1007] GO TO statement
            context.setGotoTarget(commonReturn);
            return;
        }
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:1011] COMMON-RETURN Paragraph</p>
     */
    void commonReturn(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:1012] MOVE statement
        container
                .getCcWorkAreas()
                .getCcWorkArea()
                .setCcardErrorMsg(container.getWsMiscStorage().getWsReturnMsg());
        // [T-Up#INFO][COACTUPC.cbl:1014] MOVE statement
        container.setWsCommarea(container.getCarddemoCommarea().get());
        // [T-Up#INFO][COACTUPC.cbl:1015] MOVE statement
        container.setWsCommarea(StringUtils.overlay(container.getWsCommarea(),
                container.getWsThisProgcommarea().get(), 160, 1033));
        // [T-Up#INFO][COACTUPC.cbl:1019] EXEC_CICS statement
        /*
                       EXEC CICS RETURN
                            TRANSID (LIT-THISTRANID)
                            COMMAREA (WS-COMMAREA)
                            LENGTH(LENGTH OF WS-COMMAREA)
                       END-EXEC
         */
        TaskDto taskDto = TaskDto.builder()
                .destination(container.getWsLiterals().getLitThistranid())
                .data(Data.session(container.getWsCommarea())).build();
        taskInvoker.setNextTask(taskDto);
        context.setReturnFlag(true);
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:1025] 0000-MAIN-EXIT Paragraph</p>
     */
    void _0000MainExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:1026] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:1029] 1000-PROCESS-INPUTS Paragraph</p>
     */
    void _1000ProcessInputs(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:1030] PERFORM statement
        controlManager.run(context, _1100ReceiveMap, _1100ReceiveMapExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1032] PERFORM statement
        controlManager.run(context, _1200EditMapInputs, _1200EditMapInputsExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1034] MOVE statement
        container
                .getCcWorkAreas()
                .getCcWorkArea()
                .setCcardErrorMsg(container.getWsMiscStorage().getWsReturnMsg());
        // [T-Up#INFO][COACTUPC.cbl:1035] MOVE statement
        container.getCcWorkAreas().getCcWorkArea()
                .setCcardNextProg(container.getWsLiterals().getLitThispgm());
        // [T-Up#INFO][COACTUPC.cbl:1036] MOVE statement
        container
                .getCcWorkAreas()
                .getCcWorkArea()
                .setCcardNextMapset(
                        container.getWsLiterals().getLitThismapset());
        // [T-Up#INFO][COACTUPC.cbl:1037] MOVE statement
        container.getCcWorkAreas().getCcWorkArea()
                .setCcardNextMap(container.getWsLiterals().getLitThismap());
    }

    // *

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:1040] 1000-PROCESS-INPUTS-EXIT Paragraph</p>
     */
    void _1000ProcessInputsExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:1041] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:1043] 1100-RECEIVE-MAP Paragraph</p>
     */
    void _1100ReceiveMap(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:1044] EXEC_CICS statement
        /*
                       EXEC CICS RECEIVE MAP('CACTUPA')
                                 MAPSET('COACTUP')
                                 INTO(CACTUPAI)
                                 RESP(WS-RESP-CD)
                                 RESP2(WS-REAS-CD)
                       END-EXEC
         */
        try {
            container.setCactupai(((CoactupcInputDto) task.getInputDto())
                    .getCactupai());
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsReasCd(task.getLastResp2());
        }
        // *
        // [T-Up#INFO][COACTUPC.cbl:1051] INITIALIZE statement
        container.getWsThisProgcommarea().setAcupNewDetails(
                CoactupcWsThisProgcommarea.CoactupcAcupNewDetails
                        .createDefaultValueInstance());
        // ******************************************************************
        // *    Account Master data
        // ******************************************************************
        // [T-Up#INFO][COACTUPC.cbl:1055] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcctsidi(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcctsidi(),
                        StringUtils.repeat(' ', 11)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1057] MOVE statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcAcctId(StringUtils.repeat((char) 0x00, 11));
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewAcctData()
                    .setAcupNewAcctIdX(StringUtils.repeat((char) 0x00, 11));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1060] MOVE statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcAcctId(container.getCactupai().getAcctsidi());
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewAcctData()
                    .setAcupNewAcctIdX(container.getCactupai().getAcctsidi());
        }
        // [T-Up#INFO][COACTUPC.cbl:1064] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getAcctUpdateScreenData().getAcupChangeAction(),
                ACUP_DETAILS_NOT_FETCHED_1) == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcctUpdateScreenData().getAcupChangeAction(),
                        ACUP_DETAILS_NOT_FETCHED_2) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1065] GO TO statement
            context.setGotoTarget(_1100ReceiveMapExit);
            return;
        }
        // * Active Status
        // [T-Up#INFO][COACTUPC.cbl:1069] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcsttusi(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcsttusi(), " ") == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1071] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewAcctData()
                    .setAcupNewActiveStatus(StringUtils.repeat((char) 0x00, 1));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1073] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewAcctData()
                    .setAcupNewActiveStatus(
                            container.getCactupai().getAcsttusi());
        }
        // * Credit Limit
        // [T-Up#INFO][COACTUPC.cbl:1077] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcrdlimi(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcrdlimi(),
                        StringUtils.repeat(' ', 15)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1079] MOVE statement
            container
                    .getWsMiscStorage()
                    .getAlphaVarsForDataEditing()
                    .setAcupNewCreditLimitX(StringUtils.repeat((char) 0x00, 15));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1081] MOVE statement
            container
                    .getWsMiscStorage()
                    .getAlphaVarsForDataEditing()
                    .setAcupNewCreditLimitX(
                            container.getCactupai().getAcrdlimi());
            // [T-Up#INFO][COACTUPC.cbl:1082] IF statement
            if (IntrinsicFunction.functionTestNumvalC(container
                    .getWsMiscStorage().getAlphaVarsForDataEditing()
                    .getAcupNewCreditLimitX(), null) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:1083] COMPUTE statement
                container
                        .getWsThisProgcommarea()
                        .getAcupNewDetails()
                        .getAcupNewAcctData()
                        .setAcupNewCreditLimitN(
                                BigDecimal.valueOf(IntrinsicFunction
                                        .functionNumvalC(container
                                                .getCactupai().getAcrdlimi(),
                                                null)));
            } else {
                // [T-Up#INFO][COACTUPC.cbl:1086] CONTINUE statement
            }
        }
        // * Cash Limit
        // [T-Up#INFO][COACTUPC.cbl:1091] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcshlimi(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcshlimi(),
                        StringUtils.repeat(' ', 15)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1093] MOVE statement
            container
                    .getWsMiscStorage()
                    .getAlphaVarsForDataEditing()
                    .setAcupNewCashCreditLimitX(
                            StringUtils.repeat((char) 0x00, 15));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1095] MOVE statement
            container
                    .getWsMiscStorage()
                    .getAlphaVarsForDataEditing()
                    .setAcupNewCashCreditLimitX(
                            container.getCactupai().getAcshlimi());
            // [T-Up#INFO][COACTUPC.cbl:1096] IF statement
            if (IntrinsicFunction.functionTestNumvalC(container
                    .getWsMiscStorage().getAlphaVarsForDataEditing()
                    .getAcupNewCashCreditLimitX(), null) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:1097] COMPUTE statement
                container
                        .getWsThisProgcommarea()
                        .getAcupNewDetails()
                        .getAcupNewAcctData()
                        .setAcupNewCashCreditLimitN(
                                BigDecimal.valueOf(IntrinsicFunction
                                        .functionNumvalC(container
                                                .getCactupai().getAcshlimi(),
                                                null)));
            } else {
                // [T-Up#INFO][COACTUPC.cbl:1100] CONTINUE statement
            }
        }
        // * Current Balance
        // [T-Up#INFO][COACTUPC.cbl:1105] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcurbali(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcurbali(),
                        StringUtils.repeat(' ', 15)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1107] MOVE statement
            container.getWsMiscStorage().getAlphaVarsForDataEditing()
                    .setAcupNewCurrBalX(StringUtils.repeat((char) 0x00, 15));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1109] MOVE statement
            container.getWsMiscStorage().getAlphaVarsForDataEditing()
                    .setAcupNewCurrBalX(container.getCactupai().getAcurbali());
            // [T-Up#INFO][COACTUPC.cbl:1110] IF statement
            if (IntrinsicFunction.functionTestNumvalC(container
                    .getWsMiscStorage().getAlphaVarsForDataEditing()
                    .getAcupNewCurrBalX(), null) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:1111] COMPUTE statement
                container
                        .getWsThisProgcommarea()
                        .getAcupNewDetails()
                        .getAcupNewAcctData()
                        .setAcupNewCurrBalN(
                                BigDecimal.valueOf(IntrinsicFunction
                                        .functionNumvalC(container
                                                .getWsMiscStorage()
                                                .getAlphaVarsForDataEditing()
                                                .getAcupNewCurrBalX(), null)));
            } else {
                // [T-Up#INFO][COACTUPC.cbl:1114] CONTINUE statement
            }
        }
        // *Current Cycle Credit
        // [T-Up#INFO][COACTUPC.cbl:1119] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcrcycri(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcrcycri(),
                        StringUtils.repeat(' ', 15)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1121] MOVE statement
            container
                    .getWsMiscStorage()
                    .getAlphaVarsForDataEditing()
                    .setAcupNewCurrCycCreditX(
                            StringUtils.repeat((char) 0x00, 15));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1123] MOVE statement
            container
                    .getWsMiscStorage()
                    .getAlphaVarsForDataEditing()
                    .setAcupNewCurrCycCreditX(
                            container.getCactupai().getAcrcycri());
            // [T-Up#INFO][COACTUPC.cbl:1124] IF statement
            if (IntrinsicFunction.functionTestNumvalC(container
                    .getWsMiscStorage().getAlphaVarsForDataEditing()
                    .getAcupNewCurrCycCreditX(), null) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:1125] COMPUTE statement
                container
                        .getWsThisProgcommarea()
                        .getAcupNewDetails()
                        .getAcupNewAcctData()
                        .setAcupNewCurrCycCreditN(
                                BigDecimal.valueOf(IntrinsicFunction
                                        .functionNumvalC(container
                                                .getCactupai().getAcrcycri(),
                                                null)));
            } else {
                // [T-Up#INFO][COACTUPC.cbl:1128] CONTINUE statement
            }
        }
        // *Current Cycle Debit
        // [T-Up#INFO][COACTUPC.cbl:1133] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcrcydbi(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcrcydbi(),
                        StringUtils.repeat(' ', 15)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1135] MOVE statement
            container
                    .getWsMiscStorage()
                    .getAlphaVarsForDataEditing()
                    .setAcupNewCurrCycDebitX(
                            StringUtils.repeat((char) 0x00, 15));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1137] MOVE statement
            container
                    .getWsMiscStorage()
                    .getAlphaVarsForDataEditing()
                    .setAcupNewCurrCycDebitX(
                            container.getCactupai().getAcrcydbi());
            // [T-Up#INFO][COACTUPC.cbl:1138] IF statement
            if (IntrinsicFunction.functionTestNumvalC(container
                    .getWsMiscStorage().getAlphaVarsForDataEditing()
                    .getAcupNewCurrCycDebitX(), null) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:1139] COMPUTE statement
                container
                        .getWsThisProgcommarea()
                        .getAcupNewDetails()
                        .getAcupNewAcctData()
                        .setAcupNewCurrCycDebitN(
                                BigDecimal.valueOf(IntrinsicFunction
                                        .functionNumvalC(container
                                                .getCactupai().getAcrcydbi(),
                                                null)));
            } else {
                // [T-Up#INFO][COACTUPC.cbl:1142] CONTINUE statement
            }
        }
        // *Open date
        // *
        // [T-Up#INFO][COACTUPC.cbl:1148] IF statement
        if (CobStringUtils.compare(container.getCactupai().getOpnyeari(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getOpnyeari(),
                        StringUtils.repeat(' ', 4)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1150] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewAcctData()
                    .setAcupNewOpenYear(StringUtils.repeat((char) 0x00, 4));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1152] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewAcctData()
                    .setAcupNewOpenYear(container.getCactupai().getOpnyeari());
        }
        // [T-Up#INFO][COACTUPC.cbl:1155] IF statement
        if (CobStringUtils.compare(container.getCactupai().getOpnmoni(), "*") == 0
                || CobStringUtils.compare(container.getCactupai().getOpnmoni(),
                        StringUtils.repeat(' ', 2)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1157] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewAcctData()
                    .setAcupNewOpenMon(StringUtils.repeat((char) 0x00, 2));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1159] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewAcctData()
                    .setAcupNewOpenMon(container.getCactupai().getOpnmoni());
        }
        // [T-Up#INFO][COACTUPC.cbl:1162] IF statement
        if (CobStringUtils.compare(container.getCactupai().getOpndayi(), "*") == 0
                || CobStringUtils.compare(container.getCactupai().getOpndayi(),
                        StringUtils.repeat(' ', 2)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1164] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewAcctData()
                    .setAcupNewOpenDay(StringUtils.repeat((char) 0x00, 2));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1166] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewAcctData()
                    .setAcupNewOpenDay(container.getCactupai().getOpndayi());
        }
        // *Expiry date
        // *
        // [T-Up#INFO][COACTUPC.cbl:1171] IF statement
        if (CobStringUtils.compare(container.getCactupai().getExpyeari(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getExpyeari(),
                        StringUtils.repeat(' ', 4)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1173] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewAcctData()
                    .setAcupNewExpYear(StringUtils.repeat((char) 0x00, 4));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1175] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewAcctData()
                    .setAcupNewExpYear(container.getCactupai().getExpyeari());
        }
        // [T-Up#INFO][COACTUPC.cbl:1178] IF statement
        if (CobStringUtils.compare(container.getCactupai().getExpmoni(), "*") == 0
                || CobStringUtils.compare(container.getCactupai().getExpmoni(),
                        StringUtils.repeat(' ', 2)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1180] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewAcctData()
                    .setAcupNewExpMon(StringUtils.repeat((char) 0x00, 2));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1182] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewAcctData()
                    .setAcupNewExpMon(container.getCactupai().getExpmoni());
        }
        // [T-Up#INFO][COACTUPC.cbl:1185] IF statement
        if (CobStringUtils.compare(container.getCactupai().getExpdayi(), "*") == 0
                || CobStringUtils.compare(container.getCactupai().getExpdayi(),
                        StringUtils.repeat(' ', 2)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1187] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewAcctData()
                    .setAcupNewExpDay(StringUtils.repeat((char) 0x00, 2));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1189] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewAcctData()
                    .setAcupNewExpDay(container.getCactupai().getExpdayi());
        }
        // *Reissue date
        // *
        // [T-Up#INFO][COACTUPC.cbl:1194] IF statement
        if (CobStringUtils.compare(container.getCactupai().getRisyeari(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getRisyeari(),
                        StringUtils.repeat(' ', 4)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1196] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewAcctData()
                    .setAcupNewReissueYear(StringUtils.repeat((char) 0x00, 4));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1198] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewAcctData()
                    .setAcupNewReissueYear(
                            container.getCactupai().getRisyeari());
        }
        // [T-Up#INFO][COACTUPC.cbl:1201] IF statement
        if (CobStringUtils.compare(container.getCactupai().getRismoni(), "*") == 0
                || CobStringUtils.compare(container.getCactupai().getRismoni(),
                        StringUtils.repeat(' ', 2)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1203] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewAcctData()
                    .setAcupNewReissueMon(StringUtils.repeat((char) 0x00, 2));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1205] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewAcctData()
                    .setAcupNewReissueMon(container.getCactupai().getRismoni());
        }
        // [T-Up#INFO][COACTUPC.cbl:1208] IF statement
        if (CobStringUtils.compare(container.getCactupai().getRisdayi(), "*") == 0
                || CobStringUtils.compare(container.getCactupai().getRisdayi(),
                        StringUtils.repeat(' ', 2)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1210] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewAcctData()
                    .setAcupNewReissueDay(StringUtils.repeat((char) 0x00, 2));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1212] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewAcctData()
                    .setAcupNewReissueDay(container.getCactupai().getRisdayi());
        }
        // *Account Group
        // *
        // [T-Up#INFO][COACTUPC.cbl:1217] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAaddgrpi(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAaddgrpi(),
                        StringUtils.repeat(' ', 10)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1219] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewAcctData()
                    .setAcupNewGroupId(StringUtils.repeat((char) 0x00, 10));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1221] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewAcctData()
                    .setAcupNewGroupId(container.getCactupai().getAaddgrpi());
        }
        // ******************************************************************
        // *    Customer Master data
        // ******************************************************************
        // *Customer Id (actually not editable)
        // *
        // [T-Up#INFO][COACTUPC.cbl:1228] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcstnumi(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcstnumi(),
                        StringUtils.repeat(' ', 9)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1230] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustIdX(StringUtils.repeat((char) 0x00, 9));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1232] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustIdX(container.getCactupai().getAcstnumi());
        }
        // *Social Security Number
        // *
        // [T-Up#INFO][COACTUPC.cbl:1237] IF statement
        if (CobStringUtils.compare(container.getCactupai().getActssn1i(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getActssn1i(),
                        StringUtils.repeat(' ', 3)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1239] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewCustData().getAcupNewCustSsnX()
                    .setAcupNewCustSsn1(StringUtils.repeat((char) 0x00, 3));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1241] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewCustData().getAcupNewCustSsnX()
                    .setAcupNewCustSsn1(container.getCactupai().getActssn1i());
        }
        // [T-Up#INFO][COACTUPC.cbl:1244] IF statement
        if (CobStringUtils.compare(container.getCactupai().getActssn2i(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getActssn2i(),
                        StringUtils.repeat(' ', 2)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1246] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewCustData().getAcupNewCustSsnX()
                    .setAcupNewCustSsn2(StringUtils.repeat((char) 0x00, 2));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1248] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewCustData().getAcupNewCustSsnX()
                    .setAcupNewCustSsn2(container.getCactupai().getActssn2i());
        }
        // [T-Up#INFO][COACTUPC.cbl:1251] IF statement
        if (CobStringUtils.compare(container.getCactupai().getActssn3i(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getActssn3i(),
                        StringUtils.repeat(' ', 4)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1253] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewCustData().getAcupNewCustSsnX()
                    .setAcupNewCustSsn3(StringUtils.repeat((char) 0x00, 4));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1255] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewCustData().getAcupNewCustSsnX()
                    .setAcupNewCustSsn3(container.getCactupai().getActssn3i());
        }
        // *
        // *Date of birth
        // *
        // [T-Up#INFO][COACTUPC.cbl:1260] IF statement
        if (CobStringUtils.compare(container.getCactupai().getDobyeari(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getDobyeari(),
                        StringUtils.repeat(' ', 4)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1262] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustDobYear(StringUtils.repeat((char) 0x00, 4));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1264] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustDobYear(
                            container.getCactupai().getDobyeari());
        }
        // [T-Up#INFO][COACTUPC.cbl:1267] IF statement
        if (CobStringUtils.compare(container.getCactupai().getDobmoni(), "*") == 0
                || CobStringUtils.compare(container.getCactupai().getDobmoni(),
                        StringUtils.repeat(' ', 2)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1269] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustDobMon(StringUtils.repeat((char) 0x00, 2));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1271] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustDobMon(container.getCactupai().getDobmoni());
        }
        // [T-Up#INFO][COACTUPC.cbl:1274] IF statement
        if (CobStringUtils.compare(container.getCactupai().getDobdayi(), "*") == 0
                || CobStringUtils.compare(container.getCactupai().getDobdayi(),
                        StringUtils.repeat(' ', 2)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1276] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustDobDay(StringUtils.repeat((char) 0x00, 2));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1278] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustDobDay(container.getCactupai().getDobdayi());
        }
        // *
        // *FICO
        // *
        // [T-Up#INFO][COACTUPC.cbl:1283] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcstfcoi(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcstfcoi(),
                        StringUtils.repeat(' ', 3)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1285] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustFicoScoreX(
                            StringUtils.repeat((char) 0x00, 3));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1287] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustFicoScoreX(
                            container.getCactupai().getAcstfcoi());
        }
        // *
        // *First Name
        // *
        // [T-Up#INFO][COACTUPC.cbl:1292] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcsfnami(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcsfnami(),
                        StringUtils.repeat(' ', 25)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1294] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustFirstName(
                            StringUtils.repeat((char) 0x00, 25));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1296] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustFirstName(
                            container.getCactupai().getAcsfnami());
        }
        // *
        // *Middle Name
        // *
        // [T-Up#INFO][COACTUPC.cbl:1301] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcsmnami(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcsmnami(),
                        StringUtils.repeat(' ', 25)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1303] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustMiddleName(
                            StringUtils.repeat((char) 0x00, 25));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1305] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustMiddleName(
                            container.getCactupai().getAcsmnami());
        }
        // *
        // *Last Name
        // *
        // [T-Up#INFO][COACTUPC.cbl:1310] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcslnami(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcslnami(),
                        StringUtils.repeat(' ', 25)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1312] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustLastName(StringUtils.repeat((char) 0x00, 25));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1314] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustLastName(
                            container.getCactupai().getAcslnami());
        }
        // *
        // *Address
        // *
        // [T-Up#INFO][COACTUPC.cbl:1319] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcsadl1i(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcsadl1i(),
                        StringUtils.repeat(' ', 50)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1321] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustAddrLine1(
                            StringUtils.repeat((char) 0x00, 50));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1323] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustAddrLine1(
                            container.getCactupai().getAcsadl1i());
        }
        // [T-Up#INFO][COACTUPC.cbl:1326] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcsadl2i(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcsadl2i(),
                        StringUtils.repeat(' ', 50)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1328] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustAddrLine2(
                            StringUtils.repeat((char) 0x00, 50));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1330] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustAddrLine2(
                            container.getCactupai().getAcsadl2i());
        }
        // [T-Up#INFO][COACTUPC.cbl:1333] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcscityi(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcscityi(),
                        StringUtils.repeat(' ', 50)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1335] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustAddrLine3(
                            StringUtils.repeat((char) 0x00, 50));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1337] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustAddrLine3(
                            container.getCactupai().getAcscityi());
        }
        // [T-Up#INFO][COACTUPC.cbl:1340] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcssttei(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcssttei(),
                        StringUtils.repeat(' ', 2)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1342] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustAddrStateCd(
                            StringUtils.repeat((char) 0x00, 2));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1344] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustAddrStateCd(
                            container.getCactupai().getAcssttei());
        }
        // [T-Up#INFO][COACTUPC.cbl:1347] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcsctryi(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcsctryi(),
                        StringUtils.repeat(' ', 3)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1349] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustAddrCountryCd(
                            StringUtils.repeat((char) 0x00, 3));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1351] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustAddrCountryCd(
                            container.getCactupai().getAcsctryi());
        }
        // [T-Up#INFO][COACTUPC.cbl:1354] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcszipci(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcszipci(),
                        StringUtils.repeat(' ', 5)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1356] MOVE statement
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustAddrZip(StringUtils.repeat((char) 0x00, 10));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1358] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustAddrZip(
                            container.getCactupai().getAcszipci());
        }
        // [T-Up#INFO][COACTUPC.cbl:1361] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcsph1ai(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcsph1ai(),
                        StringUtils.repeat(' ', 3)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1363] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustPhoneNum1a(
                            StringUtils.repeat((char) 0x00, 3));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1365] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustPhoneNum1a(
                            container.getCactupai().getAcsph1ai());
        }
        // [T-Up#INFO][COACTUPC.cbl:1368] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcsph1bi(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcsph1bi(),
                        StringUtils.repeat(' ', 3)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1370] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustPhoneNum1b(
                            StringUtils.repeat((char) 0x00, 3));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1372] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustPhoneNum1b(
                            container.getCactupai().getAcsph1bi());
        }
        // [T-Up#INFO][COACTUPC.cbl:1375] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcsph1ci(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcsph1ci(),
                        StringUtils.repeat(' ', 4)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1377] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustPhoneNum1c(
                            StringUtils.repeat((char) 0x00, 4));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1379] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustPhoneNum1c(
                            container.getCactupai().getAcsph1ci());
        }
        // [T-Up#INFO][COACTUPC.cbl:1382] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcsph2ai(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcsph2ai(),
                        StringUtils.repeat(' ', 3)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1384] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustPhoneNum2a(
                            StringUtils.repeat((char) 0x00, 3));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1386] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustPhoneNum2a(
                            container.getCactupai().getAcsph2ai());
        }
        // [T-Up#INFO][COACTUPC.cbl:1389] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcsph2bi(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcsph2bi(),
                        StringUtils.repeat(' ', 3)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1391] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustPhoneNum2b(
                            StringUtils.repeat((char) 0x00, 3));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1393] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustPhoneNum2b(
                            container.getCactupai().getAcsph2bi());
        }
        // [T-Up#INFO][COACTUPC.cbl:1396] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcsph2ci(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcsph2ci(),
                        StringUtils.repeat(' ', 4)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1398] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustPhoneNum2c(
                            StringUtils.repeat((char) 0x00, 4));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1400] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustPhoneNum2c(
                            container.getCactupai().getAcsph2ci());
        }
        // *
        // *Government Id
        // *
        // [T-Up#INFO][COACTUPC.cbl:1405] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcsgovti(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcsgovti(),
                        StringUtils.repeat(' ', 20)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1407] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustGovtIssuedId(
                            StringUtils.repeat((char) 0x00, 20));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1409] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustGovtIssuedId(
                            container.getCactupai().getAcsgovti());
        }
        // *
        // *EFT Code
        // *
        // [T-Up#INFO][COACTUPC.cbl:1414] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcseftci(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcseftci(),
                        StringUtils.repeat(' ', 10)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1416] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustEftAccountId(
                            StringUtils.repeat((char) 0x00, 10));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1418] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustEftAccountId(
                            container.getCactupai().getAcseftci());
        }
        // *
        // *Primary Holder Indicator
        // *
        // [T-Up#INFO][COACTUPC.cbl:1423] IF statement
        if (CobStringUtils.compare(container.getCactupai().getAcspflgi(), "*") == 0
                || CobStringUtils.compare(
                        container.getCactupai().getAcspflgi(), " ") == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1425] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustPriHolderInd(
                            StringUtils.repeat((char) 0x00, 1));
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1427] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupNewDetails()
                    .getAcupNewCustData()
                    .setAcupNewCustPriHolderInd(
                            container.getCactupai().getAcspflgi());
        }
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:1430] 1100-RECEIVE-MAP-EXIT Paragraph</p>
     */
    void _1100ReceiveMapExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:1431] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:1433] 1200-EDIT-MAP-INPUTS Paragraph</p>
     */
    void _1200EditMapInputs(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:1435] SET statement
        container.getWsMiscStorage().setWsInputFlag(INPUT_OK);
        // [T-Up#INFO][COACTUPC.cbl:1437] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getAcctUpdateScreenData().getAcupChangeAction(),
                ACUP_DETAILS_NOT_FETCHED_1) == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcctUpdateScreenData().getAcupChangeAction(),
                        ACUP_DETAILS_NOT_FETCHED_2) == 0) {
            // *        VALIDATE THE SEARCH KEYS
            // [T-Up#INFO][COACTUPC.cbl:1439] PERFORM statement
            controlManager.run(context, _1210EditAccount, _1210EditAccountExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COACTUPC.cbl:1442] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getAcupOldDetails()
                    .setAcupOldAcctData(
                            CoactupcWsThisProgcommarea.CoactupcAcupOldAcctData
                                    .createDefaultValueInstance());
            // *       IF THE SEARCH CONDITIONS HAVE PROBLEMS FLAG THEM
            // [T-Up#INFO][COACTUPC.cbl:1445] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsEditAcctFlag(), FLG_ACCTFILTER_BLANK) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:1446] SET statement
                container.getWsMiscStorage().setWsReturnMsg(
                        NO_SEARCH_CRITERIA_RECEIVED);
            }
            // *       AT THIS STAGE. NO DETAILS FETCHED. NOTHING MORE TO EDIT.
            // [T-Up#INFO][COACTUPC.cbl:1450] GO TO statement
            context.setGotoTarget(_1200EditMapInputsExit);
            return;
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1452] CONTINUE statement
        }
        // *
        // *    SEARCH KEYS ALREADY VALIDATED AND DATA FETCHED
        // [T-Up#INFO][COACTUPC.cbl:1456] SET statement
        container.getWsMiscStorage().setWsInfoMsg(FOUND_ACCOUNT_DATA);
        // [T-Up#INFO][COACTUPC.cbl:1457] SET statement
        container.getWsMiscStorage().getWsFileReadFlags()
                .setWsAccountMasterReadFlag(FOUND_ACCT_IN_MASTER);
        // [T-Up#INFO][COACTUPC.cbl:1458] SET statement
        container.getWsMiscStorage().setWsEditAcctFlag(FLG_ACCTFILTER_ISVALID);
        // [T-Up#INFO][COACTUPC.cbl:1460] SET statement
        container.getWsMiscStorage().getWsFileReadFlags()
                .setWsCustMasterReadFlag(FOUND_CUST_IN_MASTER);
        // [T-Up#INFO][COACTUPC.cbl:1461] SET statement
        container.getWsMiscStorage().setWsEditCustFlag(FLG_CUSTFILTER_ISVALID);
        // *
        // [T-Up#INFO][COACTUPC.cbl:1464] PERFORM statement
        controlManager.run(context, _1205CompareOldNew, _1205CompareOldNewExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1467] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsDatachangedFlag(), NO_CHANGES_FOUND) == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcctUpdateScreenData().getAcupChangeAction(),
                        ACUP_CHANGES_OK_NOT_CONFIRMED) == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcctUpdateScreenData().getAcupChangeAction(),
                        ACUP_CHANGES_OKAYED_AND_DONE) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1470] MOVE statement
            container.getWsMiscStorage().setWsNonKeyFlags(
                    CoactupcWsMiscStorage.CoactupcWsNonKeyFlags
                            .createDefaultValueInstance());
            // [T-Up#INFO][COACTUPC.cbl:1471] GO TO statement
            context.setGotoTarget(_1200EditMapInputsExit);
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1474] SET statement
        container.getWsThisProgcommarea().getAcctUpdateScreenData()
                .setAcupChangeAction(ACUP_CHANGES_NOT_OK);
        // [T-Up#INFO][COACTUPC.cbl:1476] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditVariableName("Account Status");
        // [T-Up#INFO][COACTUPC.cbl:1477] MOVE statement
        container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .setWsEditYesNo(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewAcctData().getAcupNewActiveStatus());
        // [T-Up#INFO][COACTUPC.cbl:1478] PERFORM statement
        controlManager.run(context, _1220EditYesno, _1220EditYesnoExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1480] MOVE statement
        container
                .getWsMiscStorage()
                .getWsNonKeyFlags()
                .setWsEditAcctStatus(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditYesNo());
        // [T-Up#INFO][COACTUPC.cbl:1482] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditVariableName("Open Date");
        // [T-Up#INFO][COACTUPC.cbl:1483] MOVE statement
        container
                .getWsMiscStorage()
                .getWsCalculationVars()
                .getWsEditDateCcyymmdd()
                .set(container.getWsThisProgcommarea().getAcupNewDetails()
                        .getAcupNewAcctData().getAcupNewOpenDate());
        // [T-Up#INFO][COACTUPC.cbl:1484] PERFORM statement
        controlManager.run(context, editDateCcyymmdd, editDateCcyymmddExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1486] MOVE statement
        CoactupcMapperInterface.CoactupcWsMiscStorageCoactupcWsEditDateFlgsToCoactupcWsMiscStorageCoactupcWsEditOpenDateFlgs
                .set(container.getWsMiscStorage().getWsCalculationVars()
                        .getWsEditDateFlgs(), container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditOpenDateFlgs());
        // [T-Up#INFO][COACTUPC.cbl:1488] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditVariableName("Credit Limit");
        // [T-Up#INFO][COACTUPC.cbl:1489] MOVE statement
        container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .setWsEditSignedNumber9v2X(
                        container.getWsMiscStorage()
                                .getAlphaVarsForDataEditing()
                                .getAcupNewCreditLimitX());
        // [T-Up#INFO][COACTUPC.cbl:1490] PERFORM statement
        controlManager.run(context, _1250EditSigned9v2, _1250EditSigned9v2Exit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1492] MOVE statement
        container
                .getWsMiscStorage()
                .getWsNonKeyFlags()
                .setWsEditCreditLimit(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsFlgSignedNumberEdit());
        // [T-Up#INFO][COACTUPC.cbl:1494] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditVariableName("Expiry Date");
        // [T-Up#INFO][COACTUPC.cbl:1495] MOVE statement
        container
                .getWsMiscStorage()
                .getWsCalculationVars()
                .getWsEditDateCcyymmdd()
                .set(container.getWsThisProgcommarea().getAcupNewDetails()
                        .getAcupNewAcctData().getAcupNewExpiraionDate());
        // [T-Up#INFO][COACTUPC.cbl:1496] PERFORM statement
        controlManager.run(context, editDateCcyymmdd, editDateCcyymmddExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1498] MOVE statement
        CoactupcMapperInterface.CoactupcWsMiscStorageCoactupcWsEditDateFlgsToCoactupcWsMiscStorageCoactupcWsExpiryDateFlgs
                .set(container.getWsMiscStorage().getWsCalculationVars()
                        .getWsEditDateFlgs(), container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsExpiryDateFlgs());
        // [T-Up#INFO][COACTUPC.cbl:1500] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditVariableName("Cash Credit Limit");
        // [T-Up#INFO][COACTUPC.cbl:1501] MOVE statement
        container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .setWsEditSignedNumber9v2X(
                        container.getWsMiscStorage()
                                .getAlphaVarsForDataEditing()
                                .getAcupNewCashCreditLimitX());
        // [T-Up#INFO][COACTUPC.cbl:1503] PERFORM statement
        controlManager.run(context, _1250EditSigned9v2, _1250EditSigned9v2Exit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1505] MOVE statement
        container
                .getWsMiscStorage()
                .getWsNonKeyFlags()
                .setWsEditCashCreditLimit(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsFlgSignedNumberEdit());
        // [T-Up#INFO][COACTUPC.cbl:1507] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditVariableName("Reissue Date");
        // [T-Up#INFO][COACTUPC.cbl:1508] MOVE statement
        container
                .getWsMiscStorage()
                .getWsCalculationVars()
                .getWsEditDateCcyymmdd()
                .set(container.getWsThisProgcommarea().getAcupNewDetails()
                        .getAcupNewAcctData().getAcupNewReissueDate());
        // [T-Up#INFO][COACTUPC.cbl:1509] PERFORM statement
        controlManager.run(context, editDateCcyymmdd, editDateCcyymmddExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1511] MOVE statement
        CoactupcMapperInterface.CoactupcWsMiscStorageCoactupcWsEditDateFlgsToCoactupcWsMiscStorageCoactupcWsEditReissueDateFlgs
                .set(container.getWsMiscStorage().getWsCalculationVars()
                        .getWsEditDateFlgs(), container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditReissueDateFlgs());
        // [T-Up#INFO][COACTUPC.cbl:1513] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditVariableName("Current Balance");
        // [T-Up#INFO][COACTUPC.cbl:1514] MOVE statement
        container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .setWsEditSignedNumber9v2X(
                        container.getWsMiscStorage()
                                .getAlphaVarsForDataEditing()
                                .getAcupNewCurrBalX());
        // [T-Up#INFO][COACTUPC.cbl:1515] PERFORM statement
        controlManager.run(context, _1250EditSigned9v2, _1250EditSigned9v2Exit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1517] MOVE statement
        container
                .getWsMiscStorage()
                .getWsNonKeyFlags()
                .setWsEditCurrBal(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsFlgSignedNumberEdit());
        // [T-Up#INFO][COACTUPC.cbl:1519] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditVariableName("Current Cycle Credit Limit");
        // [T-Up#INFO][COACTUPC.cbl:1520] MOVE statement
        container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .setWsEditSignedNumber9v2X(
                        container.getWsMiscStorage()
                                .getAlphaVarsForDataEditing()
                                .getAcupNewCurrCycCreditX());
        // [T-Up#INFO][COACTUPC.cbl:1522] PERFORM statement
        controlManager.run(context, _1250EditSigned9v2, _1250EditSigned9v2Exit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1524] MOVE statement
        container
                .getWsMiscStorage()
                .getWsNonKeyFlags()
                .setWsEditCurrCycCredit(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsFlgSignedNumberEdit());
        // [T-Up#INFO][COACTUPC.cbl:1526] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditVariableName("Current Cycle Debit Limit");
        // [T-Up#INFO][COACTUPC.cbl:1527] MOVE statement
        container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .setWsEditSignedNumber9v2X(
                        container.getWsMiscStorage()
                                .getAlphaVarsForDataEditing()
                                .getAcupNewCurrCycDebitX());
        // [T-Up#INFO][COACTUPC.cbl:1529] PERFORM statement
        controlManager.run(context, _1250EditSigned9v2, _1250EditSigned9v2Exit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1531] MOVE statement
        container
                .getWsMiscStorage()
                .getWsNonKeyFlags()
                .setWsEditCurrCycDebit(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsFlgSignedNumberEdit());
        // [T-Up#INFO][COACTUPC.cbl:1533] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditVariableName("SSN");
        // [T-Up#INFO][COACTUPC.cbl:1534] PERFORM statement
        controlManager.run(context, _1265EditUsSsn, _1265EditUsSsnExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1537] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditVariableName("Date of Birth");
        // [T-Up#INFO][COACTUPC.cbl:1538] MOVE statement
        container
                .getWsMiscStorage()
                .getWsCalculationVars()
                .getWsEditDateCcyymmdd()
                .set(container.getWsThisProgcommarea().getAcupNewDetails()
                        .getAcupNewCustData().getAcupNewCustDobYyyyMmDd());
        // [T-Up#INFO][COACTUPC.cbl:1540] PERFORM statement
        controlManager.run(context, editDateCcyymmdd, editDateCcyymmddExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1542] MOVE statement
        CoactupcMapperInterface.CoactupcWsMiscStorageCoactupcWsEditDateFlgsToCoactupcWsMiscStorageCoactupcWsEditDtOfBirthFlgs
                .set(container.getWsMiscStorage().getWsCalculationVars()
                        .getWsEditDateFlgs(), container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditDtOfBirthFlgs());
        // [T-Up#INFO][COACTUPC.cbl:1543] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditDtOfBirthFlgs().get(),
                WS_EDIT_DT_OF_BIRTH_ISVALID) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1544] PERFORM statement
            controlManager.run(context, editDateOfBirth, editDateOfBirthExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COACTUPC.cbl:1546] MOVE statement
            CoactupcMapperInterface.CoactupcWsMiscStorageCoactupcWsEditDateFlgsToCoactupcWsMiscStorageCoactupcWsEditDtOfBirthFlgs
                    .set(container.getWsMiscStorage().getWsCalculationVars()
                            .getWsEditDateFlgs(), container.getWsMiscStorage()
                            .getWsNonKeyFlags().getWsEditDtOfBirthFlgs());
        }
        // [T-Up#INFO][COACTUPC.cbl:1549] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditVariableName("FICO Score");
        // [T-Up#INFO][COACTUPC.cbl:1550] MOVE statement
        container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .setWsEditAlphanumOnly(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData()
                                .getAcupNewCustFicoScoreX());
        // [T-Up#INFO][COACTUPC.cbl:1552] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditAlphanumLength(3);
        // [T-Up#INFO][COACTUPC.cbl:1553] PERFORM statement
        controlManager.run(context, _1245EditNumReqd, _1245EditNumReqdExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1555] MOVE statement
        container
                .getWsMiscStorage()
                .getWsNonKeyFlags()
                .setWsEditFicoScoreFlgs(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditAlphanumOnlyFlags());
        // [T-Up#INFO][COACTUPC.cbl:1557] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditFicoScoreFlgs(),
                FLG_FICO_SCORE_ISVALID) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1558] PERFORM statement
            controlManager.run(context, _1275EditFicoScore,
                    _1275EditFicoScoreExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // ******************************************************************
        // *    Edit names
        // ******************************************************************
        // [T-Up#INFO][COACTUPC.cbl:1564] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditVariableName("First Name");
        // [T-Up#INFO][COACTUPC.cbl:1565] MOVE statement
        container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .setWsEditAlphanumOnly(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData().getAcupNewCustFirstName());
        // [T-Up#INFO][COACTUPC.cbl:1566] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditAlphanumLength(25);
        // [T-Up#INFO][COACTUPC.cbl:1567] PERFORM statement
        controlManager.run(context, _1225EditAlphaReqd, _1225EditAlphaReqdExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1569] MOVE statement
        container
                .getWsMiscStorage()
                .getWsNonKeyFlags()
                .getWsEditNameFlags()
                .setWsEditFirstNameFlgs(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditAlphaOnlyFlags());
        // [T-Up#INFO][COACTUPC.cbl:1572] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditVariableName("Middle Name");
        // [T-Up#INFO][COACTUPC.cbl:1573] MOVE statement
        container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .setWsEditAlphanumOnly(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData()
                                .getAcupNewCustMiddleName());
        // [T-Up#INFO][COACTUPC.cbl:1574] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditAlphanumLength(25);
        // [T-Up#INFO][COACTUPC.cbl:1575] PERFORM statement
        controlManager.run(context, _1235EditAlphaOpt, _1235EditAlphaOptExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1577] MOVE statement
        container
                .getWsMiscStorage()
                .getWsNonKeyFlags()
                .getWsEditNameFlags()
                .setWsEditMiddleNameFlgs(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditAlphaOnlyFlags());
        // [T-Up#INFO][COACTUPC.cbl:1580] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditVariableName("Last Name");
        // [T-Up#INFO][COACTUPC.cbl:1581] MOVE statement
        container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .setWsEditAlphanumOnly(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData().getAcupNewCustLastName());
        // [T-Up#INFO][COACTUPC.cbl:1582] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditAlphanumLength(25);
        // [T-Up#INFO][COACTUPC.cbl:1583] PERFORM statement
        controlManager.run(context, _1225EditAlphaReqd, _1225EditAlphaReqdExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1585] MOVE statement
        container
                .getWsMiscStorage()
                .getWsNonKeyFlags()
                .getWsEditNameFlags()
                .setWsEditLastNameFlgs(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditAlphaOnlyFlags());
        // [T-Up#INFO][COACTUPC.cbl:1588] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditVariableName("Address Line 1");
        // [T-Up#INFO][COACTUPC.cbl:1589] MOVE statement
        container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .setWsEditAlphanumOnly(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData().getAcupNewCustAddrLine1());
        // [T-Up#INFO][COACTUPC.cbl:1590] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditAlphanumLength(50);
        // [T-Up#INFO][COACTUPC.cbl:1591] PERFORM statement
        controlManager.run(context, _1215EditMandatory, _1215EditMandatoryExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1593] MOVE statement
        container
                .getWsMiscStorage()
                .getWsNonKeyFlags()
                .getWsEditAddressFlags()
                .setWsEditAddressLine1Flgs(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditMandatoryFlags());
        // [T-Up#INFO][COACTUPC.cbl:1596] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditVariableName("State");
        // [T-Up#INFO][COACTUPC.cbl:1597] MOVE statement
        container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .setWsEditAlphanumOnly(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData()
                                .getAcupNewCustAddrStateCd());
        // [T-Up#INFO][COACTUPC.cbl:1598] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditAlphanumLength(2);
        // [T-Up#INFO][COACTUPC.cbl:1599] PERFORM statement
        controlManager.run(context, _1225EditAlphaReqd, _1225EditAlphaReqdExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1601] MOVE statement
        container
                .getWsMiscStorage()
                .getWsNonKeyFlags()
                .getWsEditAddressFlags()
                .setWsEditStateFlgs(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditAlphaOnlyFlags());
        // [T-Up#INFO][COACTUPC.cbl:1603] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsGenericEdits().getWsEditAlphaOnlyFlags(),
                FLG_ALPHA_ISVALID) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1604] PERFORM statement
            controlManager.run(context, _1270EditUsStateCd,
                    _1270EditUsStateCdExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][COACTUPC.cbl:1609] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditVariableName("Zip");
        // [T-Up#INFO][COACTUPC.cbl:1610] MOVE statement
        container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .setWsEditAlphanumOnly(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData().getAcupNewCustAddrZip());
        // [T-Up#INFO][COACTUPC.cbl:1611] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditAlphanumLength(5);
        // [T-Up#INFO][COACTUPC.cbl:1612] PERFORM statement
        controlManager.run(context, _1245EditNumReqd, _1245EditNumReqdExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1614] MOVE statement
        container
                .getWsMiscStorage()
                .getWsNonKeyFlags()
                .getWsEditAddressFlags()
                .setWsEditZipcodeFlgs(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditAlphanumOnlyFlags());
        // *    Address Line 2 is optional
        // *    MOVE 'Address Line 2'         TO WS-EDIT-VARIABLE-NAME
        // [T-Up#INFO][COACTUPC.cbl:1619] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditVariableName("City");
        // [T-Up#INFO][COACTUPC.cbl:1620] MOVE statement
        container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .setWsEditAlphanumOnly(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData().getAcupNewCustAddrLine3());
        // [T-Up#INFO][COACTUPC.cbl:1621] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditAlphanumLength(50);
        // [T-Up#INFO][COACTUPC.cbl:1622] PERFORM statement
        controlManager.run(context, _1225EditAlphaReqd, _1225EditAlphaReqdExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1624] MOVE statement
        container
                .getWsMiscStorage()
                .getWsNonKeyFlags()
                .getWsEditAddressFlags()
                .setWsEditCityFlgs(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditAlphaOnlyFlags());
        // [T-Up#INFO][COACTUPC.cbl:1627] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditVariableName("Country");
        // [T-Up#INFO][COACTUPC.cbl:1628] MOVE statement
        container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .setWsEditAlphanumOnly(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData()
                                .getAcupNewCustAddrCountryCd());
        // [T-Up#INFO][COACTUPC.cbl:1630] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditAlphanumLength(3);
        // [T-Up#INFO][COACTUPC.cbl:1631] PERFORM statement
        controlManager.run(context, _1225EditAlphaReqd, _1225EditAlphaReqdExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1633] MOVE statement
        container
                .getWsMiscStorage()
                .getWsNonKeyFlags()
                .getWsEditAddressFlags()
                .setWsEditCountryFlgs(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditAlphaOnlyFlags());
        // [T-Up#INFO][COACTUPC.cbl:1636] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditVariableName("Phone Number 1");
        // [T-Up#INFO][COACTUPC.cbl:1637] MOVE statement
        container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .setWsEditUsPhoneNum(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData().getAcupNewCustPhoneNum1());
        // [T-Up#INFO][COACTUPC.cbl:1639] PERFORM statement
        controlManager.run(context, _1260EditUsPhoneNum,
                _1260EditUsPhoneNumExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1641] MOVE statement
        CoactupcMapperInterface.CoactupcWsMiscStorageCoactupcWsEditUsPhoneNumFlgsToCoactupcWsMiscStorageCoactupcWsEditPhoneNum1Flgs
                .set(container.getWsMiscStorage().getWsGenericEdits()
                        .getWsEditUsPhoneNumFlgs(), container
                        .getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditAddressFlags().getWsEditPhoneNum1Flgs());
        // [T-Up#INFO][COACTUPC.cbl:1644] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditVariableName("Phone Number 2");
        // [T-Up#INFO][COACTUPC.cbl:1645] MOVE statement
        container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .setWsEditUsPhoneNum(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData().getAcupNewCustPhoneNum2());
        // [T-Up#INFO][COACTUPC.cbl:1647] PERFORM statement
        controlManager.run(context, _1260EditUsPhoneNum,
                _1260EditUsPhoneNumExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1649] MOVE statement
        CoactupcMapperInterface.CoactupcWsMiscStorageCoactupcWsEditUsPhoneNumFlgsToCoactupcWsMiscStorageCoactupcWsEditPhoneNum2Flgs
                .set(container.getWsMiscStorage().getWsGenericEdits()
                        .getWsEditUsPhoneNumFlgs(), container
                        .getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditAddressFlags().getWsEditPhoneNum2Flgs());
        // [T-Up#INFO][COACTUPC.cbl:1652] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditVariableName("EFT Account Id");
        // [T-Up#INFO][COACTUPC.cbl:1653] MOVE statement
        container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .setWsEditAlphanumOnly(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData()
                                .getAcupNewCustEftAccountId());
        // [T-Up#INFO][COACTUPC.cbl:1655] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditAlphanumLength(10);
        // [T-Up#INFO][COACTUPC.cbl:1656] PERFORM statement
        controlManager.run(context, _1245EditNumReqd, _1245EditNumReqdExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1658] MOVE statement
        container
                .getWsMiscStorage()
                .getWsNonKeyFlags()
                .setWsEftAccountIdFlgs(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditAlphanumOnlyFlags());
        // [T-Up#INFO][COACTUPC.cbl:1661] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditVariableName("Primary Card Holder");
        // [T-Up#INFO][COACTUPC.cbl:1662] MOVE statement
        container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .setWsEditYesNo(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData()
                                .getAcupNewCustPriHolderInd());
        // [T-Up#INFO][COACTUPC.cbl:1664] PERFORM statement
        controlManager.run(context, _1220EditYesno, _1220EditYesnoExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1666] MOVE statement
        container
                .getWsMiscStorage()
                .getWsNonKeyFlags()
                .setWsEditPriCardholder(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditYesNo());
        // *    Cross field edits begin here
        // [T-Up#INFO][COACTUPC.cbl:1669] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditAddressFlags()
                .getWsEditStateFlgs(), FLG_STATE_ISVALID) == 0
                && CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditAddressFlags()
                        .getWsEditZipcodeFlgs(), FLG_ZIPCODE_ISVALID) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1671] PERFORM statement
            controlManager.run(context, _1280EditUsStateZipCd,
                    _1280EditUsStateZipCdExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][COACTUPC.cbl:1675] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsInputFlag(), INPUT_ERROR) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1676] CONTINUE statement
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1678] SET statement
            container.getWsThisProgcommarea().getAcctUpdateScreenData()
                    .setAcupChangeAction(ACUP_CHANGES_OK_NOT_CONFIRMED);
        }
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:1682] 1200-EDIT-MAP-INPUTS-EXIT Paragraph</p>
     */
    void _1200EditMapInputsExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:1683] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:1685] 1205-COMPARE-OLD-NEW Paragraph</p>
     */
    void _1205CompareOldNew(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:1686] SET statement
        container.getWsMiscStorage().setWsDatachangedFlag(NO_CHANGES_FOUND);
        // [T-Up#INFO][COACTUPC.cbl:1688] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewAcctData().getAcupNewAcctIdX(),
                container.getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldAcctData().getAcupOldAcctIdX()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewAcctData()
                        .getAcupNewActiveStatus().toUpperCase(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldAcctData().getAcupOldActiveStatus()
                        .toUpperCase()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewAcctData()
                        .getAcupNewCurrBal(), container.getWsThisProgcommarea()
                        .getAcupOldDetails().getAcupOldAcctData()
                        .getAcupOldCurrBal()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewAcctData()
                        .getAcupNewCreditLimit(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldAcctData().getAcupOldCreditLimit()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewAcctData()
                        .getAcupNewCashCreditLimit(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldAcctData().getAcupOldCashCreditLimit()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewAcctData()
                        .getAcupNewOpenDate(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldAcctData().getAcupOldOpenDate()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewAcctData()
                        .getAcupNewExpiraionDate(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldAcctData().getAcupOldExpiraionDate()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewAcctData()
                        .getAcupNewReissueDate(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldAcctData().getAcupOldReissueDate()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewAcctData()
                        .getAcupNewCurrCycCredit(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldAcctData().getAcupOldCurrCycCredit()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewAcctData()
                        .getAcupNewCurrCycDebit(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldAcctData().getAcupOldCurrCycDebit()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewAcctData()
                        .getAcupNewGroupId().trim().toUpperCase(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldAcctData().getAcupOldGroupId().trim()
                        .toUpperCase()) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1705] CONTINUE statement
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1707] SET statement
            container.getWsMiscStorage().setWsDatachangedFlag(
                    CHANGE_HAS_OCCURRED);
            // [T-Up#INFO][COACTUPC.cbl:1708] GO TO statement
            context.setGotoTarget(_1205CompareOldNewExit);
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1712] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData().getAcupNewCustIdX()
                .trim().toUpperCase(), container.getWsThisProgcommarea()
                .getAcupOldDetails().getAcupOldCustData().getAcupOldCustIdX()
                .trim().toUpperCase()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewCustData()
                        .getAcupNewCustFirstName().trim().toUpperCase(),
                        container.getWsThisProgcommarea().getAcupOldDetails()
                                .getAcupOldCustData().getAcupOldCustFirstName()
                                .trim().toUpperCase()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewCustData()
                        .getAcupNewCustMiddleName().trim().toUpperCase(),
                        container.getWsThisProgcommarea().getAcupOldDetails()
                                .getAcupOldCustData()
                                .getAcupOldCustMiddleName().trim()
                                .toUpperCase()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewCustData()
                        .getAcupNewCustLastName().trim().toUpperCase(),
                        container.getWsThisProgcommarea().getAcupOldDetails()
                                .getAcupOldCustData().getAcupOldCustLastName()
                                .trim().toUpperCase()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewCustData()
                        .getAcupNewCustAddrLine1().trim().toUpperCase(),
                        container.getWsThisProgcommarea().getAcupOldDetails()
                                .getAcupOldCustData().getAcupOldCustAddrLine1()
                                .trim().toUpperCase()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewCustData()
                        .getAcupNewCustAddrLine2().trim().toUpperCase(),
                        container.getWsThisProgcommarea().getAcupOldDetails()
                                .getAcupOldCustData().getAcupOldCustAddrLine2()
                                .trim().toUpperCase()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewCustData()
                        .getAcupNewCustAddrLine3().trim().toUpperCase(),
                        container.getWsThisProgcommarea().getAcupOldDetails()
                                .getAcupOldCustData().getAcupOldCustAddrLine3()
                                .trim().toUpperCase()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewCustData()
                        .getAcupNewCustAddrStateCd().trim().toUpperCase(),
                        container.getWsThisProgcommarea().getAcupOldDetails()
                                .getAcupOldCustData()
                                .getAcupOldCustAddrStateCd().trim()
                                .toUpperCase()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewCustData()
                        .getAcupNewCustAddrCountryCd().trim().toUpperCase(),
                        container.getWsThisProgcommarea().getAcupOldDetails()
                                .getAcupOldCustData()
                                .getAcupOldCustAddrCountryCd().trim()
                                .toUpperCase()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewCustData()
                        .getAcupNewCustAddrZip().trim().toUpperCase(),
                        container.getWsThisProgcommarea().getAcupOldDetails()
                                .getAcupOldCustData().getAcupOldCustAddrZip()
                                .trim().toUpperCase()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewCustData()
                        .getAcupNewCustPhoneNum1a(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldCustData().getAcupOldCustPhoneNum1a()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewCustData()
                        .getAcupNewCustPhoneNum1b(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldCustData().getAcupOldCustPhoneNum1b()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewCustData()
                        .getAcupNewCustPhoneNum1c(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldCustData().getAcupOldCustPhoneNum1c()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewCustData()
                        .getAcupNewCustPhoneNum2a(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldCustData().getAcupOldCustPhoneNum2a()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewCustData()
                        .getAcupNewCustPhoneNum2b(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldCustData().getAcupOldCustPhoneNum2b()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewCustData()
                        .getAcupNewCustPhoneNum2c(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldCustData().getAcupOldCustPhoneNum2c()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewCustData()
                        .getAcupNewCustSsnX().get(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldCustData().getAcupOldCustSsnX()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewCustData()
                        .getAcupNewCustGovtIssuedId().trim().toUpperCase(),
                        container.getWsThisProgcommarea().getAcupOldDetails()
                                .getAcupOldCustData()
                                .getAcupOldCustGovtIssuedId().trim()
                                .toUpperCase()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewCustData()
                        .getAcupNewCustDobYyyyMmDd(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldCustData().getAcupOldCustDobYyyyMmDd()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewCustData()
                        .getAcupNewCustEftAccountId(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldCustData().getAcupOldCustEftAccountId()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewCustData()
                        .getAcupNewCustPriHolderInd().trim().toUpperCase(),
                        container.getWsThisProgcommarea().getAcupOldDetails()
                                .getAcupOldCustData()
                                .getAcupOldCustPriHolderInd().trim()
                                .toUpperCase()) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcupNewDetails().getAcupNewCustData()
                        .getAcupNewCustFicoScoreX(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldCustData().getAcupOldCustFicoScoreX()) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1773] SET statement
            container.getWsMiscStorage().setWsReturnMsg(NO_CHANGES_DETECTED);
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1775] SET statement
            container.getWsMiscStorage().setWsDatachangedFlag(
                    CHANGE_HAS_OCCURRED);
            // [T-Up#INFO][COACTUPC.cbl:1776] GO TO statement
            context.setGotoTarget(_1205CompareOldNewExit);
            return;
        }
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:1781] 1205-COMPARE-OLD-NEW-EXIT Paragraph</p>
     */
    void _1205CompareOldNewExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:1782] EXIT statement
    }

    // *

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:1787] 1210-EDIT-ACCOUNT Paragraph</p>
     */
    void _1210EditAccount(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:1788] SET statement
        container.getWsMiscStorage().setWsEditAcctFlag(FLG_ACCTFILTER_NOT_OK);
        // *    Not supplied
        // [T-Up#INFO][COACTUPC.cbl:1791] IF statement
        if (CobStringUtils.compare(container.getCcWorkAreas().getCcWorkArea()
                .getCcAcctId(), StringUtils.repeat((char) 0x00, 11)) == 0
                || CobStringUtils.compare(container.getCcWorkAreas()
                        .getCcWorkArea().getCcAcctId(),
                        StringUtils.repeat(' ', 11)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1793] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:1794] SET statement
            container.getWsMiscStorage()
                    .setWsEditAcctFlag(FLG_ACCTFILTER_BLANK);
            // [T-Up#INFO][COACTUPC.cbl:1795] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:1796] SET statement
                container.getWsMiscStorage().setWsReturnMsg(WS_PROMPT_FOR_ACCT);
            }
            // [T-Up#INFO][COACTUPC.cbl:1798] MOVE statement
            container.getCarddemoCommarea().getCdemoAccountInfo()
                    .setCdemoAcctId((long) 0);
            container.getWsThisProgcommarea().getAcupNewDetails()
                    .getAcupNewAcctData().setAcupNewAcctId((long) 0);
            // [T-Up#INFO][COACTUPC.cbl:1800] GO TO statement
            context.setGotoTarget(_1210EditAccountExit);
            return;
        }
        // *    Not numeric
        // *    Not 11 characters
        // [T-Up#INFO][COACTUPC.cbl:1805] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupNewDetails()
                .getAcupNewAcctData()
                .setAcupNewAcctId(
                        Long.parseLong(container.getCcWorkAreas()
                                .getCcWorkArea().getCcAcctId()));
        // [T-Up#INFO][COACTUPC.cbl:1806] IF statement
        if (!StringUtils.isNumeric(container.getCcWorkAreas().getCcWorkArea()
                .getCcAcctId())
                || container.getCcWorkAreas().getCcWorkArea().getCcAcctIdN() == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1808] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:1809] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:1810] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        "Account Number if supplied must be a 11 digit")
                        .append(" Non-Zero Number");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:1816] MOVE statement
            container.getCarddemoCommarea().getCdemoAccountInfo()
                    .setCdemoAcctId((long) 0);
            // [T-Up#INFO][COACTUPC.cbl:1817] GO TO statement
            context.setGotoTarget(_1210EditAccountExit);
            return;
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1819] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoAccountInfo()
                    .setCdemoAcctId(
                            Long.parseLong(container.getCcWorkAreas()
                                    .getCcWorkArea().getCcAcctId().trim()));
            // [T-Up#INFO][COACTUPC.cbl:1820] SET statement
            container.getWsMiscStorage().setWsEditAcctFlag(
                    FLG_ACCTFILTER_ISVALID);
        }
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:1824] 1210-EDIT-ACCOUNT-EXIT Paragraph</p>
     */
    void _1210EditAccountExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:1825] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:1828] 1215-EDIT-MANDATORY Paragraph</p>
     */
    void _1215EditMandatory(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // *    Initialize
        // [T-Up#INFO][COACTUPC.cbl:1830] SET statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditMandatoryFlags(FLG_MANDATORY_NOT_OK);
        // *    Not supplied
        // [T-Up#INFO][COACTUPC.cbl:1833] IF statement
        if (CobStringUtils.compare(
                container
                        .getWsMiscStorage()
                        .getWsGenericEdits()
                        .getWsEditAlphanumOnly()
                        .substring(
                                0,
                                0 + container.getWsMiscStorage()
                                        .getWsGenericEdits()
                                        .getWsEditAlphanumLength()),
                StringUtils.repeat((char) 0x00, 256)) == 0
                || CobStringUtils.compare(
                        container
                                .getWsMiscStorage()
                                .getWsGenericEdits()
                                .getWsEditAlphanumOnly()
                                .substring(
                                        0,
                                        0 + container.getWsMiscStorage()
                                                .getWsGenericEdits()
                                                .getWsEditAlphanumLength()),
                        StringUtils.repeat(' ', 256)) == 0
                || container
                        .getWsMiscStorage()
                        .getWsGenericEdits()
                        .getWsEditAlphanumOnly()
                        .substring(
                                0,
                                0 + container.getWsMiscStorage()
                                        .getWsGenericEdits()
                                        .getWsEditAlphanumLength()).trim()
                        .length() == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1840] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:1841] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .setWsEditMandatoryFlags(FLG_MANDATORY_BLANK);
            // [T-Up#INFO][COACTUPC.cbl:1842] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:1843] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        " must be supplied.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:1851] GO TO statement
            context.setGotoTarget(_1215EditMandatoryExit);
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1854] SET statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditMandatoryFlags(FLG_MANDATORY_ISVALID);
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:1856] 1215-EDIT-MANDATORY-EXIT Paragraph</p>
     */
    void _1215EditMandatoryExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:1857] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:1860] 1220-EDIT-YESNO Paragraph</p>
     */
    void _1220EditYesno(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // *    Must be Y or N
        // *    SET FLG-YES-NO-NOT-OK         TO TRUE
        // *
        // *    Not supplied
        // [T-Up#INFO][COACTUPC.cbl:1865] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsGenericEdits().getWsEditYesNo(),
                StringUtils.repeat((char) 0x00, 1)) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsGenericEdits().getWsEditYesNo(), " ") == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsGenericEdits().getWsEditYesNo(),
                        StringUtils.repeat('0', 1)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1868] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:1869] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .setWsEditYesNo(FLG_YES_NO_BLANK);
            // [T-Up#INFO][COACTUPC.cbl:1870] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:1871] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        " must be supplied.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:1878] GO TO statement
            context.setGotoTarget(_1220EditYesnoExit);
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1882] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsGenericEdits().getWsEditYesNo(), FLG_YES_NO_ISVALID_1) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsGenericEdits().getWsEditYesNo(),
                        FLG_YES_NO_ISVALID_2) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1883] CONTINUE statement
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1885] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:1886] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .setWsEditYesNo(FLG_YES_NO_NOT_OK);
            // [T-Up#INFO][COACTUPC.cbl:1887] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:1888] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        " must be Y or N.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:1895] GO TO statement
            context.setGotoTarget(_1220EditYesnoExit);
            return;
        }
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:1898] 1220-EDIT-YESNO-EXIT Paragraph</p>
     */
    void _1220EditYesnoExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:1899] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:1902] 1225-EDIT-ALPHA-REQD Paragraph</p>
     */
    void _1225EditAlphaReqd(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // *    Initialize
        // [T-Up#INFO][COACTUPC.cbl:1904] SET statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditAlphaOnlyFlags(FLG_ALPHA_NOT_OK);
        // *    Not supplied
        // [T-Up#INFO][COACTUPC.cbl:1907] IF statement
        if (CobStringUtils.compare(
                container
                        .getWsMiscStorage()
                        .getWsGenericEdits()
                        .getWsEditAlphanumOnly()
                        .substring(
                                0,
                                0 + container.getWsMiscStorage()
                                        .getWsGenericEdits()
                                        .getWsEditAlphanumLength()),
                StringUtils.repeat((char) 0x00, 256)) == 0
                || CobStringUtils.compare(
                        container
                                .getWsMiscStorage()
                                .getWsGenericEdits()
                                .getWsEditAlphanumOnly()
                                .substring(
                                        0,
                                        0 + container.getWsMiscStorage()
                                                .getWsGenericEdits()
                                                .getWsEditAlphanumLength()),
                        StringUtils.repeat(' ', 256)) == 0
                || container
                        .getWsMiscStorage()
                        .getWsGenericEdits()
                        .getWsEditAlphanumOnly()
                        .substring(
                                0,
                                0 + container.getWsMiscStorage()
                                        .getWsGenericEdits()
                                        .getWsEditAlphanumLength()).trim()
                        .length() == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1914] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:1915] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .setWsEditAlphaOnlyFlags(FLG_ALPHA_BLANK);
            // [T-Up#INFO][COACTUPC.cbl:1916] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:1917] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        " must be supplied.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:1925] GO TO statement
            context.setGotoTarget(_1225EditAlphaReqdExit);
            return;
        }
        // *    Only Alphabets and space allowed
        // [T-Up#INFO][COACTUPC.cbl:1929] MOVE statement
        container.setLitAllAlphaFrom(container.getWsLiterals()
                .getLitAllAlphanumFromX().getLitAllAlphaFromX().get());
        // [T-Up#INFO][COACTUPC.cbl:1930] INSPECT statement
        container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .setWsEditAlphanumOnly(
                        StringUtils.overlay(
                                container.getWsMiscStorage()
                                        .getWsGenericEdits()
                                        .getWsEditAlphanumOnly(),
                                StringUtils
                                        .replaceChars(
                                                container
                                                        .getWsMiscStorage()
                                                        .getWsGenericEdits()
                                                        .getWsEditAlphanumOnly()
                                                        .substring(
                                                                0,
                                                                0 + container
                                                                        .getWsMiscStorage()
                                                                        .getWsGenericEdits()
                                                                        .getWsEditAlphanumLength()),
                                                container.getLitAllAlphaFrom(),
                                                container.getLitAlphaSpacesTo()),
                                0, 0 + container.getWsMiscStorage()
                                        .getWsGenericEdits()
                                        .getWsEditAlphanumLength()));
        // [T-Up#INFO][COACTUPC.cbl:1934] IF statement
        if (container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .getWsEditAlphanumOnly()
                .substring(
                        0,
                        0 + container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditAlphanumLength()).trim().length() == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1938] CONTINUE statement
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1940] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:1941] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .setWsEditAlphaOnlyFlags(FLG_ALPHA_NOT_OK);
            // [T-Up#INFO][COACTUPC.cbl:1942] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:1943] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        " can have alphabets only.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:1950] GO TO statement
            context.setGotoTarget(_1225EditAlphaReqdExit);
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:1953] SET statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditAlphaOnlyFlags(FLG_ALPHA_ISVALID);
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:1955] 1225-EDIT-ALPHA-REQD-EXIT Paragraph</p>
     */
    void _1225EditAlphaReqdExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:1956] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:1959] 1230-EDIT-ALPHANUM-REQD Paragraph</p>
     */
    void _1230EditAlphanumReqd(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // *    Initialize
        // [T-Up#INFO][COACTUPC.cbl:1961] SET statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditAlphanumOnlyFlags(FLG_ALPHNANUM_NOT_OK);
        // *    Not supplied
        // [T-Up#INFO][COACTUPC.cbl:1964] IF statement
        if (CobStringUtils.compare(
                container
                        .getWsMiscStorage()
                        .getWsGenericEdits()
                        .getWsEditAlphanumOnly()
                        .substring(
                                0,
                                0 + container.getWsMiscStorage()
                                        .getWsGenericEdits()
                                        .getWsEditAlphanumLength()),
                StringUtils.repeat((char) 0x00, 256)) == 0
                || CobStringUtils.compare(
                        container
                                .getWsMiscStorage()
                                .getWsGenericEdits()
                                .getWsEditAlphanumOnly()
                                .substring(
                                        0,
                                        0 + container.getWsMiscStorage()
                                                .getWsGenericEdits()
                                                .getWsEditAlphanumLength()),
                        StringUtils.repeat(' ', 256)) == 0
                || container
                        .getWsMiscStorage()
                        .getWsGenericEdits()
                        .getWsEditAlphanumOnly()
                        .substring(
                                0,
                                0 + container.getWsMiscStorage()
                                        .getWsGenericEdits()
                                        .getWsEditAlphanumLength()).trim()
                        .length() == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1971] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:1972] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .setWsEditAlphanumOnlyFlags(FLG_ALPHNANUM_BLANK);
            // [T-Up#INFO][COACTUPC.cbl:1973] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:1974] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        " must be supplied.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:1982] GO TO statement
            context.setGotoTarget(_1230EditAlphanumReqdExit);
            return;
        }
        // *    Only Alphabets,numbers and space allowed
        // [T-Up#INFO][COACTUPC.cbl:1986] MOVE statement
        container.setLitAllAlphanumFrom(container.getWsLiterals()
                .getLitAllAlphanumFromX().get());
        // [T-Up#INFO][COACTUPC.cbl:1988] INSPECT statement
        container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .setWsEditAlphanumOnly(
                        StringUtils.overlay(
                                container.getWsMiscStorage()
                                        .getWsGenericEdits()
                                        .getWsEditAlphanumOnly(),
                                StringUtils
                                        .replaceChars(
                                                container
                                                        .getWsMiscStorage()
                                                        .getWsGenericEdits()
                                                        .getWsEditAlphanumOnly()
                                                        .substring(
                                                                0,
                                                                0 + container
                                                                        .getWsMiscStorage()
                                                                        .getWsGenericEdits()
                                                                        .getWsEditAlphanumLength()),
                                                container
                                                        .getLitAllAlphanumFrom(),
                                                container
                                                        .getLitAlphanumSpacesTo()),
                                0, 0 + container.getWsMiscStorage()
                                        .getWsGenericEdits()
                                        .getWsEditAlphanumLength()));
        // [T-Up#INFO][COACTUPC.cbl:1992] IF statement
        if (container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .getWsEditAlphanumOnly()
                .substring(
                        0,
                        0 + container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditAlphanumLength()).trim().length() == 0) {
            // [T-Up#INFO][COACTUPC.cbl:1996] CONTINUE statement
        } else {
            // [T-Up#INFO][COACTUPC.cbl:1998] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:1999] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .setWsEditAlphanumOnlyFlags(FLG_ALPHNANUM_NOT_OK);
            // [T-Up#INFO][COACTUPC.cbl:2000] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2001] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        " can have numbers or alphabets only.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:2008] GO TO statement
            context.setGotoTarget(_1230EditAlphanumReqdExit);
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:2011] SET statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditAlphanumOnlyFlags(FLG_ALPHNANUM_ISVALID);
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2013] 1230-EDIT-ALPHANUM-REQD-EXIT Paragraph</p>
     */
    void _1230EditAlphanumReqdExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:2014] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2016] 1235-EDIT-ALPHA-OPT Paragraph</p>
     */
    void _1235EditAlphaOpt(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // *    Initialize
        // [T-Up#INFO][COACTUPC.cbl:2018] SET statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditAlphaOnlyFlags(FLG_ALPHA_NOT_OK);
        // *    Not supplied
        // [T-Up#INFO][COACTUPC.cbl:2021] IF statement
        if (CobStringUtils.compare(
                container
                        .getWsMiscStorage()
                        .getWsGenericEdits()
                        .getWsEditAlphanumOnly()
                        .substring(
                                0,
                                0 + container.getWsMiscStorage()
                                        .getWsGenericEdits()
                                        .getWsEditAlphanumLength()),
                StringUtils.repeat((char) 0x00, 256)) == 0
                || CobStringUtils.compare(
                        container
                                .getWsMiscStorage()
                                .getWsGenericEdits()
                                .getWsEditAlphanumOnly()
                                .substring(
                                        0,
                                        0 + container.getWsMiscStorage()
                                                .getWsGenericEdits()
                                                .getWsEditAlphanumLength()),
                        StringUtils.repeat(' ', 256)) == 0
                || container
                        .getWsMiscStorage()
                        .getWsGenericEdits()
                        .getWsEditAlphanumOnly()
                        .substring(
                                0,
                                0 + container.getWsMiscStorage()
                                        .getWsGenericEdits()
                                        .getWsEditAlphanumLength()).trim()
                        .length() == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2028] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .setWsEditAlphaOnlyFlags(FLG_ALPHA_ISVALID);
            // [T-Up#INFO][COACTUPC.cbl:2029] GO TO statement
            context.setGotoTarget(_1235EditAlphaOptExit);
            return;
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2031] CONTINUE statement
        }
        // *    Only Alphabets and space allowed
        // [T-Up#INFO][COACTUPC.cbl:2035] MOVE statement
        container.setLitAllAlphaFrom(container.getWsLiterals()
                .getLitAllAlphanumFromX().getLitAllAlphaFromX().get());
        // [T-Up#INFO][COACTUPC.cbl:2036] INSPECT statement
        container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .setWsEditAlphanumOnly(
                        StringUtils.overlay(
                                container.getWsMiscStorage()
                                        .getWsGenericEdits()
                                        .getWsEditAlphanumOnly(),
                                StringUtils
                                        .replaceChars(
                                                container
                                                        .getWsMiscStorage()
                                                        .getWsGenericEdits()
                                                        .getWsEditAlphanumOnly()
                                                        .substring(
                                                                0,
                                                                0 + container
                                                                        .getWsMiscStorage()
                                                                        .getWsGenericEdits()
                                                                        .getWsEditAlphanumLength()),
                                                container.getLitAllAlphaFrom(),
                                                container.getLitAlphaSpacesTo()),
                                0, 0 + container.getWsMiscStorage()
                                        .getWsGenericEdits()
                                        .getWsEditAlphanumLength()));
        // [T-Up#INFO][COACTUPC.cbl:2040] IF statement
        if (container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .getWsEditAlphanumOnly()
                .substring(
                        0,
                        0 + container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditAlphanumLength()).trim().length() == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2044] CONTINUE statement
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2046] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:2047] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .setWsEditAlphaOnlyFlags(FLG_ALPHA_NOT_OK);
            // [T-Up#INFO][COACTUPC.cbl:2048] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2049] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        " can have alphabets only.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:2056] GO TO statement
            context.setGotoTarget(_1235EditAlphaOptExit);
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:2059] SET statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditAlphaOnlyFlags(FLG_ALPHA_ISVALID);
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2061] 1235-EDIT-ALPHA-OPT-EXIT Paragraph</p>
     */
    void _1235EditAlphaOptExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:2062] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2065] 1240-EDIT-ALPHANUM-OPT Paragraph</p>
     */
    void _1240EditAlphanumOpt(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // *    Initialize
        // [T-Up#INFO][COACTUPC.cbl:2067] SET statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditAlphanumOnlyFlags(FLG_ALPHNANUM_NOT_OK);
        // *    Not supplied, but ok as optional
        // [T-Up#INFO][COACTUPC.cbl:2070] IF statement
        if (CobStringUtils.compare(
                container
                        .getWsMiscStorage()
                        .getWsGenericEdits()
                        .getWsEditAlphanumOnly()
                        .substring(
                                0,
                                0 + container.getWsMiscStorage()
                                        .getWsGenericEdits()
                                        .getWsEditAlphanumLength()),
                StringUtils.repeat((char) 0x00, 256)) == 0
                || CobStringUtils.compare(
                        container
                                .getWsMiscStorage()
                                .getWsGenericEdits()
                                .getWsEditAlphanumOnly()
                                .substring(
                                        0,
                                        0 + container.getWsMiscStorage()
                                                .getWsGenericEdits()
                                                .getWsEditAlphanumLength()),
                        StringUtils.repeat(' ', 256)) == 0
                || container
                        .getWsMiscStorage()
                        .getWsGenericEdits()
                        .getWsEditAlphanumOnly()
                        .substring(
                                0,
                                0 + container.getWsMiscStorage()
                                        .getWsGenericEdits()
                                        .getWsEditAlphanumLength()).trim()
                        .length() == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2076] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .setWsEditAlphanumOnlyFlags(FLG_ALPHNANUM_ISVALID);
            // [T-Up#INFO][COACTUPC.cbl:2077] GO TO statement
            context.setGotoTarget(_1240EditAlphanumOptExit);
            return;
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2079] CONTINUE statement
        }
        // *    Only Alphabets and space allowed
        // [T-Up#INFO][COACTUPC.cbl:2083] MOVE statement
        container.setLitAllAlphanumFrom(container.getWsLiterals()
                .getLitAllAlphanumFromX().get());
        // [T-Up#INFO][COACTUPC.cbl:2084] INSPECT statement
        container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .setWsEditAlphanumOnly(
                        StringUtils.overlay(
                                container.getWsMiscStorage()
                                        .getWsGenericEdits()
                                        .getWsEditAlphanumOnly(),
                                StringUtils
                                        .replaceChars(
                                                container
                                                        .getWsMiscStorage()
                                                        .getWsGenericEdits()
                                                        .getWsEditAlphanumOnly()
                                                        .substring(
                                                                0,
                                                                0 + container
                                                                        .getWsMiscStorage()
                                                                        .getWsGenericEdits()
                                                                        .getWsEditAlphanumLength()),
                                                container
                                                        .getLitAllAlphanumFrom(),
                                                container
                                                        .getLitAlphanumSpacesTo()),
                                0, 0 + container.getWsMiscStorage()
                                        .getWsGenericEdits()
                                        .getWsEditAlphanumLength()));
        // [T-Up#INFO][COACTUPC.cbl:2088] IF statement
        if (container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .getWsEditAlphanumOnly()
                .substring(
                        0,
                        0 + container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditAlphanumLength()).trim().length() == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2092] CONTINUE statement
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2094] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:2095] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .setWsEditAlphanumOnlyFlags(FLG_ALPHNANUM_NOT_OK);
            // [T-Up#INFO][COACTUPC.cbl:2096] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2097] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        " can have numbers or alphabets only.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:2104] GO TO statement
            context.setGotoTarget(_1240EditAlphanumOptExit);
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:2107] SET statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditAlphanumOnlyFlags(FLG_ALPHNANUM_ISVALID);
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2109] 1240-EDIT-ALPHANUM-OPT-EXIT Paragraph</p>
     */
    void _1240EditAlphanumOptExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:2110] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2113] 1245-EDIT-NUM-REQD Paragraph</p>
     */
    void _1245EditNumReqd(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // *    Initialize
        // [T-Up#INFO][COACTUPC.cbl:2115] SET statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditAlphanumOnlyFlags(FLG_ALPHNANUM_NOT_OK);
        // *    Not supplied
        // [T-Up#INFO][COACTUPC.cbl:2118] IF statement
        if (CobStringUtils.compare(
                container
                        .getWsMiscStorage()
                        .getWsGenericEdits()
                        .getWsEditAlphanumOnly()
                        .substring(
                                0,
                                0 + container.getWsMiscStorage()
                                        .getWsGenericEdits()
                                        .getWsEditAlphanumLength()),
                StringUtils.repeat((char) 0x00, 256)) == 0
                || CobStringUtils.compare(
                        container
                                .getWsMiscStorage()
                                .getWsGenericEdits()
                                .getWsEditAlphanumOnly()
                                .substring(
                                        0,
                                        0 + container.getWsMiscStorage()
                                                .getWsGenericEdits()
                                                .getWsEditAlphanumLength()),
                        StringUtils.repeat(' ', 256)) == 0
                || container
                        .getWsMiscStorage()
                        .getWsGenericEdits()
                        .getWsEditAlphanumOnly()
                        .substring(
                                0,
                                0 + container.getWsMiscStorage()
                                        .getWsGenericEdits()
                                        .getWsEditAlphanumLength()).trim()
                        .length() == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2125] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:2126] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .setWsEditAlphanumOnlyFlags(FLG_ALPHNANUM_BLANK);
            // [T-Up#INFO][COACTUPC.cbl:2127] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2128] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        " must be supplied.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:2136] GO TO statement
            context.setGotoTarget(_1245EditNumReqdExit);
            return;
        }
        // *    Only all numeric allowed
        // [T-Up#INFO][COACTUPC.cbl:2141] IF statement
        if (StringUtils.isNumeric(container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .getWsEditAlphanumOnly()
                .substring(
                        0,
                        0 + container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditAlphanumLength()))) {
            // [T-Up#INFO][COACTUPC.cbl:2143] CONTINUE statement
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2145] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:2146] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .setWsEditAlphanumOnlyFlags(FLG_ALPHNANUM_NOT_OK);
            // [T-Up#INFO][COACTUPC.cbl:2147] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2148] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        " must be all numeric.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:2155] GO TO statement
            context.setGotoTarget(_1245EditNumReqdExit);
            return;
        }
        // *    Must not be zero
        // [T-Up#INFO][COACTUPC.cbl:2160] IF statement
        if (IntrinsicFunction.functionNumval(container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .getWsEditAlphanumOnly()
                .substring(
                        0,
                        0 + container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditAlphanumLength())) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2162] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:2163] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .setWsEditAlphanumOnlyFlags(FLG_ALPHNANUM_NOT_OK);
            // [T-Up#INFO][COACTUPC.cbl:2164] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2165] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        " must not be zero.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:2172] GO TO statement
            context.setGotoTarget(_1245EditNumReqdExit);
            return;
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2174] CONTINUE statement
        }
        // [T-Up#INFO][COACTUPC.cbl:2178] SET statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditAlphanumOnlyFlags(FLG_ALPHNANUM_ISVALID);
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2180] 1245-EDIT-NUM-REQD-EXIT Paragraph</p>
     */
    void _1245EditNumReqdExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:2181] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2184] 1250-EDIT-SIGNED-9V2 Paragraph</p>
     */
    void _1250EditSigned9v2(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:2185] SET statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsFlgSignedNumberEdit(FLG_SIGNED_NUMBER_NOT_OK);
        // *    Not supplied
        // [T-Up#INFO][COACTUPC.cbl:2188] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsGenericEdits().getWsEditSignedNumber9v2X(),
                StringUtils.repeat((char) 0x00, 15)) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsGenericEdits().getWsEditSignedNumber9v2X(),
                        StringUtils.repeat(' ', 15)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2190] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:2191] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .setWsFlgSignedNumberEdit(FLG_SIGNED_NUMBER_BLANK);
            // [T-Up#INFO][COACTUPC.cbl:2192] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2193] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        " must be supplied.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:2200] GO TO statement
            context.setGotoTarget(_1250EditSigned9v2Exit);
            return;
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2202] CONTINUE statement
        }
        // [T-Up#INFO][COACTUPC.cbl:2205] IF statement
        if (IntrinsicFunction.functionTestNumvalC(container.getWsMiscStorage()
                .getWsGenericEdits().getWsEditSignedNumber9v2X(), null) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2206] CONTINUE statement
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2208] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:2209] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .setWsFlgSignedNumberEdit(FLG_SIGNED_NUMBER_NOT_OK);
            // [T-Up#INFO][COACTUPC.cbl:2210] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2211] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        " is not valid");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:2217] GO TO statement
            context.setGotoTarget(_1250EditSigned9v2Exit);
            return;
        }
        // *    If we got here all edits were cleared
        // [T-Up#INFO][COACTUPC.cbl:2222] SET statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsFlgSignedNumberEdit(FLG_SIGNED_NUMBER_ISVALID);
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2225] 1250-EDIT-SIGNED-9V2-EXIT Paragraph</p>
     */
    void _1250EditSigned9v2Exit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:2226] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2229] 1260-EDIT-US-PHONE-NUM Paragraph</p>
     */
    void _1260EditUsPhoneNum(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // *    The database stores date in X(15) format (999)999-9999
        // *                                             1234567890123
        // *    So we take the X(15) input into WS-EDIT-US-PHONE-NUM
        // *    and edit it
        // [T-Up#INFO][COACTUPC.cbl:2236] SET statement
        container.getWsMiscStorage().getWsGenericEdits()
                .getWsEditUsPhoneNumFlgs().set(WS_EDIT_US_PHONE_IS_INVALID);
        // *    Not mandatory to enter a phone number
        // [T-Up#INFO][COACTUPC.cbl:2238] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsGenericEdits().getWsEditUsPhoneNuma(),
                StringUtils.repeat(' ', 3)) == 0 || CobStringUtils.compare(
                container.getWsMiscStorage().getWsGenericEdits()
                        .getWsEditUsPhoneNuma(),
                StringUtils.repeat((char) 0x00, 3)) == 0)
                && (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsGenericEdits().getWsEditUsPhoneNumb(),
                        StringUtils.repeat(' ', 3)) == 0 || CobStringUtils
                        .compare(container.getWsMiscStorage()
                                .getWsGenericEdits().getWsEditUsPhoneNumb(),
                                StringUtils.repeat((char) 0x00, 3)) == 0)
                && (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsGenericEdits().getWsEditUsPhoneNuma(),
                        StringUtils.repeat(' ', 3)) == 0 || CobStringUtils
                        .compare(container.getWsMiscStorage()
                                .getWsGenericEdits().getWsEditUsPhoneNumc(),
                                StringUtils.repeat((char) 0x00, 4)) == 0)) {
            // [T-Up#INFO][COACTUPC.cbl:2244] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .getWsEditUsPhoneNumFlgs().set(WS_EDIT_US_PHONE_IS_VALID);
            // [T-Up#INFO][COACTUPC.cbl:2245] GO TO statement
            context.setGotoTarget(editUsPhoneExit);
            return;
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2247] CONTINUE statement
        }
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2250] EDIT-AREA-CODE Paragraph</p>
     */
    void editAreaCode(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:2251] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsGenericEdits().getWsEditUsPhoneNuma(),
                StringUtils.repeat(' ', 3)) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsGenericEdits().getWsEditUsPhoneNuma(),
                        StringUtils.repeat((char) 0x00, 3)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2253] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:2254] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .getWsEditUsPhoneNumFlgs()
                    .setWsEditUsPhoneaFlg(FLG_EDIT_US_PHONEA_BLANK);
            // [T-Up#INFO][COACTUPC.cbl:2255] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2256] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        ": Area code must be supplied.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:2263] GO TO statement
            context.setGotoTarget(editUsPhonePrefix);
            return;
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2265] CONTINUE statement
        }
        // [T-Up#INFO][COACTUPC.cbl:2268] IF statement
        if (StringUtils.isNumeric(container.getWsMiscStorage()
                .getWsGenericEdits().getWsEditUsPhoneNuma())) {
            // [T-Up#INFO][COACTUPC.cbl:2269] CONTINUE statement
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2271] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:2272] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .getWsEditUsPhoneNumFlgs()
                    .setWsEditUsPhoneaFlg(FLG_EDIT_US_PHONEA_NOT_OK);
            // [T-Up#INFO][COACTUPC.cbl:2273] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2274] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        ": Area code must be A 3 digit number.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:2281] GO TO statement
            context.setGotoTarget(editUsPhonePrefix);
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:2284] IF statement
        if (container.getWsMiscStorage().getWsGenericEdits()
                .getWsEditUsPhoneNumaN() == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2285] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:2286] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .getWsEditUsPhoneNumFlgs()
                    .setWsEditUsPhoneaFlg(FLG_EDIT_US_PHONEA_NOT_OK);
            // [T-Up#INFO][COACTUPC.cbl:2287] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2288] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        ": Area code cannot be zero");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:2295] GO TO statement
            context.setGotoTarget(editUsPhonePrefix);
            return;
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2297] CONTINUE statement
        }
        // [T-Up#INFO][COACTUPC.cbl:2300] MOVE statement
        container.setWsUsPhoneAreaCodeToEdit(container.getWsMiscStorage()
                .getWsGenericEdits().getWsEditUsPhoneNuma().trim());
        // [T-Up#INFO][COACTUPC.cbl:2302] IF statement
        if (CobStringUtils.compare(container.getWsUsPhoneAreaCodeToEdit(),
                VALID_GENERAL_PURP_CODE_1) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_2) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_3) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_4) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_5) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_6) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_7) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_8) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_9) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_10) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_11) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_12) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_13) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_14) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_15) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_16) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_17) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_18) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_19) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_20) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_21) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_22) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_23) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_24) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_25) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_26) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_27) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_28) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_29) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_30) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_31) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_32) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_33) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_34) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_35) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_36) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_37) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_38) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_39) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_40) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_41) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_42) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_43) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_44) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_45) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_46) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_47) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_48) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_49) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_50) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_51) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_52) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_53) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_54) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_55) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_56) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_57) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_58) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_59) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_60) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_61) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_62) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_63) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_64) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_65) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_66) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_67) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_68) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_69) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_70) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_71) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_72) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_73) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_74) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_75) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_76) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_77) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_78) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_79) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_80) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_81) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_82) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_83) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_84) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_85) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_86) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_87) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_88) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_89) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_90) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_91) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_92) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_93) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_94) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_95) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_96) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_97) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_98) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_99) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_100) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_101) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_102) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_103) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_104) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_105) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_106) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_107) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_108) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_109) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_110) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_111) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_112) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_113) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_114) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_115) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_116) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_117) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_118) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_119) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_120) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_121) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_122) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_123) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_124) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_125) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_126) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_127) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_128) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_129) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_130) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_131) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_132) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_133) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_134) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_135) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_136) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_137) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_138) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_139) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_140) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_141) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_142) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_143) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_144) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_145) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_146) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_147) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_148) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_149) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_150) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_151) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_152) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_153) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_154) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_155) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_156) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_157) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_158) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_159) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_160) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_161) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_162) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_163) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_164) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_165) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_166) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_167) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_168) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_169) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_170) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_171) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_172) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_173) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_174) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_175) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_176) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_177) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_178) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_179) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_180) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_181) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_182) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_183) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_184) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_185) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_186) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_187) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_188) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_189) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_190) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_191) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_192) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_193) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_194) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_195) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_196) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_197) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_198) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_199) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_200) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_201) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_202) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_203) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_204) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_205) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_206) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_207) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_208) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_209) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_210) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_211) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_212) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_213) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_214) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_215) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_216) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_217) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_218) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_219) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_220) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_221) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_222) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_223) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_224) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_225) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_226) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_227) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_228) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_229) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_230) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_231) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_232) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_233) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_234) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_235) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_236) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_237) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_238) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_239) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_240) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_241) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_242) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_243) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_244) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_245) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_246) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_247) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_248) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_249) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_250) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_251) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_252) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_253) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_254) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_255) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_256) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_257) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_258) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_259) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_260) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_261) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_262) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_263) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_264) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_265) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_266) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_267) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_268) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_269) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_270) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_271) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_272) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_273) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_274) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_275) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_276) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_277) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_278) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_279) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_280) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_281) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_282) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_283) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_284) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_285) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_286) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_287) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_288) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_289) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_290) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_291) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_292) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_293) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_294) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_295) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_296) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_297) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_298) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_299) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_300) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_301) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_302) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_303) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_304) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_305) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_306) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_307) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_308) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_309) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_310) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_311) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_312) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_313) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_314) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_315) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_316) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_317) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_318) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_319) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_320) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_321) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_322) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_323) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_324) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_325) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_326) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_327) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_328) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_329) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_330) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_331) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_332) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_333) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_334) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_335) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_336) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_337) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_338) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_339) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_340) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_341) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_342) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_343) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_344) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_345) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_346) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_347) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_348) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_349) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_350) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_351) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_352) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_353) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_354) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_355) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_356) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_357) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_358) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_359) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_360) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_361) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_362) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_363) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_364) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_365) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_366) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_367) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_368) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_369) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_370) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_371) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_372) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_373) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_374) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_375) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_376) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_377) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_378) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_379) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_380) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_381) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_382) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_383) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_384) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_385) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_386) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_387) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_388) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_389) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_390) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_391) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_392) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_393) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_394) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_395) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_396) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_397) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_398) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_399) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_400) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_401) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_402) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_403) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_404) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_405) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_406) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_407) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_408) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_409) == 0
                || CobStringUtils.compare(
                        container.getWsUsPhoneAreaCodeToEdit(),
                        VALID_GENERAL_PURP_CODE_410) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2303] CONTINUE statement
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2305] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:2306] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .getWsEditUsPhoneNumFlgs()
                    .setWsEditUsPhoneaFlg(FLG_EDIT_US_PHONEA_NOT_OK);
            // [T-Up#INFO][COACTUPC.cbl:2307] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2308] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        ": Not valid North America general purpose area code");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:2315] GO TO statement
            context.setGotoTarget(editUsPhonePrefix);
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:2318] SET statement
        container.getWsMiscStorage().getWsGenericEdits()
                .getWsEditUsPhoneNumFlgs()
                .setWsEditUsPhoneaFlg(FLG_EDIT_US_PHONEA_ISVALID);
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2320] EDIT-US-PHONE-PREFIX Paragraph</p>
     */
    void editUsPhonePrefix(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:2322] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsGenericEdits().getWsEditUsPhoneNumb(),
                StringUtils.repeat(' ', 3)) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsGenericEdits().getWsEditUsPhoneNumb(),
                        StringUtils.repeat((char) 0x00, 3)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2324] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:2325] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .getWsEditUsPhoneNumFlgs()
                    .setWsEditEditUsPhoneb(FLG_EDIT_US_PHONEB_BLANK);
            // [T-Up#INFO][COACTUPC.cbl:2326] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2327] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        ": Prefix code must be supplied.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:2334] GO TO statement
            context.setGotoTarget(editUsPhoneLinenum);
            return;
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2336] CONTINUE statement
        }
        // [T-Up#INFO][COACTUPC.cbl:2339] IF statement
        if (StringUtils.isNumeric(container.getWsMiscStorage()
                .getWsGenericEdits().getWsEditUsPhoneNumb())) {
            // [T-Up#INFO][COACTUPC.cbl:2340] CONTINUE statement
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2342] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:2343] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .getWsEditUsPhoneNumFlgs()
                    .setWsEditEditUsPhoneb(FLG_EDIT_US_PHONEB_NOT_OK);
            // [T-Up#INFO][COACTUPC.cbl:2344] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2345] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        ": Prefix code must be A 3 digit number.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:2352] GO TO statement
            context.setGotoTarget(editUsPhoneLinenum);
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:2355] IF statement
        if (container.getWsMiscStorage().getWsGenericEdits()
                .getWsEditUsPhoneNumbN() == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2356] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:2357] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .getWsEditUsPhoneNumFlgs()
                    .setWsEditEditUsPhoneb(FLG_EDIT_US_PHONEB_NOT_OK);
            // [T-Up#INFO][COACTUPC.cbl:2358] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2359] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        ": Prefix code cannot be zero");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:2366] GO TO statement
            context.setGotoTarget(editUsPhoneLinenum);
            return;
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2368] CONTINUE statement
        }
        // [T-Up#INFO][COACTUPC.cbl:2371] SET statement
        container.getWsMiscStorage().getWsGenericEdits()
                .getWsEditUsPhoneNumFlgs()
                .setWsEditEditUsPhoneb(FLG_EDIT_US_PHONEB_ISVALID);
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2374] EDIT-US-PHONE-LINENUM Paragraph</p>
     */
    void editUsPhoneLinenum(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:2375] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsGenericEdits().getWsEditUsPhoneNumc(),
                StringUtils.repeat(' ', 4)) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsGenericEdits().getWsEditUsPhoneNumc(),
                        StringUtils.repeat((char) 0x00, 4)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2377] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:2378] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .getWsEditUsPhoneNumFlgs()
                    .setWsEditEditPhonec(FLG_EDIT_US_PHONEC_BLANK);
            // [T-Up#INFO][COACTUPC.cbl:2379] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2380] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        ": Line number code must be supplied.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:2387] GO TO statement
            context.setGotoTarget(editUsPhoneExit);
            return;
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2389] CONTINUE statement
        }
        // [T-Up#INFO][COACTUPC.cbl:2392] IF statement
        if (StringUtils.isNumeric(container.getWsMiscStorage()
                .getWsGenericEdits().getWsEditUsPhoneNumc())) {
            // [T-Up#INFO][COACTUPC.cbl:2393] CONTINUE statement
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2395] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:2396] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .getWsEditUsPhoneNumFlgs()
                    .setWsEditEditPhonec(FLG_EDIT_US_PHONEC_NOT_OK);
            // [T-Up#INFO][COACTUPC.cbl:2397] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2398] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        ": Line number code must be A 4 digit number.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:2405] GO TO statement
            context.setGotoTarget(editUsPhoneExit);
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:2408] IF statement
        if (container.getWsMiscStorage().getWsGenericEdits()
                .getWsEditUsPhoneNumcN() == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2409] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:2410] SET statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .getWsEditUsPhoneNumFlgs()
                    .setWsEditEditPhonec(FLG_EDIT_US_PHONEC_NOT_OK);
            // [T-Up#INFO][COACTUPC.cbl:2411] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2412] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        ": Line number code cannot be zero");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:2419] GO TO statement
            context.setGotoTarget(editUsPhoneExit);
            return;
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2421] CONTINUE statement
        }
        // [T-Up#INFO][COACTUPC.cbl:2425] SET statement
        container.getWsMiscStorage().getWsGenericEdits()
                .getWsEditUsPhoneNumFlgs()
                .setWsEditEditPhonec(FLG_EDIT_US_PHONEC_ISVALID);
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2428] EDIT-US-PHONE-EXIT Paragraph</p>
     */
    void editUsPhoneExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:2429] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2431] 1260-EDIT-US-PHONE-NUM-EXIT Paragraph</p>
     */
    void _1260EditUsPhoneNumExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:2432] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2435] 1265-EDIT-US-SSN Paragraph</p>
     */
    void _1265EditUsSsn(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // *Format xxx-xx-xxxx
        // *Part1 :should have 3 digits
        // *Part2 :should have 2 digits and it should be from 01 to 99
        // *Part3 should have 4 digits from 0001 to 9999.
        // ******************************************************************
        // *    Edit SSN Part 1
        // ******************************************************************
        // [T-Up#INFO][COACTUPC.cbl:2443] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditVariableName("SSN: First 3 chars");
        // [T-Up#INFO][COACTUPC.cbl:2444] MOVE statement
        container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .setWsEditAlphanumOnly(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData().getAcupNewCustSsnX()
                                .getAcupNewCustSsn1());
        // [T-Up#INFO][COACTUPC.cbl:2445] MOVE statement
        container.getWsMiscStorage().getWsGenericEdits()
                .setWsEditAlphanumLength(3);
        // [T-Up#INFO][COACTUPC.cbl:2446] PERFORM statement
        controlManager.run(context, _1245EditNumReqd, _1245EditNumReqdExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:2448] MOVE statement
        container
                .getWsMiscStorage()
                .getWsGenericEdits()
                .getWsEditUsSsnFlgs()
                .setWsEditUsSsnPart1Flgs(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditAlphanumOnlyFlags());
        // *Part1 :should not be 000, 666, or between 900 and 999
        // [T-Up#INFO][COACTUPC.cbl:2452] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsGenericEdits().getWsEditUsSsnFlgs()
                .getWsEditUsSsnPart1Flgs(), FLG_EDIT_US_SSN_PART1_ISVALID) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2453] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsGenericEdits()
                    .getWsEditUsSsn()
                    .setWsEditUsSsnPart1(
                            container.getWsThisProgcommarea()
                                    .getAcupNewDetails().getAcupNewCustData()
                                    .getAcupNewCustSsnX().getAcupNewCustSsn1());
            // [T-Up#INFO][COACTUPC.cbl:2454] IF statement
            if (container.getWsMiscStorage().getWsGenericEdits()
                    .getWsEditUsSsn().getWsEditUsSsnPart1N() == INVALID_SSN_PART1_1
                    || container.getWsMiscStorage().getWsGenericEdits()
                            .getWsEditUsSsn().getWsEditUsSsnPart1N() == INVALID_SSN_PART1_2
                    || container.getWsMiscStorage().getWsGenericEdits()
                            .getWsEditUsSsn().getWsEditUsSsnPart1N() >= INVALID_SSN_PART1_3_START
                    && container.getWsMiscStorage().getWsGenericEdits()
                            .getWsEditUsSsn().getWsEditUsSsnPart1N() <= INVALID_SSN_PART1_3_END) {
                // [T-Up#INFO][COACTUPC.cbl:2455] SET statement
                container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
                // [T-Up#INFO][COACTUPC.cbl:2456] SET statement
                container.getWsMiscStorage().getWsGenericEdits()
                        .getWsEditUsSsnFlgs()
                        .setWsEditUsSsnPart1Flgs(FLG_EDIT_US_SSN_PART1_NOT_OK);
                // [T-Up#INFO][COACTUPC.cbl:2458] IF statement
                if (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                    // [T-Up#INFO][COACTUPC.cbl:2459] STRING statement
                    tempStringBuilder1 = new StringBuilder();
                    tempStringBuilder2 = new StringBuilder(container
                            .getWsMiscStorage().getWsReturnMsg());
                    tempStringBuilder1.append(
                            container.getWsMiscStorage().getWsGenericEdits()
                                    .getWsEditVariableName().trim()).append(
                            ": should not be 000, 666, or between 900 and 999");
                    if (tempStringBuilder1.length() <= 75) {
                        tempStringBuilder2.replace(0,
                                tempStringBuilder1.length(),
                                tempStringBuilder1.toString());
                        container.getWsMiscStorage().setWsReturnMsg(
                                tempStringBuilder2.toString());
                    }
                } else {
                    // [T-Up#INFO][COACTUPC.cbl:2466] CONTINUE statement
                }
            }
            // ******************************************************************
            // *    Edit SSN Part 2
            // ******************************************************************
            // [T-Up#INFO][COACTUPC.cbl:2473] MOVE statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .setWsEditVariableName("SSN 4th & 5th chars");
            // [T-Up#INFO][COACTUPC.cbl:2474] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsGenericEdits()
                    .setWsEditAlphanumOnly(
                            container.getWsThisProgcommarea()
                                    .getAcupNewDetails().getAcupNewCustData()
                                    .getAcupNewCustSsnX().getAcupNewCustSsn2());
            // [T-Up#INFO][COACTUPC.cbl:2475] MOVE statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .setWsEditAlphanumLength(2);
            // [T-Up#INFO][COACTUPC.cbl:2476] PERFORM statement
            controlManager.run(context, _1245EditNumReqd, _1245EditNumReqdExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COACTUPC.cbl:2478] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsGenericEdits()
                    .getWsEditUsSsnFlgs()
                    .setWsEditUsSsnPart2Flgs(
                            container.getWsMiscStorage().getWsGenericEdits()
                                    .getWsEditAlphanumOnlyFlags());
            // ******************************************************************
            // *    Edit SSN Part 3
            // ******************************************************************
            // [T-Up#INFO][COACTUPC.cbl:2485] MOVE statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .setWsEditVariableName("SSN Last 4 chars");
            // [T-Up#INFO][COACTUPC.cbl:2486] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsGenericEdits()
                    .setWsEditAlphanumOnly(
                            container.getWsThisProgcommarea()
                                    .getAcupNewDetails().getAcupNewCustData()
                                    .getAcupNewCustSsnX().getAcupNewCustSsn3());
            // [T-Up#INFO][COACTUPC.cbl:2487] MOVE statement
            container.getWsMiscStorage().getWsGenericEdits()
                    .setWsEditAlphanumLength(4);
            // [T-Up#INFO][COACTUPC.cbl:2488] PERFORM statement
            controlManager.run(context, _1245EditNumReqd, _1245EditNumReqdExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COACTUPC.cbl:2490] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsGenericEdits()
                    .getWsEditUsSsnFlgs()
                    .setWsEditUsSsnPart3Flgs(
                            container.getWsMiscStorage().getWsGenericEdits()
                                    .getWsEditAlphanumOnlyFlags());
        }
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2493] 1265-EDIT-US-SSN-EXIT Paragraph</p>
     */
    void _1265EditUsSsnExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:2494] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2497] 1270-EDIT-US-STATE-CD Paragraph</p>
     */
    void _1270EditUsStateCd(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:2498] MOVE statement
        container.setUsStateCodeToEdit(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData()
                .getAcupNewCustAddrStateCd());
        // [T-Up#INFO][COACTUPC.cbl:2499] IF statement
        if (CobStringUtils.compare(container.getUsStateCodeToEdit(),
                VALID_US_STATE_CODE_1) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_2) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_3) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_4) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_5) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_6) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_7) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_8) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_9) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_10) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_11) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_12) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_13) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_14) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_15) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_16) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_17) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_18) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_19) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_20) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_21) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_22) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_23) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_24) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_25) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_26) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_27) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_28) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_29) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_30) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_31) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_32) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_33) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_34) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_35) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_36) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_37) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_38) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_39) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_40) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_41) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_42) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_43) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_44) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_45) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_46) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_47) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_48) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_49) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_50) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_51) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_52) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_53) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_54) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_55) == 0
                || CobStringUtils.compare(container.getUsStateCodeToEdit(),
                        VALID_US_STATE_CODE_56) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2500] CONTINUE statement
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2502] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:2503] SET statement
            container.getWsMiscStorage().getWsNonKeyFlags()
                    .getWsEditAddressFlags()
                    .setWsEditStateFlgs(FLG_STATE_NOT_OK);
            // [T-Up#INFO][COACTUPC.cbl:2504] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2505] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        ": is not a valid state code");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:2512] GO TO statement
            context.setGotoTarget(_1270EditUsStateCdExit);
            return;
        }
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2515] 1270-EDIT-US-STATE-CD-EXIT Paragraph</p>
     */
    void _1270EditUsStateCdExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:2516] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2518] 1275-EDIT-FICO-SCORE Paragraph</p>
     */
    void _1275EditFicoScore(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:2519] IF statement
        if (container.getWsThisProgcommarea().getAcupNewDetails()
                .getAcupNewCustData().getAcupNewCustFicoScore() >= FICO_RANGE_IS_VALID_START
                && container.getWsThisProgcommarea().getAcupNewDetails()
                        .getAcupNewCustData().getAcupNewCustFicoScore() <= FICO_RANGE_IS_VALID_END) {
            // [T-Up#INFO][COACTUPC.cbl:2520] CONTINUE statement
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2522] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:2523] SET statement
            container.getWsMiscStorage().getWsNonKeyFlags()
                    .setWsEditFicoScoreFlgs(FLG_FICO_SCORE_NOT_OK);
            // [T-Up#INFO][COACTUPC.cbl:2524] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2525] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        ": should be between 300 and 850");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:2532] GO TO statement
            context.setGotoTarget(_1275EditFicoScoreExit);
            return;
        }
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2535] 1275-EDIT-FICO-SCORE-EXIT Paragraph</p>
     */
    void _1275EditFicoScoreExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:2536] EXIT statement
    }

    // *A crude zip code edit based on data from USPS web site

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2540] 1280-EDIT-US-STATE-ZIP-CD Paragraph</p>
     */
    void _1280EditUsStateZipCd(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:2541] STRING statement
        tempStringBuilder1 = new StringBuilder();
        tempStringBuilder2 = new StringBuilder(container
                .getUsStateZipcodeToEdit().getUsStateAndFirstZip2());
        tempStringBuilder1.append(
                container.getWsThisProgcommarea().getAcupNewDetails()
                        .getAcupNewCustData().getAcupNewCustAddrStateCd())
                .append(container.getWsThisProgcommarea().getAcupNewDetails()
                        .getAcupNewCustData().getAcupNewCustAddrZip()
                        .substring(0, 2));
        if (tempStringBuilder1.length() <= 4) {
            tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                    tempStringBuilder1.toString());
            container.getUsStateZipcodeToEdit().setUsStateAndFirstZip2(
                    tempStringBuilder2.toString());
        }
        // [T-Up#INFO][COACTUPC.cbl:2546] IF statement
        if (CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                .getUsStateAndFirstZip2(), VALID_US_STATE_ZIP_CD2_COMBO_1) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_2) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_3) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_4) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_5) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_6) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_7) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_8) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_9) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_10) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_11) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_12) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_13) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_14) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_15) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_16) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_17) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_18) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_19) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_20) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_21) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_22) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_23) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_24) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_25) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_26) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_27) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_28) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_29) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_30) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_31) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_32) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_33) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_34) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_35) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_36) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_37) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_38) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_39) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_40) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_41) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_42) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_43) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_44) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_45) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_46) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_47) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_48) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_49) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_50) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_51) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_52) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_53) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_54) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_55) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_56) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_57) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_58) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_59) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_60) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_61) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_62) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_63) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_64) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_65) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_66) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_67) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_68) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_69) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_70) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_71) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_72) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_73) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_74) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_75) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_76) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_77) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_78) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_79) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_80) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_81) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_82) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_83) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_84) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_85) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_86) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_87) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_88) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_89) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_90) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_91) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_92) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_93) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_94) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_95) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_96) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_97) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_98) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_99) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_100) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_101) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_102) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_103) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_104) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_105) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_106) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_107) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_108) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_109) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_110) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_111) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_112) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_113) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_114) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_115) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_116) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_117) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_118) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_119) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_120) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_121) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_122) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_123) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_124) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_125) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_126) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_127) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_128) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_129) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_130) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_131) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_132) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_133) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_134) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_135) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_136) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_137) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_138) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_139) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_140) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_141) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_142) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_143) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_144) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_145) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_146) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_147) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_148) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_149) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_150) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_151) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_152) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_153) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_154) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_155) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_156) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_157) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_158) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_159) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_160) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_161) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_162) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_163) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_164) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_165) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_166) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_167) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_168) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_169) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_170) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_171) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_172) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_173) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_174) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_175) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_176) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_177) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_178) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_179) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_180) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_181) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_182) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_183) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_184) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_185) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_186) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_187) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_188) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_189) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_190) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_191) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_192) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_193) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_194) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_195) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_196) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_197) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_198) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_199) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_200) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_201) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_202) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_203) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_204) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_205) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_206) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_207) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_208) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_209) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_210) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_211) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_212) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_213) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_214) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_215) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_216) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_217) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_218) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_219) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_220) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_221) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_222) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_223) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_224) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_225) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_226) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_227) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_228) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_229) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_230) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_231) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_232) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_233) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_234) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_235) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_236) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_237) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_238) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_239) == 0
                || CobStringUtils.compare(container.getUsStateZipcodeToEdit()
                        .getUsStateAndFirstZip2(),
                        VALID_US_STATE_ZIP_CD2_COMBO_240) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2547] CONTINUE statement
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2549] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:2550] SET statement
            container.getWsMiscStorage().getWsNonKeyFlags()
                    .getWsEditAddressFlags()
                    .setWsEditStateFlgs(FLG_STATE_NOT_OK);
            // [T-Up#INFO][COACTUPC.cbl:2551] SET statement
            container.getWsMiscStorage().getWsNonKeyFlags()
                    .getWsEditAddressFlags()
                    .setWsEditZipcodeFlgs(FLG_ZIPCODE_NOT_OK);
            // [T-Up#INFO][COACTUPC.cbl:2552] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2553] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append("Invalid zip code for state");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][COACTUPC.cbl:2559] GO TO statement
            context.setGotoTarget(_1280EditUsStateZipCdExit);
            return;
        }
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2562] 1280-EDIT-US-STATE-ZIP-CD-EXIT Paragraph</p>
     */
    void _1280EditUsStateZipCdExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:2563] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2566] 2000-DECIDE-ACTION Paragraph</p>
     */
    void _2000DecideAction(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:2567] EVALUATE statement
        if ((CobStringUtils.compare(container.getWsThisProgcommarea()
                .getAcctUpdateScreenData().getAcupChangeAction(),
                ACUP_DETAILS_NOT_FETCHED_1) == 0 || CobStringUtils.compare(
                container.getWsThisProgcommarea().getAcctUpdateScreenData()
                        .getAcupChangeAction(), ACUP_DETAILS_NOT_FETCHED_2) == 0)
                || (CobStringUtils.compare(container.getCcWorkAreas()
                        .getCcWorkArea().getCcardAid(), CCARD_AID_PFK12) == 0)) {
            // ******************************************************************
            // *       NO DETAILS SHOWN.
            // *       SO GET THEM AND SETUP DETAIL EDIT SCREEN
            // ******************************************************************
            // ******************************************************************
            // *       CHANGES MADE. BUT USER CANCELS
            // ******************************************************************
            // [T-Up#INFO][COACTUPC.cbl:2577] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsEditAcctFlag(), FLG_ACCTFILTER_ISVALID) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2578] SET statement
                container.getWsMiscStorage().setWsReturnMsg(WS_RETURN_MSG_OFF);
                // [T-Up#INFO][COACTUPC.cbl:2579] PERFORM statement
                controlManager.run(context, _9000ReadAcct, _9000ReadAcctExit);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][COACTUPC.cbl:2581] IF statement
                if (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsFileReadFlags().getWsCustMasterReadFlag(),
                        FOUND_CUST_IN_MASTER) == 0) {
                    // [T-Up#INFO][COACTUPC.cbl:2582] SET statement
                    container.getWsThisProgcommarea().getAcctUpdateScreenData()
                            .setAcupChangeAction(ACUP_SHOW_DETAILS);
                }
            }
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getAcctUpdateScreenData().getAcupChangeAction(),
                ACUP_SHOW_DETAILS) == 0) {
            // ******************************************************************
            // *       DETAILS SHOWN
            // *       CHECK CHANGES AND ASK CONFIRMATION IF GOOD
            // ******************************************************************
            // [T-Up#INFO][COACTUPC.cbl:2590] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsInputFlag(), INPUT_ERROR) == 0
                    || CobStringUtils.compare(container.getWsMiscStorage()
                            .getWsReturnMsg(), NO_CHANGES_DETECTED) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2592] CONTINUE statement
            } else {
                // [T-Up#INFO][COACTUPC.cbl:2594] SET statement
                container.getWsThisProgcommarea().getAcctUpdateScreenData()
                        .setAcupChangeAction(ACUP_CHANGES_OK_NOT_CONFIRMED);
            }
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getAcctUpdateScreenData().getAcupChangeAction(),
                ACUP_CHANGES_NOT_OK) == 0) {
            // ******************************************************************
            // *       DETAILS SHOWN
            // *       BUT INPUT EDIT ERRORS FOUND
            // ******************************************************************
            // [T-Up#INFO][COACTUPC.cbl:2601] CONTINUE statement
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getAcctUpdateScreenData().getAcupChangeAction(),
                ACUP_CHANGES_OK_NOT_CONFIRMED) == 0
                && CobStringUtils.compare(container.getCcWorkAreas()
                        .getCcWorkArea().getCcardAid(), CCARD_AID_PFK05) == 0) {
            // ******************************************************************
            // *       DETAILS EDITED , FOUND OK, CONFIRM SAVE REQUESTED
            // *       CONFIRMATION GIVEN.SO SAVE THE CHANGES
            // ******************************************************************
            // [T-Up#INFO][COACTUPC.cbl:2608] PERFORM statement
            controlManager.run(context, _9600WriteProcessing,
                    _9600WriteProcessingExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COACTUPC.cbl:2610] EVALUATE statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), COULD_NOT_LOCK_ACCT_FOR_UPDATE) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2612] SET statement
                container.getWsThisProgcommarea().getAcctUpdateScreenData()
                        .setAcupChangeAction(ACUP_CHANGES_OKAYED_LOCK_ERROR);
            } else if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), LOCKED_BUT_UPDATE_FAILED) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2614] SET statement
                container.getWsThisProgcommarea().getAcctUpdateScreenData()
                        .setAcupChangeAction(ACUP_CHANGES_OKAYED_BUT_FAILED);
            } else if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), DATA_WAS_CHANGED_BEFORE_UPDATE) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2616] SET statement
                container.getWsThisProgcommarea().getAcctUpdateScreenData()
                        .setAcupChangeAction(ACUP_SHOW_DETAILS);
            } else {
                // [T-Up#INFO][COACTUPC.cbl:2618] SET statement
                container.getWsThisProgcommarea().getAcctUpdateScreenData()
                        .setAcupChangeAction(ACUP_CHANGES_OKAYED_AND_DONE);
            }
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getAcctUpdateScreenData().getAcupChangeAction(),
                ACUP_CHANGES_OK_NOT_CONFIRMED) == 0) {
            // ******************************************************************
            // *       DETAILS EDITED , FOUND OK, CONFIRM SAVE REQUESTED
            // *       CONFIRMATION NOT GIVEN. SO SHOW DETAILS AGAIN
            // ******************************************************************
            // [T-Up#INFO][COACTUPC.cbl:2625] CONTINUE statement
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getAcctUpdateScreenData().getAcupChangeAction(),
                ACUP_CHANGES_OKAYED_AND_DONE) == 0) {
            // ******************************************************************
            // *       SHOW CONFIRMATION. GO BACK TO SQUARE 1
            // ******************************************************************
            // [T-Up#INFO][COACTUPC.cbl:2630] SET statement
            container.getWsThisProgcommarea().getAcctUpdateScreenData()
                    .setAcupChangeAction(ACUP_SHOW_DETAILS);
            // [T-Up#INFO][COACTUPC.cbl:2631] IF statement
            if (CobStringUtils.compare(container.getCarddemoCommarea()
                    .getCdemoGeneralInfo().getCdemoFromTranid(),
                    StringUtils.repeat((char) 0x00, 4)) == 0
                    || CobStringUtils.compare(container.getCarddemoCommarea()
                            .getCdemoGeneralInfo().getCdemoFromTranid(),
                            StringUtils.repeat(' ', 4)) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2633] MOVE statement
                container.getCarddemoCommarea().getCdemoAccountInfo()
                        .setCdemoAcctId((long) 0);
                container.getCarddemoCommarea().getCdemoCardInfo()
                        .setCdemoCardNum((long) 0);
                // [T-Up#INFO][COACTUPC.cbl:2635] MOVE statement
                container.getCarddemoCommarea().getCdemoAccountInfo()
                        .setCdemoAcctStatus(StringUtils.repeat((char) 0x00, 1));
            }
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2638] MOVE statement
            container.getAbendData().setAbendCulprit(
                    container.getWsLiterals().getLitThispgm());
            // [T-Up#INFO][COACTUPC.cbl:2639] MOVE statement
            container.getAbendData().setAbendCode("0001");
            // [T-Up#INFO][COACTUPC.cbl:2640] MOVE statement
            container.getAbendData()
                    .setAbendReason(StringUtils.repeat(' ', 50));
            // [T-Up#INFO][COACTUPC.cbl:2641] MOVE statement
            container.getAbendData().setAbendMsg("UNEXPECTED DATA SCENARIO");
            // [T-Up#INFO][COACTUPC.cbl:2643] PERFORM statement
            controlManager.run(context, abendRoutine, abendRoutineExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2647] 2000-DECIDE-ACTION-EXIT Paragraph</p>
     */
    void _2000DecideActionExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:2648] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2653] 3000-SEND-MAP Paragraph</p>
     */
    void _3000SendMap(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:2654] PERFORM statement
        controlManager.run(context, _3100ScreenInit, _3100ScreenInitExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:2656] PERFORM statement
        controlManager.run(context, _3200SetupScreenVars,
                _3200SetupScreenVarsExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:2658] PERFORM statement
        controlManager.run(context, _3250SetupInfomsg, _3250SetupInfomsgExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:2660] PERFORM statement
        controlManager.run(context, _3300SetupScreenAttrs,
                _3300SetupScreenAttrsExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:2662] PERFORM statement
        controlManager.run(context, _3390SetupInfomsgAttrs,
                _3390SetupInfomsgAttrsExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:2664] PERFORM statement
        controlManager.run(context, _3400SendScreen, _3400SendScreenExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2668] 3000-SEND-MAP-EXIT Paragraph</p>
     */
    void _3000SendMapExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:2669] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2672] 3100-SCREEN-INIT Paragraph</p>
     */
    void _3100ScreenInit(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:2673] MOVE statement
        container.setCactupao(Cactupai.createDefaultValueInstance().get());
        // [T-Up#INFO][COACTUPC.cbl:2675] MOVE statement
        container.getWsDateTime().getWsCurdateData()
                .set(IntrinsicFunction.functionCurrentDate());
        // [T-Up#INFO][COACTUPC.cbl:2677] MOVE statement
        container.setTitle01o(container.getCcdaScreenTitle().getCcdaTitle01());
        // [T-Up#INFO][COACTUPC.cbl:2678] MOVE statement
        container.setTitle02o(container.getCcdaScreenTitle().getCcdaTitle02());
        // [T-Up#INFO][COACTUPC.cbl:2679] MOVE statement
        container.setTrnnameo(container.getWsLiterals().getLitThistranid());
        // [T-Up#INFO][COACTUPC.cbl:2680] MOVE statement
        container.setPgmnameo(container.getWsLiterals().getLitThispgm());
        // [T-Up#INFO][COACTUPC.cbl:2682] MOVE statement
        container.getWsDateTime().getWsCurdateData()
                .set(IntrinsicFunction.functionCurrentDate());
        // [T-Up#INFO][COACTUPC.cbl:2684] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateMonth());
        // [T-Up#INFO][COACTUPC.cbl:2685] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateDd(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateDay());
        // [T-Up#INFO][COACTUPC.cbl:2686] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateYy(
                        Integer.parseInt(CobStream
                                .convZonedIntToString(
                                        container.getWsDateTime()
                                                .getWsCurdateData()
                                                .getWsCurdate()
                                                .getWsCurdateYear(), 4)
                                .substring(2, 4).trim()));
        // [T-Up#INFO][COACTUPC.cbl:2688] MOVE statement
        container.setCurdateo(container.getWsDateTime().getWsCurdateMmDdYy()
                .get());
        // [T-Up#INFO][COACTUPC.cbl:2690] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeHh(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeHours());
        // [T-Up#INFO][COACTUPC.cbl:2691] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeMinute());
        // [T-Up#INFO][COACTUPC.cbl:2692] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeSs(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeSecond());
        // [T-Up#INFO][COACTUPC.cbl:2694] MOVE statement
        container.setCurtimeo(container.getWsDateTime().getWsCurtimeHhMmSs()
                .get());
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2698] 3100-SCREEN-INIT-EXIT Paragraph</p>
     */
    void _3100ScreenInitExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:2699] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2702] 3200-SETUP-SCREEN-VARS Paragraph</p>
     */
    void _3200SetupScreenVars(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // *    INITIALIZE SEARCH CRITERIA
        // [T-Up#INFO][COACTUPC.cbl:2704] IF statement
        if (container.getCarddemoCommarea().getCdemoGeneralInfo()
                .getCdemoPgmContext() == CDEMO_PGM_ENTER) {
            // [T-Up#INFO][COACTUPC.cbl:2705] CONTINUE statement
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2707] IF statement
            if (container.getCcWorkAreas().getCcWorkArea().getCcAcctIdN() == 0
                    && CobStringUtils.compare(container.getWsMiscStorage()
                            .getWsEditAcctFlag(), FLG_ACCTFILTER_ISVALID) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2709] MOVE statement
                container.setAcctsido(StringUtils.repeat((char) 0x00, 11));
            } else {
                // [T-Up#INFO][COACTUPC.cbl:2711] MOVE statement
                container.setAcctsido(container.getCcWorkAreas()
                        .getCcWorkArea().getCcAcctId());
            }
            // [T-Up#INFO][COACTUPC.cbl:2714] EVALUATE statement
            if ((CobStringUtils.compare(container.getWsThisProgcommarea()
                    .getAcctUpdateScreenData().getAcupChangeAction(),
                    ACUP_DETAILS_NOT_FETCHED_1) == 0 || CobStringUtils.compare(
                    container.getWsThisProgcommarea().getAcctUpdateScreenData()
                            .getAcupChangeAction(), ACUP_DETAILS_NOT_FETCHED_2) == 0)
                    || (container.getCcWorkAreas().getCcWorkArea()
                            .getCcAcctIdN() == 0)) {
                // [T-Up#INFO][COACTUPC.cbl:2717] PERFORM statement
                controlManager.run(context, _3201ShowInitialValues,
                        _3201ShowInitialValuesExit);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                    .getAcctUpdateScreenData().getAcupChangeAction(),
                    ACUP_SHOW_DETAILS) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2720] PERFORM statement
                controlManager.run(context, _3202ShowOriginalValues,
                        _3202ShowOriginalValuesExit);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                    .getAcctUpdateScreenData().getAcupChangeAction(),
                    ACUP_CHANGES_MADE_1) == 0
                    || CobStringUtils.compare(container.getWsThisProgcommarea()
                            .getAcctUpdateScreenData().getAcupChangeAction(),
                            ACUP_CHANGES_MADE_2) == 0
                    || CobStringUtils.compare(container.getWsThisProgcommarea()
                            .getAcctUpdateScreenData().getAcupChangeAction(),
                            ACUP_CHANGES_MADE_3) == 0
                    || CobStringUtils.compare(container.getWsThisProgcommarea()
                            .getAcctUpdateScreenData().getAcupChangeAction(),
                            ACUP_CHANGES_MADE_4) == 0
                    || CobStringUtils.compare(container.getWsThisProgcommarea()
                            .getAcctUpdateScreenData().getAcupChangeAction(),
                            ACUP_CHANGES_MADE_5) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:2723] PERFORM statement
                controlManager.run(context, _3203ShowUpdatedValues,
                        _3203ShowUpdatedValuesExit);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else {
                // [T-Up#INFO][COACTUPC.cbl:2726] PERFORM statement
                controlManager.run(context, _3202ShowOriginalValues,
                        _3202ShowOriginalValuesExit);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
        }
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2731] 3200-SETUP-SCREEN-VARS-EXIT Paragraph</p>
     */
    void _3200SetupScreenVarsExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:2732] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2735] 3201-SHOW-INITIAL-VALUES Paragraph</p>
     */
    void _3201ShowInitialValues(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:2736] MOVE statement
        container.setAcsttuso(StringUtils.repeat((char) 0x00, 1));
        container.setAcrdlimo(StringUtils.repeat((char) 0x00, 15));
        container.setAcurbalo(StringUtils.repeat((char) 0x00, 15));
        container.setAcshlimo(StringUtils.repeat((char) 0x00, 15));
        container.setAcrcycro(StringUtils.repeat((char) 0x00, 15));
        container.setAcrcydbo(StringUtils.repeat((char) 0x00, 15));
        container.setOpnyearo(StringUtils.repeat((char) 0x00, 4));
        container.setOpnmono(StringUtils.repeat((char) 0x00, 2));
        container.setOpndayo(StringUtils.repeat((char) 0x00, 2));
        container.setExpyearo(StringUtils.repeat((char) 0x00, 4));
        container.setExpmono(StringUtils.repeat((char) 0x00, 2));
        container.setExpdayo(StringUtils.repeat((char) 0x00, 2));
        container.setRisyearo(StringUtils.repeat((char) 0x00, 4));
        container.setRismono(StringUtils.repeat((char) 0x00, 2));
        container.setRisdayo(StringUtils.repeat((char) 0x00, 2));
        container.setAaddgrpo(StringUtils.repeat((char) 0x00, 10));
        container.setAcstnumo(StringUtils.repeat((char) 0x00, 9));
        container.setActssn1o(StringUtils.repeat((char) 0x00, 3));
        container.setActssn2o(StringUtils.repeat((char) 0x00, 2));
        container.setActssn3o(StringUtils.repeat((char) 0x00, 4));
        container.setAcstfcoo(StringUtils.repeat((char) 0x00, 3));
        container.setDobyearo(StringUtils.repeat((char) 0x00, 4));
        container.setDobmono(StringUtils.repeat((char) 0x00, 2));
        container.setDobdayo(StringUtils.repeat((char) 0x00, 2));
        container.setAcsfnamo(StringUtils.repeat((char) 0x00, 25));
        container.setAcsmnamo(StringUtils.repeat((char) 0x00, 25));
        container.setAcslnamo(StringUtils.repeat((char) 0x00, 25));
        container.setAcsadl1o(StringUtils.repeat((char) 0x00, 50));
        container.setAcsadl2o(StringUtils.repeat((char) 0x00, 50));
        container.setAcscityo(StringUtils.repeat((char) 0x00, 50));
        container.setAcsstteo(StringUtils.repeat((char) 0x00, 2));
        container.setAcszipco(StringUtils.repeat((char) 0x00, 5));
        container.setAcsctryo(StringUtils.repeat((char) 0x00, 3));
        container.setAcsph1ao(StringUtils.repeat((char) 0x00, 3));
        container.setAcsph1bo(StringUtils.repeat((char) 0x00, 3));
        container.setAcsph1co(StringUtils.repeat((char) 0x00, 4));
        container.setAcsph2ao(StringUtils.repeat((char) 0x00, 3));
        container.setAcsph2bo(StringUtils.repeat((char) 0x00, 3));
        container.setAcsph2co(StringUtils.repeat((char) 0x00, 4));
        container.setAcsgovto(StringUtils.repeat((char) 0x00, 20));
        container.setAcseftco(StringUtils.repeat((char) 0x00, 10));
        container.setAcspflgo(StringUtils.repeat((char) 0x00, 1));
    }

    // *Account Limits
    // *Account Dates
    // *Customer data
    // *Customer address and contact info
    // *Customer other good stuff

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2787] 3201-SHOW-INITIAL-VALUES-EXIT Paragraph</p>
     */
    void _3201ShowInitialValuesExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:2788] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2791] 3202-SHOW-ORIGINAL-VALUES Paragraph</p>
     */
    void _3202ShowOriginalValues(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:2793] MOVE statement
        container.getWsMiscStorage().setWsNonKeyFlags(
                CoactupcWsMiscStorage.CoactupcWsNonKeyFlags
                        .createDefaultValueInstance());
        // [T-Up#INFO][COACTUPC.cbl:2795] SET statement
        container.getWsMiscStorage().setWsInfoMsg(PROMPT_FOR_CHANGES);
        // [T-Up#INFO][COACTUPC.cbl:2797] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsFileReadFlags().getWsAccountMasterReadFlag(),
                FOUND_ACCT_IN_MASTER) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsFileReadFlags().getWsCustMasterReadFlag(),
                        FOUND_CUST_IN_MASTER) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2799] MOVE statement
            container.setAcsttuso(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldAcctData()
                    .getAcupOldActiveStatus());
            // [T-Up#INFO][COACTUPC.cbl:2801] MOVE statement
            container
                    .getWsMiscStorage()
                    .getCicsOutputEditVars()
                    .setWsEditCurrency92F(
                            container.getWsThisProgcommarea()
                                    .getAcupOldDetails().getAcupOldAcctData()
                                    .getAcupOldCurrBalN());
            // [T-Up#INFO][COACTUPC.cbl:2802] MOVE statement
            container.setAcurbalo(container.getWsMiscStorage()
                    .getCicsOutputEditVars().getWsEditCurrency92F());
            // [T-Up#INFO][COACTUPC.cbl:2804] MOVE statement
            container
                    .getWsMiscStorage()
                    .getCicsOutputEditVars()
                    .setWsEditCurrency92F(
                            container.getWsThisProgcommarea()
                                    .getAcupOldDetails().getAcupOldAcctData()
                                    .getAcupOldCreditLimitN());
            // [T-Up#INFO][COACTUPC.cbl:2805] MOVE statement
            container.setAcrdlimo(container.getWsMiscStorage()
                    .getCicsOutputEditVars().getWsEditCurrency92F());
            // [T-Up#INFO][COACTUPC.cbl:2807] MOVE statement
            container
                    .getWsMiscStorage()
                    .getCicsOutputEditVars()
                    .setWsEditCurrency92F(
                            container.getWsThisProgcommarea()
                                    .getAcupOldDetails().getAcupOldAcctData()
                                    .getAcupOldCashCreditLimitN());
            // [T-Up#INFO][COACTUPC.cbl:2809] MOVE statement
            container.setAcshlimo(container.getWsMiscStorage()
                    .getCicsOutputEditVars().getWsEditCurrency92F());
            // [T-Up#INFO][COACTUPC.cbl:2811] MOVE statement
            container
                    .getWsMiscStorage()
                    .getCicsOutputEditVars()
                    .setWsEditCurrency92F(
                            container.getWsThisProgcommarea()
                                    .getAcupOldDetails().getAcupOldAcctData()
                                    .getAcupOldCurrCycCreditN());
            // [T-Up#INFO][COACTUPC.cbl:2812] MOVE statement
            container.setAcrcycro(container.getWsMiscStorage()
                    .getCicsOutputEditVars().getWsEditCurrency92F());
            // [T-Up#INFO][COACTUPC.cbl:2814] MOVE statement
            container
                    .getWsMiscStorage()
                    .getCicsOutputEditVars()
                    .setWsEditCurrency92F(
                            container.getWsThisProgcommarea()
                                    .getAcupOldDetails().getAcupOldAcctData()
                                    .getAcupOldCurrCycDebitN());
            // [T-Up#INFO][COACTUPC.cbl:2815] MOVE statement
            container.setAcrcydbo(container.getWsMiscStorage()
                    .getCicsOutputEditVars().getWsEditCurrency92F());
            // [T-Up#INFO][COACTUPC.cbl:2817] MOVE statement
            container.setOpnyearo(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldAcctData()
                    .getAcupOldOpenYear());
            // [T-Up#INFO][COACTUPC.cbl:2818] MOVE statement
            container.setOpnmono(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldAcctData()
                    .getAcupOldOpenMon());
            // [T-Up#INFO][COACTUPC.cbl:2819] MOVE statement
            container.setOpndayo(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldAcctData()
                    .getAcupOldOpenDay());
            // [T-Up#INFO][COACTUPC.cbl:2821] MOVE statement
            container.setExpyearo(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldAcctData()
                    .getAcupOldExpYear());
            // [T-Up#INFO][COACTUPC.cbl:2822] MOVE statement
            container.setExpmono(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldAcctData()
                    .getAcupOldExpMon());
            // [T-Up#INFO][COACTUPC.cbl:2823] MOVE statement
            container.setExpdayo(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldAcctData()
                    .getAcupOldExpDay());
            // [T-Up#INFO][COACTUPC.cbl:2825] MOVE statement
            container.setRisyearo(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldAcctData()
                    .getAcupOldReissueYear());
            // [T-Up#INFO][COACTUPC.cbl:2826] MOVE statement
            container.setRismono(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldAcctData()
                    .getAcupOldReissueMon());
            // [T-Up#INFO][COACTUPC.cbl:2827] MOVE statement
            container.setRisdayo(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldAcctData()
                    .getAcupOldReissueDay());
            // [T-Up#INFO][COACTUPC.cbl:2828] MOVE statement
            container.setAaddgrpo(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldAcctData()
                    .getAcupOldGroupId());
        }
        // [T-Up#INFO][COACTUPC.cbl:2831] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsFileReadFlags().getWsCustMasterReadFlag(),
                FOUND_CUST_IN_MASTER) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2832] MOVE statement
            container.setAcstnumo(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustIdX());
            // [T-Up#INFO][COACTUPC.cbl:2833] MOVE statement
            container.setActssn1o(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustSsnX().substring(0, 3));
            // [T-Up#INFO][COACTUPC.cbl:2834] MOVE statement
            container.setActssn2o(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustSsnX().substring(3, 5));
            // [T-Up#INFO][COACTUPC.cbl:2835] MOVE statement
            container.setActssn3o(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustSsnX().substring(5, 9));
            // [T-Up#INFO][COACTUPC.cbl:2836] MOVE statement
            container.setAcstfcoo(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustFicoScoreX());
            // [T-Up#INFO][COACTUPC.cbl:2837] MOVE statement
            container.setDobyearo(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustDobYear());
            // [T-Up#INFO][COACTUPC.cbl:2838] MOVE statement
            container.setDobmono(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustDobMon());
            // [T-Up#INFO][COACTUPC.cbl:2839] MOVE statement
            container.setDobdayo(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustDobDay());
            // [T-Up#INFO][COACTUPC.cbl:2840] MOVE statement
            container.setAcsfnamo(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustFirstName());
            // [T-Up#INFO][COACTUPC.cbl:2841] MOVE statement
            container.setAcsmnamo(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustMiddleName());
            // [T-Up#INFO][COACTUPC.cbl:2842] MOVE statement
            container.setAcslnamo(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustLastName());
            // [T-Up#INFO][COACTUPC.cbl:2843] MOVE statement
            container.setAcsadl1o(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustAddrLine1());
            // [T-Up#INFO][COACTUPC.cbl:2844] MOVE statement
            container.setAcsadl2o(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustAddrLine2());
            // [T-Up#INFO][COACTUPC.cbl:2845] MOVE statement
            container.setAcscityo(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustAddrLine3());
            // [T-Up#INFO][COACTUPC.cbl:2846] MOVE statement
            container.setAcsstteo(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustAddrStateCd());
            // [T-Up#INFO][COACTUPC.cbl:2847] MOVE statement
            container.setAcszipco(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustAddrZip());
            // [T-Up#INFO][COACTUPC.cbl:2848] MOVE statement
            container.setAcsctryo(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustAddrCountryCd());
            // [T-Up#INFO][COACTUPC.cbl:2850] MOVE statement
            container.setAcsph1ao(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustPhoneNum1().substring(1, 4));
            // [T-Up#INFO][COACTUPC.cbl:2852] MOVE statement
            container.setAcsph1bo(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustPhoneNum1().substring(5, 8));
            // [T-Up#INFO][COACTUPC.cbl:2854] MOVE statement
            container.setAcsph1co(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustPhoneNum1().substring(9, 13));
            // [T-Up#INFO][COACTUPC.cbl:2856] MOVE statement
            container.setAcsph2ao(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustPhoneNum2().substring(1, 4));
            // [T-Up#INFO][COACTUPC.cbl:2858] MOVE statement
            container.setAcsph2bo(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustPhoneNum2().substring(5, 8));
            // [T-Up#INFO][COACTUPC.cbl:2860] MOVE statement
            container.setAcsph2co(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustPhoneNum2().substring(9, 13));
            // [T-Up#INFO][COACTUPC.cbl:2862] MOVE statement
            container.setAcsgovto(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustGovtIssuedId());
            // [T-Up#INFO][COACTUPC.cbl:2864] MOVE statement
            container.setAcseftco(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustEftAccountId());
            // [T-Up#INFO][COACTUPC.cbl:2866] MOVE statement
            container.setAcspflgo(container.getWsThisProgcommarea()
                    .getAcupOldDetails().getAcupOldCustData()
                    .getAcupOldCustPriHolderInd());
        }
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2871] 3202-SHOW-ORIGINAL-VALUES-EXIT Paragraph</p>
     */
    void _3202ShowOriginalValuesExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:2872] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2874] 3203-SHOW-UPDATED-VALUES Paragraph</p>
     */
    void _3203ShowUpdatedValues(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:2876] MOVE statement
        container.setAcsttuso(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewAcctData()
                .getAcupNewActiveStatus());
        // [T-Up#INFO][COACTUPC.cbl:2878] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditCreditLimit(),
                FLG_CRED_LIMIT_ISVALID) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2879] MOVE statement
            container
                    .getWsMiscStorage()
                    .getCicsOutputEditVars()
                    .setWsEditCurrency92F(
                            container.getWsThisProgcommarea()
                                    .getAcupNewDetails().getAcupNewAcctData()
                                    .getAcupNewCreditLimitN());
            // [T-Up#INFO][COACTUPC.cbl:2880] MOVE statement
            container.setAcrdlimo(container.getWsMiscStorage()
                    .getCicsOutputEditVars().getWsEditCurrency92F());
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2882] MOVE statement
            container.setAcrdlimo(container.getWsMiscStorage()
                    .getAlphaVarsForDataEditing().getAcupNewCreditLimitX());
        }
        // [T-Up#INFO][COACTUPC.cbl:2885] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditCashCreditLimit(),
                FLG_CASH_CREDIT_LIMIT_ISVALID) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2886] MOVE statement
            container
                    .getWsMiscStorage()
                    .getCicsOutputEditVars()
                    .setWsEditCurrency92F(
                            container.getWsThisProgcommarea()
                                    .getAcupNewDetails().getAcupNewAcctData()
                                    .getAcupNewCashCreditLimitN());
            // [T-Up#INFO][COACTUPC.cbl:2888] MOVE statement
            container.setAcshlimo(container.getWsMiscStorage()
                    .getCicsOutputEditVars().getWsEditCurrency92F());
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2890] MOVE statement
            container.setAcshlimo(container.getWsMiscStorage()
                    .getAlphaVarsForDataEditing().getAcupNewCashCreditLimitX());
        }
        // [T-Up#INFO][COACTUPC.cbl:2894] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditCurrBal(), FLG_CURR_BAL_ISVALID) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2895] MOVE statement
            container
                    .getWsMiscStorage()
                    .getCicsOutputEditVars()
                    .setWsEditCurrency92F(
                            container.getWsThisProgcommarea()
                                    .getAcupNewDetails().getAcupNewAcctData()
                                    .getAcupNewCurrBalN());
            // [T-Up#INFO][COACTUPC.cbl:2896] MOVE statement
            container.setAcurbalo(container.getWsMiscStorage()
                    .getCicsOutputEditVars().getWsEditCurrency92F());
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2898] MOVE statement
            container.setAcurbalo(container.getWsMiscStorage()
                    .getAlphaVarsForDataEditing().getAcupNewCurrBalX());
        }
        // [T-Up#INFO][COACTUPC.cbl:2901] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditCurrCycCredit(),
                FLG_CURR_CYC_CREDIT_ISVALID) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2902] MOVE statement
            container
                    .getWsMiscStorage()
                    .getCicsOutputEditVars()
                    .setWsEditCurrency92F(
                            container.getWsThisProgcommarea()
                                    .getAcupNewDetails().getAcupNewAcctData()
                                    .getAcupNewCurrCycCreditN());
            // [T-Up#INFO][COACTUPC.cbl:2903] MOVE statement
            container.setAcrcycro(container.getWsMiscStorage()
                    .getCicsOutputEditVars().getWsEditCurrency92F());
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2905] MOVE statement
            container.setAcrcycro(container.getWsMiscStorage()
                    .getAlphaVarsForDataEditing().getAcupNewCurrCycCreditX());
        }
        // [T-Up#INFO][COACTUPC.cbl:2908] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditCurrCycDebit(),
                FLG_CURR_CYC_DEBIT_ISVALID) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2909] MOVE statement
            container
                    .getWsMiscStorage()
                    .getCicsOutputEditVars()
                    .setWsEditCurrency92F(
                            container.getWsThisProgcommarea()
                                    .getAcupNewDetails().getAcupNewAcctData()
                                    .getAcupNewCurrCycDebitN());
            // [T-Up#INFO][COACTUPC.cbl:2910] MOVE statement
            container.setAcrcydbo(container.getWsMiscStorage()
                    .getCicsOutputEditVars().getWsEditCurrency92F());
        } else {
            // [T-Up#INFO][COACTUPC.cbl:2912] MOVE statement
            container.setAcrcydbo(container.getWsMiscStorage()
                    .getAlphaVarsForDataEditing().getAcupNewCurrCycDebitX());
        }
        // [T-Up#INFO][COACTUPC.cbl:2915] MOVE statement
        container.setOpnyearo(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewAcctData().getAcupNewOpenYear());
        // [T-Up#INFO][COACTUPC.cbl:2916] MOVE statement
        container.setOpnmono(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewAcctData().getAcupNewOpenMon());
        // [T-Up#INFO][COACTUPC.cbl:2917] MOVE statement
        container.setOpndayo(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewAcctData().getAcupNewOpenDay());
        // [T-Up#INFO][COACTUPC.cbl:2919] MOVE statement
        container.setExpyearo(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewAcctData().getAcupNewExpYear());
        // [T-Up#INFO][COACTUPC.cbl:2920] MOVE statement
        container.setExpmono(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewAcctData().getAcupNewExpMon());
        // [T-Up#INFO][COACTUPC.cbl:2921] MOVE statement
        container.setExpdayo(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewAcctData().getAcupNewExpDay());
        // [T-Up#INFO][COACTUPC.cbl:2922] MOVE statement
        container.setRisyearo(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewAcctData()
                .getAcupNewReissueYear());
        // [T-Up#INFO][COACTUPC.cbl:2923] MOVE statement
        container.setRismono(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewAcctData()
                .getAcupNewReissueMon());
        // [T-Up#INFO][COACTUPC.cbl:2924] MOVE statement
        container.setRisdayo(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewAcctData()
                .getAcupNewReissueDay());
        // [T-Up#INFO][COACTUPC.cbl:2925] MOVE statement
        container.setAaddgrpo(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewAcctData().getAcupNewGroupId());
        // [T-Up#INFO][COACTUPC.cbl:2926] MOVE statement
        container.setAcstnumo(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData().getAcupNewCustIdX());
        // [T-Up#INFO][COACTUPC.cbl:2927] MOVE statement
        container.setActssn1o(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData().getAcupNewCustSsnX()
                .getAcupNewCustSsn1());
        // [T-Up#INFO][COACTUPC.cbl:2928] MOVE statement
        container.setActssn2o(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData().getAcupNewCustSsnX()
                .getAcupNewCustSsn2());
        // [T-Up#INFO][COACTUPC.cbl:2929] MOVE statement
        container.setActssn3o(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData().getAcupNewCustSsnX()
                .getAcupNewCustSsn3());
        // [T-Up#INFO][COACTUPC.cbl:2930] MOVE statement
        container.setAcstfcoo(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData()
                .getAcupNewCustFicoScoreX());
        // [T-Up#INFO][COACTUPC.cbl:2931] MOVE statement
        container.setDobyearo(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData()
                .getAcupNewCustDobYear());
        // [T-Up#INFO][COACTUPC.cbl:2932] MOVE statement
        container.setDobmono(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData()
                .getAcupNewCustDobMon());
        // [T-Up#INFO][COACTUPC.cbl:2933] MOVE statement
        container.setDobdayo(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData()
                .getAcupNewCustDobDay());
        // [T-Up#INFO][COACTUPC.cbl:2934] MOVE statement
        container.setAcsfnamo(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData()
                .getAcupNewCustFirstName());
        // [T-Up#INFO][COACTUPC.cbl:2935] MOVE statement
        container.setAcsmnamo(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData()
                .getAcupNewCustMiddleName());
        // [T-Up#INFO][COACTUPC.cbl:2936] MOVE statement
        container.setAcslnamo(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData()
                .getAcupNewCustLastName());
        // [T-Up#INFO][COACTUPC.cbl:2937] MOVE statement
        container.setAcsadl1o(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData()
                .getAcupNewCustAddrLine1());
        // [T-Up#INFO][COACTUPC.cbl:2938] MOVE statement
        container.setAcsadl2o(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData()
                .getAcupNewCustAddrLine2());
        // [T-Up#INFO][COACTUPC.cbl:2939] MOVE statement
        container.setAcscityo(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData()
                .getAcupNewCustAddrLine3());
        // [T-Up#INFO][COACTUPC.cbl:2940] MOVE statement
        container.setAcsstteo(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData()
                .getAcupNewCustAddrStateCd());
        // [T-Up#INFO][COACTUPC.cbl:2941] MOVE statement
        container.setAcszipco(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData()
                .getAcupNewCustAddrZip());
        // [T-Up#INFO][COACTUPC.cbl:2942] MOVE statement
        container.setAcsctryo(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData()
                .getAcupNewCustAddrCountryCd());
        // [T-Up#INFO][COACTUPC.cbl:2943] MOVE statement
        container.setAcsph1ao(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData()
                .getAcupNewCustPhoneNum1a());
        // [T-Up#INFO][COACTUPC.cbl:2944] MOVE statement
        container.setAcsph1bo(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData()
                .getAcupNewCustPhoneNum1b());
        // [T-Up#INFO][COACTUPC.cbl:2945] MOVE statement
        container.setAcsph1co(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData()
                .getAcupNewCustPhoneNum1c());
        // [T-Up#INFO][COACTUPC.cbl:2946] MOVE statement
        container.setAcsph2ao(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData()
                .getAcupNewCustPhoneNum2a());
        // [T-Up#INFO][COACTUPC.cbl:2947] MOVE statement
        container.setAcsph2bo(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData()
                .getAcupNewCustPhoneNum2b());
        // [T-Up#INFO][COACTUPC.cbl:2948] MOVE statement
        container.setAcsph2co(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData()
                .getAcupNewCustPhoneNum2c());
        // [T-Up#INFO][COACTUPC.cbl:2949] MOVE statement
        container.setAcsgovto(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData()
                .getAcupNewCustGovtIssuedId());
        // [T-Up#INFO][COACTUPC.cbl:2950] MOVE statement
        container.setAcseftco(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData()
                .getAcupNewCustEftAccountId());
        // [T-Up#INFO][COACTUPC.cbl:2951] MOVE statement
        container.setAcspflgo(container.getWsThisProgcommarea()
                .getAcupNewDetails().getAcupNewCustData()
                .getAcupNewCustPriHolderInd());
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2955] 3203-SHOW-UPDATED-VALUES-EXIT Paragraph</p>
     */
    void _3203ShowUpdatedValuesExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:2956] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2959] 3250-SETUP-INFOMSG Paragraph</p>
     */
    void _3250SetupInfomsg(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // *    SETUP INFORMATION MESSAGE
        // [T-Up#INFO][COACTUPC.cbl:2961] EVALUATE statement
        if (container.getCarddemoCommarea().getCdemoGeneralInfo()
                .getCdemoPgmContext() == CDEMO_PGM_ENTER) {
            // [T-Up#INFO][COACTUPC.cbl:2963] SET statement
            container.getWsMiscStorage().setWsInfoMsg(PROMPT_FOR_SEARCH_KEYS);
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getAcctUpdateScreenData().getAcupChangeAction(),
                ACUP_DETAILS_NOT_FETCHED_1) == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcctUpdateScreenData().getAcupChangeAction(),
                        ACUP_DETAILS_NOT_FETCHED_2) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2965] SET statement
            container.getWsMiscStorage().setWsInfoMsg(PROMPT_FOR_SEARCH_KEYS);
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getAcctUpdateScreenData().getAcupChangeAction(),
                ACUP_SHOW_DETAILS) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2967] SET statement
            container.getWsMiscStorage().setWsInfoMsg(PROMPT_FOR_CHANGES);
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getAcctUpdateScreenData().getAcupChangeAction(),
                ACUP_CHANGES_NOT_OK) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2969] SET statement
            container.getWsMiscStorage().setWsInfoMsg(PROMPT_FOR_CHANGES);
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getAcctUpdateScreenData().getAcupChangeAction(),
                ACUP_CHANGES_OK_NOT_CONFIRMED) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2971] SET statement
            container.getWsMiscStorage().setWsInfoMsg(PROMPT_FOR_CONFIRMATION);
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getAcctUpdateScreenData().getAcupChangeAction(),
                ACUP_CHANGES_OKAYED_AND_DONE) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2973] SET statement
            container.getWsMiscStorage().setWsInfoMsg(CONFIRM_UPDATE_SUCCESS);
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getAcctUpdateScreenData().getAcupChangeAction(),
                ACUP_CHANGES_OKAYED_LOCK_ERROR) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2976] SET statement
            container.getWsMiscStorage().setWsInfoMsg(INFORM_FAILURE);
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getAcctUpdateScreenData().getAcupChangeAction(),
                ACUP_CHANGES_OKAYED_BUT_FAILED) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2978] SET statement
            container.getWsMiscStorage().setWsInfoMsg(INFORM_FAILURE);
        } else if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsInfoMsg(), WS_NO_INFO_MESSAGE_1) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsInfoMsg(), WS_NO_INFO_MESSAGE_2) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:2980] SET statement
            container.getWsMiscStorage().setWsInfoMsg(PROMPT_FOR_SEARCH_KEYS);
        }
        // [T-Up#INFO][COACTUPC.cbl:2983] MOVE statement
        container.setInfomsgo(container.getWsMiscStorage().getWsInfoMsg());
        // [T-Up#INFO][COACTUPC.cbl:2985] MOVE statement
        container.setErrmsgo(container.getWsMiscStorage().getWsReturnMsg());
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2987] 3250-SETUP-INFOMSG-EXIT Paragraph</p>
     */
    void _3250SetupInfomsgExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:2988] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:2990] 3300-SETUP-SCREEN-ATTRS Paragraph</p>
     */
    void _3300SetupScreenAttrs(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // *    PROTECT ALL FIELDS
        // [T-Up#INFO][COACTUPC.cbl:2993] PERFORM statement
        controlManager.run(context, _3310ProtectAllAttrs,
                _3310ProtectAllAttrsExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // *    UNPROTECT BASED ON CONTEXT
        // [T-Up#INFO][COACTUPC.cbl:2997] EVALUATE statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getAcctUpdateScreenData().getAcupChangeAction(),
                ACUP_DETAILS_NOT_FETCHED_1) == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcctUpdateScreenData().getAcupChangeAction(),
                        ACUP_DETAILS_NOT_FETCHED_2) == 0) {
            // *            Make Account Id editable
            // [T-Up#INFO][COACTUPC.cbl:3000] MOVE statement
            container.getCactupai().setAcctsida(
                    container.getDfhbmsca().getDfhbmfse());
        } else if ((CobStringUtils.compare(container.getWsThisProgcommarea()
                .getAcctUpdateScreenData().getAcupChangeAction(),
                ACUP_SHOW_DETAILS) == 0)
                || (CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcctUpdateScreenData().getAcupChangeAction(),
                        ACUP_CHANGES_NOT_OK) == 0)) {
            // [T-Up#INFO][COACTUPC.cbl:3003] PERFORM statement
            controlManager.run(context, _3320UnprotectFewAttrs,
                    _3320UnprotectFewAttrsExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else if ((CobStringUtils.compare(container.getWsThisProgcommarea()
                .getAcctUpdateScreenData().getAcupChangeAction(),
                ACUP_CHANGES_OK_NOT_CONFIRMED) == 0)
                || (CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcctUpdateScreenData().getAcupChangeAction(),
                        ACUP_CHANGES_OKAYED_AND_DONE) == 0)) {
            // [T-Up#INFO][COACTUPC.cbl:3007] CONTINUE statement
        } else {
            // [T-Up#INFO][COACTUPC.cbl:3009] MOVE statement
            container.getCactupai().setAcctsida(
                    container.getDfhbmsca().getDfhbmfse());
        }
        // *    POSITION CURSOR - ORDER BASED ON SCREEN LOCATION
        // [T-Up#INFO][COACTUPC.cbl:3013] EVALUATE statement
        if ((CobStringUtils
                .compare(container.getWsMiscStorage().getWsInfoMsg(),
                        FOUND_ACCOUNT_DATA) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsReturnMsg(), NO_CHANGES_DETECTED) == 0)) {
            // [T-Up#INFO][COACTUPC.cbl:3016] MOVE statement
            container.getCactupai().setAcsttusl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditAcctFlag(), FLG_ACCTFILTER_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsEditAcctFlag(), FLG_ACCTFILTER_BLANK) == 0)) {
            // [T-Up#INFO][COACTUPC.cbl:3019] MOVE statement
            container.getCactupai().setAcctsidl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditAcctStatus(),
                FLG_ACCT_STATUS_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditAcctStatus(),
                        FLG_ACCT_STATUS_BLANK) == 0)) {
            // *    Account Status
            // [T-Up#INFO][COACTUPC.cbl:3023] MOVE statement
            container.getCactupai().setAcsttusl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditOpenDateFlgs()
                .getWsEditOpenYearFlg(), FLG_OPEN_YEAR_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditOpenDateFlgs()
                        .getWsEditOpenYearFlg(), FLG_OPEN_YEAR_BLANK) == 0)) {
            // *    Open Year
            // [T-Up#INFO][COACTUPC.cbl:3027] MOVE statement
            container.getCactupai().setOpnyearl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditOpenDateFlgs()
                .getWsEditOpenMonth(), FLG_OPEN_MONTH_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditOpenDateFlgs()
                        .getWsEditOpenMonth(), FLG_OPEN_MONTH_BLANK) == 0)) {
            // *    Open Month
            // [T-Up#INFO][COACTUPC.cbl:3031] MOVE statement
            container.getCactupai().setOpnmonl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditOpenDateFlgs().getWsEditOpenDay(),
                FLG_OPEN_DAY_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditOpenDateFlgs()
                        .getWsEditOpenDay(), FLG_OPEN_DAY_BLANK) == 0)) {
            // *    Open Day
            // [T-Up#INFO][COACTUPC.cbl:3035] MOVE statement
            container.getCactupai().setOpndayl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditCreditLimit(),
                FLG_CRED_LIMIT_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditCreditLimit(),
                        FLG_CRED_LIMIT_BLANK) == 0)) {
            // *    Credit Limit
            // [T-Up#INFO][COACTUPC.cbl:3039] MOVE statement
            container.getCactupai().setAcrdliml(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsExpiryDateFlgs()
                .getWsEditExpiryYearFlg(), FLG_EXPIRY_YEAR_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsExpiryDateFlgs()
                        .getWsEditExpiryYearFlg(), FLG_EXPIRY_YEAR_BLANK) == 0)) {
            // *    Expiry Year
            // [T-Up#INFO][COACTUPC.cbl:3043] MOVE statement
            container.getCactupai().setExpyearl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsExpiryDateFlgs()
                .getWsEditExpiryMonth(), FLG_EXPIRY_MONTH_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsExpiryDateFlgs()
                        .getWsEditExpiryMonth(), FLG_EXPIRY_MONTH_BLANK) == 0)) {
            // *    Expiry Month
            // [T-Up#INFO][COACTUPC.cbl:3047] MOVE statement
            container.getCactupai().setExpmonl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsExpiryDateFlgs().getWsEditExpiryDay(),
                FLG_EXPIRY_DAY_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsExpiryDateFlgs()
                        .getWsEditExpiryDay(), FLG_EXPIRY_DAY_BLANK) == 0)) {
            // *    Expiry Day
            // [T-Up#INFO][COACTUPC.cbl:3051] MOVE statement
            container.getCactupai().setExpdayl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditCashCreditLimit(),
                FLG_CASH_CREDIT_LIMIT_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditCashCreditLimit(),
                        FLG_CASH_CREDIT_LIMIT_BLANK) == 0)) {
            // *    Cash credit limit
            // [T-Up#INFO][COACTUPC.cbl:3055] MOVE statement
            container.getCactupai().setAcshliml(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditReissueDateFlgs()
                .getWsEditReissueYearFlg(), FLG_REISSUE_YEAR_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditReissueDateFlgs()
                        .getWsEditReissueYearFlg(), FLG_REISSUE_YEAR_BLANK) == 0)) {
            // *    Reissue Year
            // [T-Up#INFO][COACTUPC.cbl:3059] MOVE statement
            container.getCactupai().setRisyearl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditReissueDateFlgs()
                .getWsEditReissueMonth(), FLG_REISSUE_MONTH_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditReissueDateFlgs()
                        .getWsEditReissueMonth(), FLG_REISSUE_MONTH_BLANK) == 0)) {
            // *    Expiry Month
            // [T-Up#INFO][COACTUPC.cbl:3063] MOVE statement
            container.getCactupai().setRismonl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditReissueDateFlgs()
                .getWsEditReissueDay(), FLG_REISSUE_DAY_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditReissueDateFlgs()
                        .getWsEditReissueDay(), FLG_REISSUE_DAY_BLANK) == 0)) {
            // *    Expiry Day
            // [T-Up#INFO][COACTUPC.cbl:3067] MOVE statement
            container.getCactupai().setRisdayl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditCurrBal(), FLG_CURR_BAL_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditCurrBal(),
                        FLG_CURR_BAL_BLANK) == 0)) {
            // *    Current Balance
            // [T-Up#INFO][COACTUPC.cbl:3072] MOVE statement
            container.getCactupai().setAcurball(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditCurrCycCredit(),
                FLG_CURR_CYC_CREDIT_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditCurrCycCredit(),
                        FLG_CURR_CYC_CREDIT_BLANK) == 0)) {
            // *    Current Cycle Credit
            // [T-Up#INFO][COACTUPC.cbl:3076] MOVE statement
            container.getCactupai().setAcrcycrl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditCurrCycDebit(),
                FLG_CURR_CYC_DEBIT_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditCurrCycDebit(),
                        FLG_CURR_CYC_DEBIT_BLANK) == 0)) {
            // *    Current Cycle Debit
            // [T-Up#INFO][COACTUPC.cbl:3080] MOVE statement
            container.getCactupai().setAcrcydbl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsGenericEdits().getWsEditUsSsnFlgs()
                .getWsEditUsSsnPart1Flgs(), FLG_EDIT_US_SSN_PART1_NOT_OK) == 0)
                || (CobStringUtils
                        .compare(container.getWsMiscStorage()
                                .getWsGenericEdits().getWsEditUsSsnFlgs()
                                .getWsEditUsSsnPart1Flgs(),
                                FLG_EDIT_US_SSN_PART1_BLANK) == 0)) {
            // *    SSN Part 1
            // [T-Up#INFO][COACTUPC.cbl:3084] MOVE statement
            container.getCactupai().setActssn1l(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsGenericEdits().getWsEditUsSsnFlgs()
                .getWsEditUsSsnPart2Flgs(), FLG_EDIT_US_SSN_PART2_NOT_OK) == 0)
                || (CobStringUtils
                        .compare(container.getWsMiscStorage()
                                .getWsGenericEdits().getWsEditUsSsnFlgs()
                                .getWsEditUsSsnPart2Flgs(),
                                FLG_EDIT_US_SSN_PART2_BLANK) == 0)) {
            // *    SSN Part 2
            // [T-Up#INFO][COACTUPC.cbl:3088] MOVE statement
            container.getCactupai().setActssn2l(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsGenericEdits().getWsEditUsSsnFlgs()
                .getWsEditUsSsnPart3Flgs(), FLG_EDIT_US_SSN_PART3_NOT_OK) == 0)
                || (CobStringUtils
                        .compare(container.getWsMiscStorage()
                                .getWsGenericEdits().getWsEditUsSsnFlgs()
                                .getWsEditUsSsnPart3Flgs(),
                                FLG_EDIT_US_SSN_PART3_BLANK) == 0)) {
            // *    SSN Part 3
            // [T-Up#INFO][COACTUPC.cbl:3092] MOVE statement
            container.getCactupai().setActssn3l(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditDtOfBirthFlgs()
                .getWsEditDtOfBirthYearFlg(), FLG_DT_OF_BIRTH_YEAR_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditDtOfBirthFlgs()
                        .getWsEditDtOfBirthYearFlg(),
                        FLG_DT_OF_BIRTH_YEAR_BLANK) == 0)) {
            // *    Date of Birth Year
            // [T-Up#INFO][COACTUPC.cbl:3096] MOVE statement
            container.getCactupai().setDobyearl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditDtOfBirthFlgs()
                .getWsEditDtOfBirthMonth(), FLG_DT_OF_BIRTH_MONTH_NOT_OK) == 0)
                || (CobStringUtils
                        .compare(container.getWsMiscStorage()
                                .getWsNonKeyFlags().getWsEditDtOfBirthFlgs()
                                .getWsEditDtOfBirthMonth(),
                                FLG_DT_OF_BIRTH_MONTH_BLANK) == 0)) {
            // *    Date of Birth Month
            // [T-Up#INFO][COACTUPC.cbl:3100] MOVE statement
            container.getCactupai().setDobmonl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditDtOfBirthFlgs()
                .getWsEditDtOfBirthDay(), FLG_DT_OF_BIRTH_DAY_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditDtOfBirthFlgs()
                        .getWsEditDtOfBirthDay(), FLG_DT_OF_BIRTH_DAY_BLANK) == 0)) {
            // *    Date of Birth Day
            // [T-Up#INFO][COACTUPC.cbl:3104] MOVE statement
            container.getCactupai().setDobdayl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditFicoScoreFlgs(),
                FLG_FICO_SCORE_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditFicoScoreFlgs(),
                        FLG_FICO_SCORE_BLANK) == 0)) {
            // *    FICO Score
            // [T-Up#INFO][COACTUPC.cbl:3108] MOVE statement
            container.getCactupai().setAcstfcol(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditNameFlags()
                .getWsEditFirstNameFlgs(), FLG_FIRST_NAME_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditNameFlags()
                        .getWsEditFirstNameFlgs(), FLG_FIRST_NAME_BLANK) == 0)) {
            // *    First Name
            // [T-Up#INFO][COACTUPC.cbl:3112] MOVE statement
            container.getCactupai().setAcsfnaml(-1);
        } else if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditNameFlags()
                .getWsEditMiddleNameFlgs(), FLG_MIDDLE_NAME_NOT_OK) == 0) {
            // *    Middle Name
            // [T-Up#INFO][COACTUPC.cbl:3115] MOVE statement
            container.getCactupai().setAcsmnaml(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditNameFlags()
                .getWsEditLastNameFlgs(), FLG_LAST_NAME_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditNameFlags()
                        .getWsEditLastNameFlgs(), FLG_LAST_NAME_BLANK) == 0)) {
            // *    Last Name
            // [T-Up#INFO][COACTUPC.cbl:3119] MOVE statement
            container.getCactupai().setAcslnaml(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditAddressFlags()
                .getWsEditAddressLine1Flgs(), FLG_ADDRESS_LINE_1_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditAddressFlags()
                        .getWsEditAddressLine1Flgs(), FLG_ADDRESS_LINE_1_BLANK) == 0)) {
            // *    Address Line 1
            // [T-Up#INFO][COACTUPC.cbl:3123] MOVE statement
            container.getCactupai().setAcsadl1l(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditAddressFlags()
                .getWsEditStateFlgs(), FLG_STATE_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditAddressFlags()
                        .getWsEditStateFlgs(), FLG_STATE_BLANK) == 0)) {
            // *    State (appears next to Line 2 on screen before city)
            // [T-Up#INFO][COACTUPC.cbl:3127] MOVE statement
            container.getCactupai().setAcssttel(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditAddressFlags()
                .getWsEditZipcodeFlgs(), FLG_ZIPCODE_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditAddressFlags()
                        .getWsEditZipcodeFlgs(), FLG_ZIPCODE_BLANK) == 0)) {
            // *    Address Line 2 has no edits
            // *    Zip code
            // [T-Up#INFO][COACTUPC.cbl:3132] MOVE statement
            container.getCactupai().setAcszipcl(-1);
        } else if ((CobStringUtils.compare(
                container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditAddressFlags().getWsEditCityFlgs(),
                FLG_CITY_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditAddressFlags()
                        .getWsEditCityFlgs(), FLG_CITY_BLANK) == 0)) {
            // *    Address Line 3 (City)
            // [T-Up#INFO][COACTUPC.cbl:3136] MOVE statement
            container.getCactupai().setAcscityl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditAddressFlags()
                .getWsEditCountryFlgs(), FLG_COUNTRY_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditAddressFlags()
                        .getWsEditCountryFlgs(), FLG_COUNTRY_BLANK) == 0)) {
            // *    Country edits.
            // [T-Up#INFO][COACTUPC.cbl:3140] MOVE statement
            container.getCactupai().setAcsctryl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditAddressFlags()
                .getWsEditPhoneNum1Flgs().getWsEditPhoneNum1aFlg(),
                FLG_PHONE_NUM_1A_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditAddressFlags()
                        .getWsEditPhoneNum1Flgs().getWsEditPhoneNum1aFlg(),
                        FLG_PHONE_NUM_1A_BLANK) == 0)) {
            // *    Phone 1
            // [T-Up#INFO][COACTUPC.cbl:3144] MOVE statement
            container.getCactupai().setAcsph1al(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditAddressFlags()
                .getWsEditPhoneNum1Flgs().getWsEditPhoneNum1b(),
                FLG_PHONE_NUM_1B_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditAddressFlags()
                        .getWsEditPhoneNum1Flgs().getWsEditPhoneNum1b(),
                        FLG_PHONE_NUM_1B_BLANK) == 0)) {
            // [T-Up#INFO][COACTUPC.cbl:3147] MOVE statement
            container.getCactupai().setAcsph1bl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditAddressFlags()
                .getWsEditPhoneNum1Flgs().getWsEditPhoneNum1c(),
                FLG_PHONE_NUM_1C_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditAddressFlags()
                        .getWsEditPhoneNum1Flgs().getWsEditPhoneNum1c(),
                        FLG_PHONE_NUM_1C_BLANK) == 0)) {
            // [T-Up#INFO][COACTUPC.cbl:3150] MOVE statement
            container.getCactupai().setAcsph1cl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditAddressFlags()
                .getWsEditPhoneNum2Flgs().getWsEditPhoneNum2aFlg(),
                FLG_PHONE_NUM_2A_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditAddressFlags()
                        .getWsEditPhoneNum2Flgs().getWsEditPhoneNum2aFlg(),
                        FLG_PHONE_NUM_2A_BLANK) == 0)) {
            // *    Phone 2
            // [T-Up#INFO][COACTUPC.cbl:3154] MOVE statement
            container.getCactupai().setAcsph2al(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditAddressFlags()
                .getWsEditPhoneNum2Flgs().getWsEditPhoneNum2b(),
                FLG_PHONE_NUM_2B_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditAddressFlags()
                        .getWsEditPhoneNum2Flgs().getWsEditPhoneNum2b(),
                        FLG_PHONE_NUM_2B_BLANK) == 0)) {
            // [T-Up#INFO][COACTUPC.cbl:3157] MOVE statement
            container.getCactupai().setAcsph2bl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditAddressFlags()
                .getWsEditPhoneNum2Flgs().getWsEditPhoneNum2c(),
                FLG_PHONE_NUM_2C_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditAddressFlags()
                        .getWsEditPhoneNum2Flgs().getWsEditPhoneNum2c(),
                        FLG_PHONE_NUM_2C_BLANK) == 0)) {
            // [T-Up#INFO][COACTUPC.cbl:3160] MOVE statement
            container.getCactupai().setAcsph2cl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEftAccountIdFlgs(),
                FLG_EFT_ACCOUNT_ID_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEftAccountIdFlgs(),
                        FLG_EFT_ACCOUNT_ID_BLANK) == 0)) {
            // *    EFT Account Id
            // [T-Up#INFO][COACTUPC.cbl:3164] MOVE statement
            container.getCactupai().setAcseftcl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditPriCardholder(),
                FLG_PRI_CARDHOLDER_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsNonKeyFlags().getWsEditPriCardholder(),
                        FLG_PRI_CARDHOLDER_BLANK) == 0)) {
            // *    Primary Card Holder
            // [T-Up#INFO][COACTUPC.cbl:3168] MOVE statement
            container.getCactupai().setAcspflgl(-1);
        } else {
            // [T-Up#INFO][COACTUPC.cbl:3170] MOVE statement
            container.getCactupai().setAcctsidl(-1);
        }
        // *    SETUP COLOR
        // [T-Up#INFO][COACTUPC.cbl:3175] IF statement
        if (CobStringUtils.compare(container.getCarddemoCommarea()
                .getCdemoMoreInfo().getCdemoLastMapset(), container
                .getWsLiterals().getLitCclistmapset()) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:3176] MOVE statement
            container.setAcctsidc(container.getDfhbmsca().getDfhdfcol());
        }
        // *    Account Filter
        // [T-Up#INFO][COACTUPC.cbl:3180] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditAcctFlag(), FLG_ACCTFILTER_NOT_OK) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:3181] MOVE statement
            container.setAcctsidc(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COACTUPC.cbl:3184] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditAcctFlag(), FLG_ACCTFILTER_BLANK) == 0
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][COACTUPC.cbl:3186] MOVE statement
            container.setAcctsido("*");
            // [T-Up#INFO][COACTUPC.cbl:3187] MOVE statement
            container.setAcctsidc(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COACTUPC.cbl:3190] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getAcctUpdateScreenData().getAcupChangeAction(),
                ACUP_DETAILS_NOT_FETCHED_1) == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcctUpdateScreenData().getAcupChangeAction(),
                        ACUP_DETAILS_NOT_FETCHED_2) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsEditAcctFlag(), FLG_ACCTFILTER_BLANK) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsEditAcctFlag(), FLG_ACCTFILTER_NOT_OK) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:3193] GO TO statement
            context.setGotoTarget(_3300SetupScreenAttrsExit);
            return;
        } else {
            // [T-Up#INFO][COACTUPC.cbl:3195] CONTINUE statement
        }
        // ******************************************************************
        // *    Using Copy replacing to set attribs for remaining vars
        // *    Write specific code only if rules differ
        // ******************************************************************
        // *    IF (FLG-ACCT-STATUS-NOT-OK
        // *    OR  FLG-ACCT-STATUS-BLANK)
        // *    AND CDEMO-PGM-REENTER
        // *        MOVE DFHRED             TO ACSTTUSC OF CACTUPAO
        // *        IF  FLG-ACCT-STATUS-BLANK
        // *            MOVE '*'            TO ACSTTUSO OF CACTUPAO
        // *        END-IF
        // *    END-IF
        // *    Account Status
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==ACCT-STATUS==
        //       *      ==(SCRNVAR2)== BY ==ACSTTUS==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditAcctStatus(),
                FLG_ACCT_STATUS_NOT_OK) == 0 || CobStringUtils.compare(
                container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditAcctStatus(), FLG_ACCT_STATUS_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setAcsttusc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditAcctStatus(),
                    FLG_ACCT_STATUS_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setAcsttuso("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Open Year
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==OPEN-YEAR==
        //       *      ==(SCRNVAR2)== BY ==OPNYEAR==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditOpenDateFlgs()
                .getWsEditOpenYearFlg(), FLG_OPEN_YEAR_NOT_OK) == 0 || CobStringUtils
                .compare(container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditOpenDateFlgs().getWsEditOpenYearFlg(),
                        FLG_OPEN_YEAR_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setOpnyearc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditOpenDateFlgs()
                    .getWsEditOpenYearFlg(), FLG_OPEN_YEAR_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setOpnyearo("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Open Month
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==OPEN-MONTH==
        //       *      ==(SCRNVAR2)== BY ==OPNMON==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditOpenDateFlgs()
                .getWsEditOpenMonth(), FLG_OPEN_MONTH_NOT_OK) == 0 || CobStringUtils
                .compare(container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditOpenDateFlgs().getWsEditOpenMonth(),
                        FLG_OPEN_MONTH_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setOpnmonc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditOpenDateFlgs()
                    .getWsEditOpenMonth(), FLG_OPEN_MONTH_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setOpnmono("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Open Day
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==OPEN-DAY==
        //       *      ==(SCRNVAR2)== BY ==OPNDAY==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditOpenDateFlgs().getWsEditOpenDay(),
                FLG_OPEN_DAY_NOT_OK) == 0 || CobStringUtils.compare(container
                .getWsMiscStorage().getWsNonKeyFlags().getWsEditOpenDateFlgs()
                .getWsEditOpenDay(), FLG_OPEN_DAY_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setOpndayc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditOpenDateFlgs()
                    .getWsEditOpenDay(), FLG_OPEN_DAY_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setOpndayo("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Credit Limit
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==CRED-LIMIT==
        //       *      ==(SCRNVAR2)== BY ==ACRDLIM==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditCreditLimit(),
                FLG_CRED_LIMIT_NOT_OK) == 0 || CobStringUtils.compare(container
                .getWsMiscStorage().getWsNonKeyFlags().getWsEditCreditLimit(),
                FLG_CRED_LIMIT_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setAcrdlimc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditCreditLimit(),
                    FLG_CRED_LIMIT_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setAcrdlimo("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Expiry Year
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==EXPIRY-YEAR==
        //       *      ==(SCRNVAR2)== BY ==EXPYEAR==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsExpiryDateFlgs()
                .getWsEditExpiryYearFlg(), FLG_EXPIRY_YEAR_NOT_OK) == 0 || CobStringUtils
                .compare(container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsExpiryDateFlgs().getWsEditExpiryYearFlg(),
                        FLG_EXPIRY_YEAR_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setExpyearc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsExpiryDateFlgs()
                    .getWsEditExpiryYearFlg(), FLG_EXPIRY_YEAR_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setExpyearo("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Expiry Month
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==EXPIRY-MONTH==
        //       *      ==(SCRNVAR2)== BY ==EXPMON==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsExpiryDateFlgs()
                .getWsEditExpiryMonth(), FLG_EXPIRY_MONTH_NOT_OK) == 0 || CobStringUtils
                .compare(container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsExpiryDateFlgs().getWsEditExpiryMonth(),
                        FLG_EXPIRY_MONTH_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setExpmonc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsExpiryDateFlgs()
                    .getWsEditExpiryMonth(), FLG_EXPIRY_MONTH_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setExpmono("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Expiry Day
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==EXPIRY-DAY==
        //       *      ==(SCRNVAR2)== BY ==EXPDAY==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsExpiryDateFlgs().getWsEditExpiryDay(),
                FLG_EXPIRY_DAY_NOT_OK) == 0 || CobStringUtils.compare(container
                .getWsMiscStorage().getWsNonKeyFlags().getWsExpiryDateFlgs()
                .getWsEditExpiryDay(), FLG_EXPIRY_DAY_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setExpdayc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsExpiryDateFlgs()
                    .getWsEditExpiryDay(), FLG_EXPIRY_DAY_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setExpdayo("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Cash Credit Limit
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==CASH-CREDIT-LIMIT==
        //       *      ==(SCRNVAR2)== BY ==ACSHLIM==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditCashCreditLimit(),
                FLG_CASH_CREDIT_LIMIT_NOT_OK) == 0 || CobStringUtils.compare(
                container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditCashCreditLimit(),
                FLG_CASH_CREDIT_LIMIT_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setAcshlimc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditCashCreditLimit(),
                    FLG_CASH_CREDIT_LIMIT_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setAcshlimo("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Reissue Year
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==REISSUE-YEAR==
        //       *      ==(SCRNVAR2)== BY ==RISYEAR==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditReissueDateFlgs()
                .getWsEditReissueYearFlg(), FLG_REISSUE_YEAR_NOT_OK) == 0 || CobStringUtils
                .compare(container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditReissueDateFlgs().getWsEditReissueYearFlg(),
                        FLG_REISSUE_YEAR_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setRisyearc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditReissueDateFlgs()
                    .getWsEditReissueYearFlg(), FLG_REISSUE_YEAR_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setRisyearo("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Reissue Month
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==REISSUE-MONTH==
        //       *      ==(SCRNVAR2)== BY ==RISMON==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditReissueDateFlgs()
                .getWsEditReissueMonth(), FLG_REISSUE_MONTH_NOT_OK) == 0 || CobStringUtils
                .compare(container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditReissueDateFlgs().getWsEditReissueMonth(),
                        FLG_REISSUE_MONTH_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setRismonc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditReissueDateFlgs()
                    .getWsEditReissueMonth(), FLG_REISSUE_MONTH_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setRismono("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Reissue Day
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==REISSUE-DAY==
        //       *      ==(SCRNVAR2)== BY ==RISDAY==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditReissueDateFlgs()
                .getWsEditReissueDay(), FLG_REISSUE_DAY_NOT_OK) == 0 || CobStringUtils
                .compare(container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditReissueDateFlgs().getWsEditReissueDay(),
                        FLG_REISSUE_DAY_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setRisdayc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditReissueDateFlgs()
                    .getWsEditReissueDay(), FLG_REISSUE_DAY_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setRisdayo("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Current Balance
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==CURR-BAL==
        //       *      ==(SCRNVAR2)== BY ==ACURBAL==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditCurrBal(), FLG_CURR_BAL_NOT_OK) == 0 || CobStringUtils
                .compare(container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditCurrBal(), FLG_CURR_BAL_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setAcurbalc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditCurrBal(), FLG_CURR_BAL_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setAcurbalo("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Current Cycle Credit
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==CURR-CYC-CREDIT==
        //       *      ==(SCRNVAR2)== BY ==ACRCYCR==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditCurrCycCredit(),
                FLG_CURR_CYC_CREDIT_NOT_OK) == 0 || CobStringUtils.compare(
                container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditCurrCycCredit(), FLG_CURR_CYC_CREDIT_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setAcrcycrc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditCurrCycCredit(),
                    FLG_CURR_CYC_CREDIT_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setAcrcycro("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Current Cycle Debit
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==CURR-CYC-DEBIT==
        //       *      ==(SCRNVAR2)== BY ==ACRCYDB==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditCurrCycDebit(),
                FLG_CURR_CYC_DEBIT_NOT_OK) == 0 || CobStringUtils.compare(
                container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditCurrCycDebit(), FLG_CURR_CYC_DEBIT_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setAcrcydbc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditCurrCycDebit(),
                    FLG_CURR_CYC_DEBIT_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setAcrcydbo("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    SSN Part 1
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==EDIT-US-SSN-PART1==
        //       *      ==(SCRNVAR2)== BY ==ACTSSN1==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsGenericEdits().getWsEditUsSsnFlgs()
                .getWsEditUsSsnPart1Flgs(), FLG_EDIT_US_SSN_PART1_NOT_OK) == 0 || CobStringUtils
                .compare(container.getWsMiscStorage().getWsGenericEdits()
                        .getWsEditUsSsnFlgs().getWsEditUsSsnPart1Flgs(),
                        FLG_EDIT_US_SSN_PART1_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setActssn1c(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsGenericEdits().getWsEditUsSsnFlgs()
                    .getWsEditUsSsnPart1Flgs(), FLG_EDIT_US_SSN_PART1_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setActssn1o("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    SSN Part 2
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==EDIT-US-SSN-PART2==
        //       *      ==(SCRNVAR2)== BY ==ACTSSN2==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsGenericEdits().getWsEditUsSsnFlgs()
                .getWsEditUsSsnPart2Flgs(), FLG_EDIT_US_SSN_PART2_NOT_OK) == 0 || CobStringUtils
                .compare(container.getWsMiscStorage().getWsGenericEdits()
                        .getWsEditUsSsnFlgs().getWsEditUsSsnPart2Flgs(),
                        FLG_EDIT_US_SSN_PART2_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setActssn2c(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsGenericEdits().getWsEditUsSsnFlgs()
                    .getWsEditUsSsnPart2Flgs(), FLG_EDIT_US_SSN_PART2_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setActssn2o("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    SSN Part 3
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==EDIT-US-SSN-PART3==
        //       *      ==(SCRNVAR2)== BY ==ACTSSN3==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsGenericEdits().getWsEditUsSsnFlgs()
                .getWsEditUsSsnPart3Flgs(), FLG_EDIT_US_SSN_PART3_NOT_OK) == 0 || CobStringUtils
                .compare(container.getWsMiscStorage().getWsGenericEdits()
                        .getWsEditUsSsnFlgs().getWsEditUsSsnPart3Flgs(),
                        FLG_EDIT_US_SSN_PART3_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setActssn3c(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsGenericEdits().getWsEditUsSsnFlgs()
                    .getWsEditUsSsnPart3Flgs(), FLG_EDIT_US_SSN_PART3_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setActssn3o("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Date of Birth Year
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==DT-OF-BIRTH-YEAR==
        //       *      ==(SCRNVAR2)== BY ==DOBYEAR==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditDtOfBirthFlgs()
                .getWsEditDtOfBirthYearFlg(), FLG_DT_OF_BIRTH_YEAR_NOT_OK) == 0 || CobStringUtils
                .compare(container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditDtOfBirthFlgs().getWsEditDtOfBirthYearFlg(),
                        FLG_DT_OF_BIRTH_YEAR_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setDobyearc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditDtOfBirthFlgs()
                    .getWsEditDtOfBirthYearFlg(), FLG_DT_OF_BIRTH_YEAR_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setDobyearo("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Date of Birth Month
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==DT-OF-BIRTH-MONTH==
        //       *      ==(SCRNVAR2)== BY ==DOBMON==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditDtOfBirthFlgs()
                .getWsEditDtOfBirthMonth(), FLG_DT_OF_BIRTH_MONTH_NOT_OK) == 0 || CobStringUtils
                .compare(container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditDtOfBirthFlgs().getWsEditDtOfBirthMonth(),
                        FLG_DT_OF_BIRTH_MONTH_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setDobmonc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditDtOfBirthFlgs()
                    .getWsEditDtOfBirthMonth(), FLG_DT_OF_BIRTH_MONTH_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setDobmono("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Date of Birth Day
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==DT-OF-BIRTH-DAY==
        //       *      ==(SCRNVAR2)== BY ==DOBDAY==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditDtOfBirthFlgs()
                .getWsEditDtOfBirthDay(), FLG_DT_OF_BIRTH_DAY_NOT_OK) == 0 || CobStringUtils
                .compare(container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditDtOfBirthFlgs().getWsEditDtOfBirthDay(),
                        FLG_DT_OF_BIRTH_DAY_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setDobdayc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditDtOfBirthFlgs()
                    .getWsEditDtOfBirthDay(), FLG_DT_OF_BIRTH_DAY_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setDobdayo("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    FICO Score
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==FICO-SCORE==
        //       *      ==(SCRNVAR2)== BY ==ACSTFCO==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditFicoScoreFlgs(),
                FLG_FICO_SCORE_NOT_OK) == 0 || CobStringUtils.compare(
                container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditFicoScoreFlgs(), FLG_FICO_SCORE_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setAcstfcoc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditFicoScoreFlgs(),
                    FLG_FICO_SCORE_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setAcstfcoo("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    First Name
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==FIRST-NAME==
        //       *      ==(SCRNVAR2)== BY ==ACSFNAM==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditNameFlags()
                .getWsEditFirstNameFlgs(), FLG_FIRST_NAME_NOT_OK) == 0 || CobStringUtils
                .compare(container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditNameFlags().getWsEditFirstNameFlgs(),
                        FLG_FIRST_NAME_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setAcsfnamc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditNameFlags()
                    .getWsEditFirstNameFlgs(), FLG_FIRST_NAME_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setAcsfnamo("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Middle Name (no edits coded)
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==MIDDLE-NAME==
        //       *      ==(SCRNVAR2)== BY ==ACSMNAM==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditNameFlags()
                .getWsEditMiddleNameFlgs(), FLG_MIDDLE_NAME_NOT_OK) == 0 || CobStringUtils
                .compare(container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditNameFlags().getWsEditMiddleNameFlgs(),
                        FLG_MIDDLE_NAME_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setAcsmnamc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditNameFlags()
                    .getWsEditMiddleNameFlgs(), FLG_MIDDLE_NAME_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setAcsmnamo("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Last Name
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==LAST-NAME==
        //       *      ==(SCRNVAR2)== BY ==ACSLNAM==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditNameFlags()
                .getWsEditLastNameFlgs(), FLG_LAST_NAME_NOT_OK) == 0 || CobStringUtils
                .compare(container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditNameFlags().getWsEditLastNameFlgs(),
                        FLG_LAST_NAME_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setAcslnamc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditNameFlags()
                    .getWsEditLastNameFlgs(), FLG_LAST_NAME_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setAcslnamo("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Address Line 1
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==ADDRESS-LINE-1==
        //       *      ==(SCRNVAR2)== BY ==ACSADL1==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditAddressFlags()
                .getWsEditAddressLine1Flgs(), FLG_ADDRESS_LINE_1_NOT_OK) == 0 || CobStringUtils
                .compare(container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditAddressFlags().getWsEditAddressLine1Flgs(),
                        FLG_ADDRESS_LINE_1_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setAcsadl1c(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditAddressFlags()
                    .getWsEditAddressLine1Flgs(), FLG_ADDRESS_LINE_1_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setAcsadl1o("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    State
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==STATE==
        //       *      ==(SCRNVAR2)== BY ==ACSSTTE==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditAddressFlags()
                .getWsEditStateFlgs(), FLG_STATE_NOT_OK) == 0 || CobStringUtils
                .compare(container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditAddressFlags().getWsEditStateFlgs(),
                        FLG_STATE_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setAcssttec(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditAddressFlags()
                    .getWsEditStateFlgs(), FLG_STATE_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setAcsstteo("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Address Line 2 (NO EDITS CODED AS YET)
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==ADDRESS-LINE-2==
        //       *      ==(SCRNVAR2)== BY ==ACSADL2==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditAddressFlags()
                .getWsEditAddressLine2Flgs(), FLG_ADDRESS_LINE_2_NOT_OK) == 0 || CobStringUtils
                .compare(container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditAddressFlags().getWsEditAddressLine2Flgs(),
                        FLG_ADDRESS_LINE_2_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setAcsadl2c(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditAddressFlags()
                    .getWsEditAddressLine2Flgs(), FLG_ADDRESS_LINE_2_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setAcsadl2o("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    State
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==ZIPCODE==
        //       *      ==(SCRNVAR2)== BY ==ACSZIPC==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditAddressFlags()
                .getWsEditZipcodeFlgs(), FLG_ZIPCODE_NOT_OK) == 0 || CobStringUtils
                .compare(container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditAddressFlags().getWsEditZipcodeFlgs(),
                        FLG_ZIPCODE_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setAcszipcc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditAddressFlags()
                    .getWsEditZipcodeFlgs(), FLG_ZIPCODE_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setAcszipco("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    City
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==CITY==
        //       *      ==(SCRNVAR2)== BY ==ACSCITY==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(
                container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditAddressFlags().getWsEditCityFlgs(),
                FLG_CITY_NOT_OK) == 0 || CobStringUtils.compare(container
                .getWsMiscStorage().getWsNonKeyFlags().getWsEditAddressFlags()
                .getWsEditCityFlgs(), FLG_CITY_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setAcscityc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditAddressFlags()
                    .getWsEditCityFlgs(), FLG_CITY_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setAcscityo("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Country
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==COUNTRY==
        //       *      ==(SCRNVAR2)== BY ==ACSCTRY==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditAddressFlags()
                .getWsEditCountryFlgs(), FLG_COUNTRY_NOT_OK) == 0 || CobStringUtils
                .compare(container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditAddressFlags().getWsEditCountryFlgs(),
                        FLG_COUNTRY_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setAcsctryc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditAddressFlags()
                    .getWsEditCountryFlgs(), FLG_COUNTRY_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setAcsctryo("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Phone 1 Area Code
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==PHONE-NUM-1A==
        //       *      ==(SCRNVAR2)== BY ==ACSPH1A==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditAddressFlags()
                .getWsEditPhoneNum1Flgs().getWsEditPhoneNum1aFlg(),
                FLG_PHONE_NUM_1A_NOT_OK) == 0 || CobStringUtils.compare(
                container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditAddressFlags().getWsEditPhoneNum1Flgs()
                        .getWsEditPhoneNum1aFlg(), FLG_PHONE_NUM_1A_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setAcsph1ac(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditAddressFlags()
                    .getWsEditPhoneNum1Flgs().getWsEditPhoneNum1aFlg(),
                    FLG_PHONE_NUM_1A_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setAcsph1ao("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Phone 1 Prefix
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==PHONE-NUM-1B==
        //       *      ==(SCRNVAR2)== BY ==ACSPH1B==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditAddressFlags()
                .getWsEditPhoneNum1Flgs().getWsEditPhoneNum1b(),
                FLG_PHONE_NUM_1B_NOT_OK) == 0 || CobStringUtils.compare(
                container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditAddressFlags().getWsEditPhoneNum1Flgs()
                        .getWsEditPhoneNum1b(), FLG_PHONE_NUM_1B_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setAcsph1bc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditAddressFlags()
                    .getWsEditPhoneNum1Flgs().getWsEditPhoneNum1b(),
                    FLG_PHONE_NUM_1B_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setAcsph1bo("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Phone 1 Line number
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==PHONE-NUM-1C==
        //       *      ==(SCRNVAR2)== BY ==ACSPH1C==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditAddressFlags()
                .getWsEditPhoneNum1Flgs().getWsEditPhoneNum1c(),
                FLG_PHONE_NUM_1C_NOT_OK) == 0 || CobStringUtils.compare(
                container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditAddressFlags().getWsEditPhoneNum1Flgs()
                        .getWsEditPhoneNum1c(), FLG_PHONE_NUM_1C_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setAcsph1cc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditAddressFlags()
                    .getWsEditPhoneNum1Flgs().getWsEditPhoneNum1c(),
                    FLG_PHONE_NUM_1C_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setAcsph1co("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Phone 2 Area Code
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==PHONE-NUM-2A==
        //       *      ==(SCRNVAR2)== BY ==ACSPH2A==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditAddressFlags()
                .getWsEditPhoneNum2Flgs().getWsEditPhoneNum2aFlg(),
                FLG_PHONE_NUM_2A_NOT_OK) == 0 || CobStringUtils.compare(
                container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditAddressFlags().getWsEditPhoneNum2Flgs()
                        .getWsEditPhoneNum2aFlg(), FLG_PHONE_NUM_2A_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setAcsph2ac(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditAddressFlags()
                    .getWsEditPhoneNum2Flgs().getWsEditPhoneNum2aFlg(),
                    FLG_PHONE_NUM_2A_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setAcsph2ao("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Phone 2 Prefix
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==PHONE-NUM-2B==
        //       *      ==(SCRNVAR2)== BY ==ACSPH2B==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditAddressFlags()
                .getWsEditPhoneNum2Flgs().getWsEditPhoneNum2b(),
                FLG_PHONE_NUM_2B_NOT_OK) == 0 || CobStringUtils.compare(
                container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditAddressFlags().getWsEditPhoneNum2Flgs()
                        .getWsEditPhoneNum2b(), FLG_PHONE_NUM_2B_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setAcsph2bc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditAddressFlags()
                    .getWsEditPhoneNum2Flgs().getWsEditPhoneNum2b(),
                    FLG_PHONE_NUM_2B_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setAcsph2bo("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Phone 2 Line number
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==PHONE-NUM-2C==
        //       *      ==(SCRNVAR2)== BY ==ACSPH2C==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditAddressFlags()
                .getWsEditPhoneNum2Flgs().getWsEditPhoneNum2c(),
                FLG_PHONE_NUM_2C_NOT_OK) == 0 || CobStringUtils.compare(
                container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditAddressFlags().getWsEditPhoneNum2Flgs()
                        .getWsEditPhoneNum2c(), FLG_PHONE_NUM_2C_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setAcsph2cc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditAddressFlags()
                    .getWsEditPhoneNum2Flgs().getWsEditPhoneNum2c(),
                    FLG_PHONE_NUM_2C_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setAcsph2co("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    EFT Account Id
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==PRI-CARDHOLDER==
        //       *      ==(SCRNVAR2)== BY ==ACSPFLG==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEditPriCardholder(),
                FLG_PRI_CARDHOLDER_NOT_OK) == 0 || CobStringUtils.compare(
                container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEditPriCardholder(), FLG_PRI_CARDHOLDER_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setAcspflgc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEditPriCardholder(),
                    FLG_PRI_CARDHOLDER_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setAcspflgo("*");
            }
        }
        // *
        // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
        // *
        // *    Primary Card Holder
        //       *    COPY CSSETATY REPLACING
        //       *      ==(TESTVAR1)== BY ==EFT-ACCOUNT-ID==
        //       *      ==(SCRNVAR2)== BY ==ACSEFTC==
        //       *      ==(MAPNAME3)== BY ==CACTUPA== .
        // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSETATY.cpy)
        // ******************************************************************
        // * Copyright Amazon.com, Inc. or its affiliates.
        // * All Rights Reserved.
        // *
        // * Licensed under the Apache License, Version 2.0 (the "License").
        // * You may not use this file except in compliance with the License.
        // * You may obtain a copy of the License at
        // *
        // *    http://www.apache.org/licenses/LICENSE-2.0
        // *
        // * Unless required by applicable law or agreed to in writing,
        // * software distributed under the License is distributed on an
        // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        // * either express or implied. See the License for the specific
        // * language governing permissions and limitations under the License
        // ******************************************************************
        // *    Set (TESTVAR1) to red if in error and * if blankACSHLIM
        // [T-Up#INFO][CSSETATY.cpy:19] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsNonKeyFlags().getWsEftAccountIdFlgs(),
                FLG_EFT_ACCOUNT_ID_NOT_OK) == 0 || CobStringUtils.compare(
                container.getWsMiscStorage().getWsNonKeyFlags()
                        .getWsEftAccountIdFlgs(), FLG_EFT_ACCOUNT_ID_BLANK) == 0)
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][CSSETATY.cpy:22] MOVE statement
            container.setAcseftcc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][CSSETATY.cpy:24] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsNonKeyFlags().getWsEftAccountIdFlgs(),
                    FLG_EFT_ACCOUNT_ID_BLANK) == 0) {
                // [T-Up#INFO][CSSETATY.cpy:25] MOVE statement
                container.setAcseftco("*");
            }
        }
    }

    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
    // *

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:3441] 3300-SETUP-SCREEN-ATTRS-EXIT Paragraph</p>
     */
    void _3300SetupScreenAttrsExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:3442] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:3445] 3310-PROTECT-ALL-ATTRS Paragraph</p>
     */
    void _3310ProtectAllAttrs(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:3446] MOVE statement
        container.getCactupai().setAcctsida(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcsttusa(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcrdlima(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcshlima(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcurbala(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcrcycra(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcrcydba(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setOpnyeara(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setOpnmona(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setOpndaya(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setExpyeara(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setExpmona(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setExpdaya(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setRisyeara(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setRismona(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setRisdaya(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAaddgrpa(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcstnuma(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setActssn1a(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setActssn2a(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setActssn3a(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcstfcoa(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setDobyeara(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setDobmona(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setDobdaya(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcsfnama(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcsmnama(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcslnama(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcsadl1a(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcsadl2a(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcscitya(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcssttea(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcszipca(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcsctrya(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcsph1aa(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcsph1ba(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcsph1ca(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcsph2aa(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcsph2ba(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcsph2ca(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcsgovta(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcseftca(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setAcspflga(
                container.getDfhbmsca().getDfhbmprf());
        container.getCactupai().setInfomsga(
                container.getDfhbmsca().getDfhbmprf());
    }

    // *Account Limits
    // *Account dates
    // *Customer data
    // *Date of Birth
    // *Address

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:3500] 3310-PROTECT-ALL-ATTRS-EXIT Paragraph</p>
     */
    void _3310ProtectAllAttrsExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:3501] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:3504] 3320-UNPROTECT-FEW-ATTRS Paragraph</p>
     */
    void _3320UnprotectFewAttrs(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:3506] MOVE statement
        container.getCactupai().setAcsttusa(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setAcrdlima(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setAcshlima(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setAcurbala(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setAcrcycra(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setAcrcydba(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setOpnyeara(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setOpnmona(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setOpndaya(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setExpyeara(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setExpmona(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setExpdaya(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setRisyeara(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setRismona(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setRisdaya(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setDobyeara(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setDobmona(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setDobdaya(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setAaddgrpa(
                container.getDfhbmsca().getDfhbmfse());
        // *Account Limits
        // *Account dates
        // *Open Date
        // *Expiry date
        // *Reissue date
        // *Date of Birth
        // *Customer data
        // [T-Up#INFO][COACTUPC.cbl:3535] MOVE statement
        container.getCactupai().setAcstnuma(
                container.getDfhbmsca().getDfhbmprf());
        // [T-Up#INFO][COACTUPC.cbl:3536] MOVE statement
        container.getCactupai().setActssn1a(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setActssn2a(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setActssn3a(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setAcstfcoa(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setAcsfnama(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setAcsmnama(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setAcslnama(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setAcsadl1a(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setAcsadl2a(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setAcscitya(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setAcssttea(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setAcszipca(
                container.getDfhbmsca().getDfhbmfse());
        // *Address
        // *Since most of the edits are USA specific protected country
        // [T-Up#INFO][COACTUPC.cbl:3551] MOVE statement
        container.getCactupai().setAcsctrya(
                container.getDfhbmsca().getDfhbmprf());
        // [T-Up#INFO][COACTUPC.cbl:3553] MOVE statement
        container.getCactupai().setAcsph1aa(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setAcsph1ba(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setAcsph1ca(
                container.getDfhbmsca().getDfhbmfse());
        // [T-Up#INFO][COACTUPC.cbl:3557] MOVE statement
        container.getCactupai().setAcsph2aa(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setAcsph2ba(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setAcsph2ca(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setAcsgovta(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setAcseftca(
                container.getDfhbmsca().getDfhbmfse());
        container.getCactupai().setAcspflga(
                container.getDfhbmsca().getDfhbmfse());
        // [T-Up#INFO][COACTUPC.cbl:3564] MOVE statement
        container.getCactupai().setInfomsga(
                container.getDfhbmsca().getDfhbmprf());
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:3566] 3320-UNPROTECT-FEW-ATTRS-EXIT Paragraph</p>
     */
    void _3320UnprotectFewAttrsExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:3567] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:3570] 3390-SETUP-INFOMSG-ATTRS Paragraph</p>
     */
    void _3390SetupInfomsgAttrs(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:3571] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage().getWsInfoMsg(),
                WS_NO_INFO_MESSAGE_1) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsInfoMsg(), WS_NO_INFO_MESSAGE_2) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:3572] MOVE statement
            container.getCactupai().setInfomsga(
                    container.getDfhbmsca().getDfhbmdar());
        } else {
            // [T-Up#INFO][COACTUPC.cbl:3574] MOVE statement
            container.getCactupai().setInfomsga(
                    container.getDfhbmsca().getDfhbmasb());
        }
        // [T-Up#INFO][COACTUPC.cbl:3577] IF statement
        if ((CobStringUtils.compare(container.getWsThisProgcommarea()
                .getAcctUpdateScreenData().getAcupChangeAction(),
                ACUP_CHANGES_MADE_1) == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcctUpdateScreenData().getAcupChangeAction(),
                        ACUP_CHANGES_MADE_2) == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcctUpdateScreenData().getAcupChangeAction(),
                        ACUP_CHANGES_MADE_3) == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcctUpdateScreenData().getAcupChangeAction(),
                        ACUP_CHANGES_MADE_4) == 0 || CobStringUtils.compare(
                container.getWsThisProgcommarea().getAcctUpdateScreenData()
                        .getAcupChangeAction(), ACUP_CHANGES_MADE_5) == 0)
                && !(CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getAcctUpdateScreenData().getAcupChangeAction(),
                        ACUP_CHANGES_OKAYED_AND_DONE) == 0)) {
            // [T-Up#INFO][COACTUPC.cbl:3579] MOVE statement
            container.getCactupai().setFkey12a(
                    container.getDfhbmsca().getDfhbmasb());
        }
        // [T-Up#INFO][COACTUPC.cbl:3582] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage().getWsInfoMsg(),
                PROMPT_FOR_CONFIRMATION) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:3583] MOVE statement
            container.getCactupai().setFkey05a(
                    container.getDfhbmsca().getDfhbmasb());
            // [T-Up#INFO][COACTUPC.cbl:3584] MOVE statement
            container.getCactupai().setFkey12a(
                    container.getDfhbmsca().getDfhbmasb());
        }
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:3588] 3390-SETUP-INFOMSG-ATTRS-EXIT Paragraph</p>
     */
    void _3390SetupInfomsgAttrsExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:3589] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:3593] 3400-SEND-SCREEN Paragraph</p>
     */
    void _3400SendScreen(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:3595] MOVE statement
        container
                .getCcWorkAreas()
                .getCcWorkArea()
                .setCcardNextMapset(
                        container.getWsLiterals().getLitThismapset());
        // [T-Up#INFO][COACTUPC.cbl:3596] MOVE statement
        container.getCcWorkAreas().getCcWorkArea()
                .setCcardNextMap(container.getWsLiterals().getLitThismap());
        // [T-Up#INFO][COACTUPC.cbl:3598] EXEC_CICS statement
        /*
                       EXEC CICS SEND MAP('CACTUPA')
                                      MAPSET('COACTUP')
                                      FROM(CACTUPAO)
                                      CURSOR
                                      ERASE
                                      FREEKB
                                      RESP(WS-RESP-CD)
                       END-EXEC
         */
        try {
            ((CoactupcOutputDto) task.getOutputDto())
                    .setPageName("COACTUP_CACTUPA");
            ((CoactupcOutputDto) task.getOutputDto()).setCactupao(container
                    .getCactupao());
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
        }
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:3607] 3400-SEND-SCREEN-EXIT Paragraph</p>
     */
    void _3400SendScreenExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:3608] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:3612] 9000-READ-ACCT Paragraph</p>
     */
    void _9000ReadAcct(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:3614] INITIALIZE statement
        container.getWsThisProgcommarea().setAcupOldDetails(
                CoactupcWsThisProgcommarea.CoactupcAcupOldDetails
                        .createDefaultValueInstance());
        // [T-Up#INFO][COACTUPC.cbl:3616] SET statement
        container.getWsMiscStorage().setWsInfoMsg(WS_NO_INFO_MESSAGE_1);
        // [T-Up#INFO][COACTUPC.cbl:3618] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldAcctData()
                .setAcupOldAcctId(
                        Long.parseLong(container.getCcWorkAreas()
                                .getCcWorkArea().getCcAcctId()));
        container
                .getWsMiscStorage()
                .getWsXrefRid()
                .setWsCardRidAcctId(
                        Long.parseLong(container.getCcWorkAreas()
                                .getCcWorkArea().getCcAcctId().trim()));
        // [T-Up#INFO][COACTUPC.cbl:3621] PERFORM statement
        controlManager.run(context, _9200GetcardxrefByacct,
                _9200GetcardxrefByacctExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:3624] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditAcctFlag(), FLG_ACCTFILTER_NOT_OK) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:3625] GO TO statement
            context.setGotoTarget(_9000ReadAcctExit);
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:3628] PERFORM statement
        controlManager.run(context, _9300GetacctdataByacct,
                _9300GetacctdataByacctExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:3631] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsReturnMsg(), DID_NOT_FIND_ACCT_IN_ACCTDAT) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:3632] GO TO statement
            context.setGotoTarget(_9000ReadAcctExit);
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:3635] MOVE statement
        container
                .getWsMiscStorage()
                .getWsXrefRid()
                .setWsCardRidCustId(
                        container.getCarddemoCommarea().getCdemoCustomerInfo()
                                .getCdemoCustId());
        // [T-Up#INFO][COACTUPC.cbl:3637] PERFORM statement
        controlManager.run(context, _9400GetcustdataBycust,
                _9400GetcustdataBycustExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:3640] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsReturnMsg(), DID_NOT_FIND_CUST_IN_CUSTDAT) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:3641] GO TO statement
            context.setGotoTarget(_9000ReadAcctExit);
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:3646] PERFORM statement
        controlManager.run(context, _9500StoreFetchedData,
                _9500StoreFetchedDataExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:3651] 9000-READ-ACCT-EXIT Paragraph</p>
     */
    void _9000ReadAcctExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:3652] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:3654] 9200-GETCARDXREF-BYACCT Paragraph</p>
     */
    void _9200GetcardxrefByacct(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // *    Read the Card file. Access via alternate index ACCTID
        // *
        // [T-Up#INFO][COACTUPC.cbl:3658] EXEC_CICS statement
        /*
                       EXEC CICS READ
                            DATASET   (LIT-CARDXREFNAME-ACCT-PATH)
                            RIDFLD    (WS-CARD-RID-ACCT-ID-X)
                            KEYLENGTH (LENGTH OF WS-CARD-RID-ACCT-ID-X)
                            INTO      (CARD-XREF-RECORD)
                            LENGTH    (LENGTH OF CARD-XREF-RECORD)
                            RESP      (WS-RESP-CD)
                            RESP2     (WS-REAS-CD)
                       END-EXEC
         */
        try {
            AwsM2CarddemoCardxrefVsamKsdsDto awsM2CarddemoCardxrefVsamKsdsDto = recordKeyAccessor
                    .alternateIndex().read(
                            "awsM2CarddemoCardxrefVsamKsdsDao",
                            "Aix11",
                            new BigDecimal(container.getWsMiscStorage()
                                    .getWsXrefRid().getWsCardRidAcctIdX()));
            container
                    .setCardXrefRecord(CardXrefRecordToAwsM2CarddemoCardxrefVsamKsdsDto.INSTANCE
                            .toSource(awsM2CarddemoCardxrefVsamKsdsDto));
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsReasCd(task.getLastResp2());
        }
        // [T-Up#INFO][COACTUPC.cbl:3668] EVALUATE statement
        if (container.getWsMiscStorage().getWsCicsProcessngVars().getWsRespCd() == 0) {
            // [T-Up#INFO][COACTUPC.cbl:3670] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCustomerInfo()
                    .setCdemoCustId(
                            container.getCardXrefRecord().getXrefCustId());
            // [T-Up#INFO][COACTUPC.cbl:3671] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCardInfo()
                    .setCdemoCardNum(
                            Long.parseLong(container.getCardXrefRecord()
                                    .getXrefCardNum().trim()));
        } else if (container.getWsMiscStorage().getWsCicsProcessngVars()
                .getWsRespCd() == 13) {
            // [T-Up#INFO][COACTUPC.cbl:3673] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:3674] SET statement
            container.getWsMiscStorage().setWsEditAcctFlag(
                    FLG_ACCTFILTER_NOT_OK);
            // [T-Up#INFO][COACTUPC.cbl:3675] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:3676] MOVE statement
                container
                        .getWsMiscStorage()
                        .getWsFileErrorMessage()
                        .setErrorResp(
                                StringUtils.leftPad(
                                        String.valueOf(Math.abs(container
                                                .getWsMiscStorage()
                                                .getWsCicsProcessngVars()
                                                .getWsRespCd())), 9, '0'));
                // [T-Up#INFO][COACTUPC.cbl:3677] MOVE statement
                container
                        .getWsMiscStorage()
                        .getWsFileErrorMessage()
                        .setErrorResp2(
                                StringUtils.leftPad(
                                        String.valueOf(Math.abs(container
                                                .getWsMiscStorage()
                                                .getWsCicsProcessngVars()
                                                .getWsReasCd())), 9, '0'));
                // [T-Up#INFO][COACTUPC.cbl:3678] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1
                        .append("Account:")
                        .append(container.getWsMiscStorage().getWsXrefRid()
                                .getWsCardRidAcctIdX())
                        .append(" not found in")
                        .append(" Cross ref file.  Resp:")
                        .append(container.getWsMiscStorage()
                                .getWsFileErrorMessage().getErrorResp())
                        .append(" Reas:")
                        .append(container.getWsMiscStorage()
                                .getWsFileErrorMessage().getErrorResp2());
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
        } else {
            // [T-Up#INFO][COACTUPC.cbl:3691] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:3692] SET statement
            container.getWsMiscStorage().setWsEditAcctFlag(
                    FLG_ACCTFILTER_NOT_OK);
            // [T-Up#INFO][COACTUPC.cbl:3693] MOVE statement
            container.getWsMiscStorage().getWsFileErrorMessage()
                    .setErrorOpname("READ");
            // [T-Up#INFO][COACTUPC.cbl:3694] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorFile(
                            container.getWsLiterals()
                                    .getLitCardxrefnameAcctPath());
            // [T-Up#INFO][COACTUPC.cbl:3695] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorResp(
                            StringUtils.leftPad(
                                    String.valueOf(Math.abs(container
                                            .getWsMiscStorage()
                                            .getWsCicsProcessngVars()
                                            .getWsRespCd())), 9, '0'));
            // [T-Up#INFO][COACTUPC.cbl:3696] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorResp2(
                            StringUtils.leftPad(
                                    String.valueOf(Math.abs(container
                                            .getWsMiscStorage()
                                            .getWsCicsProcessngVars()
                                            .getWsReasCd())), 9, '0'));
            // [T-Up#INFO][COACTUPC.cbl:3697] MOVE statement
            container.getWsMiscStorage().setWsReturnMsg(
                    container.getWsMiscStorage().getWsFileErrorMessage().get());
        }
    }

    // *                                              WS-LONG-MSG
    // *          PERFORM SEND-LONG-TEXT

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:3702] 9200-GETCARDXREF-BYACCT-EXIT Paragraph</p>
     */
    void _9200GetcardxrefByacctExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:3703] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:3705] 9300-GETACCTDATA-BYACCT Paragraph</p>
     */
    void _9300GetacctdataByacct(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:3707] EXEC_CICS statement
        /*
                       EXEC CICS READ
                            DATASET   (LIT-ACCTFILENAME)
                            RIDFLD    (WS-CARD-RID-ACCT-ID-X)
                            KEYLENGTH (LENGTH OF WS-CARD-RID-ACCT-ID-X)
                            INTO      (ACCOUNT-RECORD)
                            LENGTH    (LENGTH OF ACCOUNT-RECORD)
                            RESP      (WS-RESP-CD)
                            RESP2     (WS-REAS-CD)
                       END-EXEC
         */
        try {
            AwsM2CarddemoAcctdataVsamKsdsDto awsM2CarddemoAcctdataVsamKsdsDto = recordKeyAccessor
                    .read("awsM2CarddemoAcctdataVsamKsdsDao", new BigDecimal(
                            container.getWsMiscStorage().getWsXrefRid()
                                    .getWsCardRidAcctIdX()));
            container
                    .setAccountRecord(AccountRecordToAwsM2CarddemoAcctdataVsamKsdsDto.INSTANCE
                            .toSource(awsM2CarddemoAcctdataVsamKsdsDto));
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsReasCd(task.getLastResp2());
        }
        // [T-Up#INFO][COACTUPC.cbl:3717] EVALUATE statement
        if (container.getWsMiscStorage().getWsCicsProcessngVars().getWsRespCd() == 0) {
            // [T-Up#INFO][COACTUPC.cbl:3719] SET statement
            container.getWsMiscStorage().getWsFileReadFlags()
                    .setWsAccountMasterReadFlag(FOUND_ACCT_IN_MASTER);
        } else if (container.getWsMiscStorage().getWsCicsProcessngVars()
                .getWsRespCd() == 13) {
            // [T-Up#INFO][COACTUPC.cbl:3721] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:3722] SET statement
            container.getWsMiscStorage().setWsEditAcctFlag(
                    FLG_ACCTFILTER_NOT_OK);
            // *           SET DID-NOT-FIND-ACCT-IN-ACCTDAT TO TRUE
            // [T-Up#INFO][COACTUPC.cbl:3724] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:3725] MOVE statement
                container
                        .getWsMiscStorage()
                        .getWsFileErrorMessage()
                        .setErrorResp(
                                StringUtils.leftPad(
                                        String.valueOf(Math.abs(container
                                                .getWsMiscStorage()
                                                .getWsCicsProcessngVars()
                                                .getWsRespCd())), 9, '0'));
                // [T-Up#INFO][COACTUPC.cbl:3726] MOVE statement
                container
                        .getWsMiscStorage()
                        .getWsFileErrorMessage()
                        .setErrorResp2(
                                StringUtils.leftPad(
                                        String.valueOf(Math.abs(container
                                                .getWsMiscStorage()
                                                .getWsCicsProcessngVars()
                                                .getWsReasCd())), 9, '0'));
                // [T-Up#INFO][COACTUPC.cbl:3727] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1
                        .append("Account:")
                        .append(container.getWsMiscStorage().getWsXrefRid()
                                .getWsCardRidAcctIdX())
                        .append(" not found in")
                        .append(" Acct Master file.Resp:")
                        .append(container.getWsMiscStorage()
                                .getWsFileErrorMessage().getErrorResp())
                        .append(" Reas:")
                        .append(container.getWsMiscStorage()
                                .getWsFileErrorMessage().getErrorResp2());
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
        } else {
            // *
            // [T-Up#INFO][COACTUPC.cbl:3741] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:3742] SET statement
            container.getWsMiscStorage().setWsEditAcctFlag(
                    FLG_ACCTFILTER_NOT_OK);
            // [T-Up#INFO][COACTUPC.cbl:3743] MOVE statement
            container.getWsMiscStorage().getWsFileErrorMessage()
                    .setErrorOpname("READ");
            // [T-Up#INFO][COACTUPC.cbl:3744] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorFile(
                            container.getWsLiterals().getLitAcctfilename());
            // [T-Up#INFO][COACTUPC.cbl:3745] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorResp(
                            StringUtils.leftPad(
                                    String.valueOf(Math.abs(container
                                            .getWsMiscStorage()
                                            .getWsCicsProcessngVars()
                                            .getWsRespCd())), 9, '0'));
            // [T-Up#INFO][COACTUPC.cbl:3746] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorResp2(
                            StringUtils.leftPad(
                                    String.valueOf(Math.abs(container
                                            .getWsMiscStorage()
                                            .getWsCicsProcessngVars()
                                            .getWsReasCd())), 9, '0'));
            // [T-Up#INFO][COACTUPC.cbl:3747] MOVE statement
            container.getWsMiscStorage().setWsReturnMsg(
                    container.getWsMiscStorage().getWsFileErrorMessage().get());
        }
    }

    // *                                              WS-LONG-MSG
    // *           PERFORM SEND-LONG-TEXT

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:3752] 9300-GETACCTDATA-BYACCT-EXIT Paragraph</p>
     */
    void _9300GetacctdataByacctExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:3753] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:3756] 9400-GETCUSTDATA-BYCUST Paragraph</p>
     */
    void _9400GetcustdataBycust(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:3757] EXEC_CICS statement
        /*
                       EXEC CICS READ
                            DATASET   (LIT-CUSTFILENAME)
                            RIDFLD    (WS-CARD-RID-CUST-ID-X)
                            KEYLENGTH (LENGTH OF WS-CARD-RID-CUST-ID-X)
                            INTO      (CUSTOMER-RECORD)
                            LENGTH    (LENGTH OF CUSTOMER-RECORD)
                            RESP      (WS-RESP-CD)
                            RESP2     (WS-REAS-CD)
                       END-EXEC
         */
        try {
            AwsM2CarddemoCustdataVsamKsdsDto awsM2CarddemoCustdataVsamKsdsDto = recordKeyAccessor
                    .read("awsM2CarddemoCustdataVsamKsdsDao", new BigDecimal(
                            container.getWsMiscStorage().getWsXrefRid()
                                    .getWsCardRidCustIdX()));
            container
                    .setCustomerRecord(CustomerRecordToAwsM2CarddemoCustdataVsamKsdsDto.INSTANCE
                            .toSource(awsM2CarddemoCustdataVsamKsdsDto));
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsReasCd(task.getLastResp2());
        }
        // [T-Up#INFO][COACTUPC.cbl:3767] EVALUATE statement
        if (container.getWsMiscStorage().getWsCicsProcessngVars().getWsRespCd() == 0) {
            // [T-Up#INFO][COACTUPC.cbl:3769] SET statement
            container.getWsMiscStorage().getWsFileReadFlags()
                    .setWsCustMasterReadFlag(FOUND_CUST_IN_MASTER);
        } else if (container.getWsMiscStorage().getWsCicsProcessngVars()
                .getWsRespCd() == 13) {
            // [T-Up#INFO][COACTUPC.cbl:3771] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:3772] SET statement
            container.getWsMiscStorage().setWsEditCustFlag(
                    FLG_CUSTFILTER_NOT_OK);
            // *           SET DID-NOT-FIND-CUST-IN-CUSTDAT TO TRUE
            // [T-Up#INFO][COACTUPC.cbl:3774] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorResp(
                            StringUtils.leftPad(
                                    String.valueOf(Math.abs(container
                                            .getWsMiscStorage()
                                            .getWsCicsProcessngVars()
                                            .getWsRespCd())), 9, '0'));
            // [T-Up#INFO][COACTUPC.cbl:3775] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorResp2(
                            StringUtils.leftPad(
                                    String.valueOf(Math.abs(container
                                            .getWsMiscStorage()
                                            .getWsCicsProcessngVars()
                                            .getWsReasCd())), 9, '0'));
            // [T-Up#INFO][COACTUPC.cbl:3776] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:3777] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1
                        .append("CustId:")
                        .append(container.getWsMiscStorage().getWsXrefRid()
                                .getWsCardRidCustIdX())
                        .append(" not found")
                        .append(" in customer master.Resp: ")
                        .append(container.getWsMiscStorage()
                                .getWsFileErrorMessage().getErrorResp())
                        .append(" REAS:")
                        .append(container.getWsMiscStorage()
                                .getWsFileErrorMessage().getErrorResp2());
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
        } else {
            // [T-Up#INFO][COACTUPC.cbl:3790] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:3791] SET statement
            container.getWsMiscStorage().setWsEditCustFlag(
                    FLG_CUSTFILTER_NOT_OK);
            // [T-Up#INFO][COACTUPC.cbl:3792] MOVE statement
            container.getWsMiscStorage().getWsFileErrorMessage()
                    .setErrorOpname("READ");
            // [T-Up#INFO][COACTUPC.cbl:3793] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorFile(
                            container.getWsLiterals().getLitCustfilename());
            // [T-Up#INFO][COACTUPC.cbl:3794] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorResp(
                            StringUtils.leftPad(
                                    String.valueOf(Math.abs(container
                                            .getWsMiscStorage()
                                            .getWsCicsProcessngVars()
                                            .getWsRespCd())), 9, '0'));
            // [T-Up#INFO][COACTUPC.cbl:3795] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorResp2(
                            StringUtils.leftPad(
                                    String.valueOf(Math.abs(container
                                            .getWsMiscStorage()
                                            .getWsCicsProcessngVars()
                                            .getWsReasCd())), 9, '0'));
            // [T-Up#INFO][COACTUPC.cbl:3796] MOVE statement
            container.getWsMiscStorage().setWsReturnMsg(
                    container.getWsMiscStorage().getWsFileErrorMessage().get());
        }
    }

    // *                                              WS-LONG-MSG
    // *           PERFORM SEND-LONG-TEXT

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:3801] 9400-GETCUSTDATA-BYCUST-EXIT Paragraph</p>
     */
    void _9400GetcustdataBycustExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:3802] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:3805] 9500-STORE-FETCHED-DATA Paragraph</p>
     */
    void _9500StoreFetchedData(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // *    Store Context in Commarea
        // *
        // [T-Up#INFO][COACTUPC.cbl:3809] MOVE statement
        container.getCarddemoCommarea().getCdemoAccountInfo()
                .setCdemoAcctId(container.getAccountRecord().getAcctId());
        // [T-Up#INFO][COACTUPC.cbl:3810] MOVE statement
        container.getCarddemoCommarea().getCdemoCustomerInfo()
                .setCdemoCustId(container.getCustomerRecord().getCustId());
        // [T-Up#INFO][COACTUPC.cbl:3811] MOVE statement
        container
                .getCarddemoCommarea()
                .getCdemoCustomerInfo()
                .setCdemoCustFname(
                        container.getCustomerRecord().getCustFirstName());
        // [T-Up#INFO][COACTUPC.cbl:3812] MOVE statement
        container
                .getCarddemoCommarea()
                .getCdemoCustomerInfo()
                .setCdemoCustMname(
                        container.getCustomerRecord().getCustMiddleName());
        // [T-Up#INFO][COACTUPC.cbl:3813] MOVE statement
        container
                .getCarddemoCommarea()
                .getCdemoCustomerInfo()
                .setCdemoCustLname(
                        container.getCustomerRecord().getCustLastName());
        // [T-Up#INFO][COACTUPC.cbl:3814] MOVE statement
        container
                .getCarddemoCommarea()
                .getCdemoAccountInfo()
                .setCdemoAcctStatus(
                        container.getAccountRecord().getAcctActiveStatus());
        // [T-Up#INFO][COACTUPC.cbl:3815] MOVE statement
        container
                .getCarddemoCommarea()
                .getCdemoCardInfo()
                .setCdemoCardNum(
                        Long.parseLong(container.getCardXrefRecord()
                                .getXrefCardNum().trim()));
        // [T-Up#INFO][COACTUPC.cbl:3817] INITIALIZE statement
        container.getWsThisProgcommarea().setAcupOldDetails(
                CoactupcWsThisProgcommarea.CoactupcAcupOldDetails
                        .createDefaultValueInstance());
        // ******************************************************************
        // *    Account Master data
        // ******************************************************************
        // [T-Up#INFO][COACTUPC.cbl:3821] MOVE statement
        container.getWsThisProgcommarea().getAcupOldDetails()
                .getAcupOldAcctData()
                .setAcupOldAcctId(container.getAccountRecord().getAcctId());
        // * Active Status
        // [T-Up#INFO][COACTUPC.cbl:3823] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldAcctData()
                .setAcupOldActiveStatus(
                        container.getAccountRecord().getAcctActiveStatus());
        // * Current Balance
        // [T-Up#INFO][COACTUPC.cbl:3825] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldAcctData()
                .setAcupOldCurrBalN(
                        container.getAccountRecord().getAcctCurrBal());
        // * Credit Limit
        // [T-Up#INFO][COACTUPC.cbl:3827] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldAcctData()
                .setAcupOldCreditLimitN(
                        container.getAccountRecord().getAcctCreditLimit());
        // * Cash Limit
        // [T-Up#INFO][COACTUPC.cbl:3829] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldAcctData()
                .setAcupOldCashCreditLimitN(
                        container.getAccountRecord().getAcctCashCreditLimit());
        // * Current Cycle Credit
        // [T-Up#INFO][COACTUPC.cbl:3831] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldAcctData()
                .setAcupOldCurrCycCreditN(
                        container.getAccountRecord().getAcctCurrCycCredit());
        // * Current Cycle Debit
        // [T-Up#INFO][COACTUPC.cbl:3833] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldAcctData()
                .setAcupOldCurrCycDebitN(
                        container.getAccountRecord().getAcctCurrCycDebit());
        // * Open date
        // *    MOVE ACCT-OPEN-DATE           TO ACUP-OLD-OPEN-DATE
        // [T-Up#INFO][COACTUPC.cbl:3836] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldAcctData()
                .setAcupOldOpenYear(
                        container.getAccountRecord().getAcctOpenDate()
                                .substring(0, 4));
        // [T-Up#INFO][COACTUPC.cbl:3837] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldAcctData()
                .setAcupOldOpenMon(
                        container.getAccountRecord().getAcctOpenDate()
                                .substring(5, 7));
        // [T-Up#INFO][COACTUPC.cbl:3838] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldAcctData()
                .setAcupOldOpenDay(
                        container.getAccountRecord().getAcctOpenDate()
                                .substring(8, 10));
        // * Expiry date
        // *    MOVE ACCT-EXPIRAION-DATE      TO ACUP-OLD-EXPIRAION-DATE
        // [T-Up#INFO][COACTUPC.cbl:3841] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldAcctData()
                .setAcupOldExpYear(
                        container.getAccountRecord().getAcctExpiraionDate()
                                .substring(0, 4));
        // [T-Up#INFO][COACTUPC.cbl:3842] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldAcctData()
                .setAcupOldExpMon(
                        container.getAccountRecord().getAcctExpiraionDate()
                                .substring(5, 7));
        // [T-Up#INFO][COACTUPC.cbl:3843] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldAcctData()
                .setAcupOldExpDay(
                        container.getAccountRecord().getAcctExpiraionDate()
                                .substring(8, 10));
        // * Reissue date
        // *    MOVE ACCT-REISSUE-DATE        TO ACUP-OLD-REISSUE-DATE
        // [T-Up#INFO][COACTUPC.cbl:3847] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldAcctData()
                .setAcupOldReissueYear(
                        container.getAccountRecord().getAcctReissueDate()
                                .substring(0, 4));
        // [T-Up#INFO][COACTUPC.cbl:3848] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldAcctData()
                .setAcupOldReissueMon(
                        container.getAccountRecord().getAcctReissueDate()
                                .substring(5, 7));
        // [T-Up#INFO][COACTUPC.cbl:3849] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldAcctData()
                .setAcupOldReissueDay(
                        container.getAccountRecord().getAcctReissueDate()
                                .substring(8, 10));
        // * Account Group
        // [T-Up#INFO][COACTUPC.cbl:3851] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldAcctData()
                .setAcupOldGroupId(
                        container.getAccountRecord().getAcctGroupId());
        // ******************************************************************
        // *    Customer Master data
        // ******************************************************************
        // *Customer Id (actually not editable)
        // [T-Up#INFO][COACTUPC.cbl:3856] MOVE statement
        container.getWsThisProgcommarea().getAcupOldDetails()
                .getAcupOldCustData()
                .setAcupOldCustId(container.getCustomerRecord().getCustId());
        // *Social Security Number
        // [T-Up#INFO][COACTUPC.cbl:3858] MOVE statement
        container.getWsThisProgcommarea().getAcupOldDetails()
                .getAcupOldCustData()
                .setAcupOldCustSsn(container.getCustomerRecord().getCustSsn());
        // *Date of birth
        // *    MOVE CUST-DOB-YYYY-MM-DD      TO ACUP-OLD-CUST-DOB-YYYY-MM-DD
        // [T-Up#INFO][COACTUPC.cbl:3861] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldCustData()
                .setAcupOldCustDobYear(
                        container.getCustomerRecord().getCustDobYyyyMmDd()
                                .substring(0, 4));
        // [T-Up#INFO][COACTUPC.cbl:3862] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldCustData()
                .setAcupOldCustDobMon(
                        container.getCustomerRecord().getCustDobYyyyMmDd()
                                .substring(5, 7));
        // [T-Up#INFO][COACTUPC.cbl:3863] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldCustData()
                .setAcupOldCustDobDay(
                        container.getCustomerRecord().getCustDobYyyyMmDd()
                                .substring(8, 10));
        // *FICO
        // [T-Up#INFO][COACTUPC.cbl:3865] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldCustData()
                .setAcupOldCustFicoScore(
                        container.getCustomerRecord().getCustFicoCreditScore());
        // *First Name
        // [T-Up#INFO][COACTUPC.cbl:3867] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldCustData()
                .setAcupOldCustFirstName(
                        container.getCustomerRecord().getCustFirstName());
        // *Middle Name
        // [T-Up#INFO][COACTUPC.cbl:3869] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldCustData()
                .setAcupOldCustMiddleName(
                        container.getCustomerRecord().getCustMiddleName());
        // *Last Name
        // [T-Up#INFO][COACTUPC.cbl:3871] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldCustData()
                .setAcupOldCustLastName(
                        container.getCustomerRecord().getCustLastName());
        // *Address
        // [T-Up#INFO][COACTUPC.cbl:3873] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldCustData()
                .setAcupOldCustAddrLine1(
                        container.getCustomerRecord().getCustAddrLine1());
        // [T-Up#INFO][COACTUPC.cbl:3874] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldCustData()
                .setAcupOldCustAddrLine2(
                        container.getCustomerRecord().getCustAddrLine2());
        // [T-Up#INFO][COACTUPC.cbl:3875] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldCustData()
                .setAcupOldCustAddrLine3(
                        container.getCustomerRecord().getCustAddrLine3());
        // [T-Up#INFO][COACTUPC.cbl:3876] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldCustData()
                .setAcupOldCustAddrStateCd(
                        container.getCustomerRecord().getCustAddrStateCd());
        // [T-Up#INFO][COACTUPC.cbl:3877] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldCustData()
                .setAcupOldCustAddrCountryCd(
                        container.getCustomerRecord().getCustAddrCountryCd());
        // [T-Up#INFO][COACTUPC.cbl:3879] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldCustData()
                .setAcupOldCustAddrZip(
                        container.getCustomerRecord().getCustAddrZip());
        // [T-Up#INFO][COACTUPC.cbl:3880] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldCustData()
                .setAcupOldCustPhoneNum1(
                        container.getCustomerRecord().getCustPhoneNum1());
        // [T-Up#INFO][COACTUPC.cbl:3881] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldCustData()
                .setAcupOldCustPhoneNum2(
                        container.getCustomerRecord().getCustPhoneNum2());
        // *Government Id
        // [T-Up#INFO][COACTUPC.cbl:3883] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldCustData()
                .setAcupOldCustGovtIssuedId(
                        container.getCustomerRecord().getCustGovtIssuedId());
        // *EFT Code
        // [T-Up#INFO][COACTUPC.cbl:3885] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldCustData()
                .setAcupOldCustEftAccountId(
                        container.getCustomerRecord().getCustEftAccountId());
        // *Primary Holder Indicator
        // [T-Up#INFO][COACTUPC.cbl:3887] MOVE statement
        container
                .getWsThisProgcommarea()
                .getAcupOldDetails()
                .getAcupOldCustData()
                .setAcupOldCustPriHolderInd(
                        container.getCustomerRecord().getCustPriCardHolderInd());
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:3889] 9500-STORE-FETCHED-DATA-EXIT Paragraph</p>
     */
    void _9500StoreFetchedDataExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:3890] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:3892] 9600-WRITE-PROCESSING Paragraph</p>
     */
    void _9600WriteProcessing(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // *    Read the account file for update
        // [T-Up#INFO][COACTUPC.cbl:3896] MOVE statement
        container
                .getWsMiscStorage()
                .getWsXrefRid()
                .setWsCardRidAcctId(
                        Long.parseLong(container.getCcWorkAreas()
                                .getCcWorkArea().getCcAcctId().trim()));
        // [T-Up#INFO][COACTUPC.cbl:3898] EXEC_CICS statement
        /*
                       EXEC CICS READ
                            FILE      (LIT-ACCTFILENAME)
                            UPDATE
                            RIDFLD    (WS-CARD-RID-ACCT-ID-X)
                            KEYLENGTH (LENGTH OF WS-CARD-RID-ACCT-ID-X)
                            INTO      (ACCOUNT-RECORD)
                            LENGTH    (LENGTH OF ACCOUNT-RECORD)
                            RESP      (WS-RESP-CD)
                            RESP2     (WS-REAS-CD)
                       END-EXEC
         */
        try {
            AwsM2CarddemoAcctdataVsamKsdsDto awsM2CarddemoAcctdataVsamKsdsDto = recordKeyAccessor
                    .readForUpdate("awsM2CarddemoAcctdataVsamKsdsDao",
                            new BigDecimal(container.getWsMiscStorage()
                                    .getWsXrefRid().getWsCardRidAcctIdX()));
            container
                    .setAccountRecord(AccountRecordToAwsM2CarddemoAcctdataVsamKsdsDto.INSTANCE
                            .toSource(awsM2CarddemoAcctdataVsamKsdsDto));
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsReasCd(task.getLastResp2());
        }
        // *****************************************************************
        // *    Could we lock the account record ?
        // *****************************************************************
        // [T-Up#INFO][COACTUPC.cbl:3911] IF statement
        if (container.getWsMiscStorage().getWsCicsProcessngVars().getWsRespCd() == 0) {
            // [T-Up#INFO][COACTUPC.cbl:3912] CONTINUE statement
        } else {
            // [T-Up#INFO][COACTUPC.cbl:3914] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:3915] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:3916] SET statement
                container.getWsMiscStorage().setWsReturnMsg(
                        COULD_NOT_LOCK_ACCT_FOR_UPDATE);
            }
            // [T-Up#INFO][COACTUPC.cbl:3918] GO TO statement
            context.setGotoTarget(_9600WriteProcessingExit);
            return;
        }
        // *    Read the customer file for update
        // [T-Up#INFO][COACTUPC.cbl:3923] MOVE statement
        container
                .getWsMiscStorage()
                .getWsXrefRid()
                .setWsCardRidCustId(
                        container.getCarddemoCommarea().getCdemoCustomerInfo()
                                .getCdemoCustId());
        // [T-Up#INFO][COACTUPC.cbl:3925] EXEC_CICS statement
        /*
                       EXEC CICS READ
                            FILE      (LIT-CUSTFILENAME)
                            UPDATE
                            RIDFLD    (WS-CARD-RID-CUST-ID-X)
                            KEYLENGTH (LENGTH OF WS-CARD-RID-CUST-ID-X)
                            INTO      (CUSTOMER-RECORD)
                            LENGTH    (LENGTH OF CUSTOMER-RECORD)
                            RESP      (WS-RESP-CD)
                            RESP2     (WS-REAS-CD)
                       END-EXEC
         */
        try {
            AwsM2CarddemoCustdataVsamKsdsDto awsM2CarddemoCustdataVsamKsdsDto = recordKeyAccessor
                    .readForUpdate("awsM2CarddemoCustdataVsamKsdsDao",
                            new BigDecimal(container.getWsMiscStorage()
                                    .getWsXrefRid().getWsCardRidCustIdX()));
            container
                    .setCustomerRecord(CustomerRecordToAwsM2CarddemoCustdataVsamKsdsDto.INSTANCE
                            .toSource(awsM2CarddemoCustdataVsamKsdsDto));
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsReasCd(task.getLastResp2());
        }
        // *****************************************************************
        // *    Could we lock the customer record ?
        // *****************************************************************
        // [T-Up#INFO][COACTUPC.cbl:3938] IF statement
        if (container.getWsMiscStorage().getWsCicsProcessngVars().getWsRespCd() == 0) {
            // [T-Up#INFO][COACTUPC.cbl:3939] CONTINUE statement
        } else {
            // [T-Up#INFO][COACTUPC.cbl:3941] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTUPC.cbl:3942] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTUPC.cbl:3943] SET statement
                container.getWsMiscStorage().setWsReturnMsg(
                        COULD_NOT_LOCK_CUST_FOR_UPDATE);
            }
            // [T-Up#INFO][COACTUPC.cbl:3945] GO TO statement
            context.setGotoTarget(_9600WriteProcessingExit);
            return;
        }
        // *****************************************************************
        // *    Did someone change the record while we were out ?
        // *****************************************************************
        // [T-Up#INFO][COACTUPC.cbl:3951] PERFORM statement
        controlManager.run(context, _9700CheckChangeInRec,
                _9700CheckChangeInRecExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTUPC.cbl:3954] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsReturnMsg(), DATA_WAS_CHANGED_BEFORE_UPDATE) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:3955] GO TO statement
            context.setGotoTarget(_9600WriteProcessingExit);
            return;
        }
        // *****************************************************************
        // * Prepare the update
        // *****************************************************************
        // [T-Up#INFO][COACTUPC.cbl:3960] INITIALIZE statement
        container.getWsMiscStorage().setAcctUpdateRecord(
                CoactupcWsMiscStorage.CoactupcAcctUpdateRecord
                        .createDefaultValueInstance());
        // ******************************************************************
        // *    Account Master data
        // ******************************************************************
        // [T-Up#INFO][COACTUPC.cbl:3964] MOVE statement
        container
                .getWsMiscStorage()
                .getAcctUpdateRecord()
                .setAcctUpdateId(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewAcctData().getAcupNewAcctId());
        // * Active Status
        // [T-Up#INFO][COACTUPC.cbl:3966] MOVE statement
        container
                .getWsMiscStorage()
                .getAcctUpdateRecord()
                .setAcctUpdateActiveStatus(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewAcctData().getAcupNewActiveStatus());
        // * Current Balance
        // [T-Up#INFO][COACTUPC.cbl:3968] MOVE statement
        container
                .getWsMiscStorage()
                .getAcctUpdateRecord()
                .setAcctUpdateCurrBal(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewAcctData().getAcupNewCurrBalN());
        // * Credit Limit
        // [T-Up#INFO][COACTUPC.cbl:3970] MOVE statement
        container
                .getWsMiscStorage()
                .getAcctUpdateRecord()
                .setAcctUpdateCreditLimit(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewAcctData().getAcupNewCreditLimitN());
        // * Cash Limit
        // [T-Up#INFO][COACTUPC.cbl:3972] MOVE statement
        container
                .getWsMiscStorage()
                .getAcctUpdateRecord()
                .setAcctUpdateCashCreditLimit(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewAcctData()
                                .getAcupNewCashCreditLimitN());
        // * Current Cycle Credit
        // [T-Up#INFO][COACTUPC.cbl:3975] MOVE statement
        container
                .getWsMiscStorage()
                .getAcctUpdateRecord()
                .setAcctUpdateCurrCycCredit(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewAcctData()
                                .getAcupNewCurrCycCreditN());
        // * Current Cycle Debit
        // [T-Up#INFO][COACTUPC.cbl:3978] MOVE statement
        container
                .getWsMiscStorage()
                .getAcctUpdateRecord()
                .setAcctUpdateCurrCycDebit(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewAcctData().getAcupNewCurrCycDebitN());
        // * Open date
        // [T-Up#INFO][COACTUPC.cbl:3980] STRING statement
        tempStringBuilder1 = new StringBuilder();
        tempStringBuilder2 = new StringBuilder(container.getWsMiscStorage()
                .getAcctUpdateRecord().getAcctUpdateOpenDate());
        tempStringBuilder1
                .append(container.getWsThisProgcommarea().getAcupNewDetails()
                        .getAcupNewAcctData().getAcupNewOpenYear())
                .append("-")
                .append(container.getWsThisProgcommarea().getAcupNewDetails()
                        .getAcupNewAcctData().getAcupNewOpenMon())
                .append("-")
                .append(container.getWsThisProgcommarea().getAcupNewDetails()
                        .getAcupNewAcctData().getAcupNewOpenDay());
        if (tempStringBuilder1.length() <= 10) {
            tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                    tempStringBuilder1.toString());
            container.getWsMiscStorage().getAcctUpdateRecord()
                    .setAcctUpdateOpenDate(tempStringBuilder2.toString());
        }
        // * Expiry date
        // [T-Up#INFO][COACTUPC.cbl:3988] STRING statement
        tempStringBuilder1 = new StringBuilder();
        tempStringBuilder2 = new StringBuilder(container.getWsMiscStorage()
                .getAcctUpdateRecord().getAcctUpdateExpiraionDate());
        tempStringBuilder1
                .append(container.getWsThisProgcommarea().getAcupNewDetails()
                        .getAcupNewAcctData().getAcupNewExpYear())
                .append("-")
                .append(container.getWsThisProgcommarea().getAcupNewDetails()
                        .getAcupNewAcctData().getAcupNewExpMon())
                .append("-")
                .append(container.getWsThisProgcommarea().getAcupNewDetails()
                        .getAcupNewAcctData().getAcupNewExpDay());
        if (tempStringBuilder1.length() <= 10) {
            tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                    tempStringBuilder1.toString());
            container.getWsMiscStorage().getAcctUpdateRecord()
                    .setAcctUpdateExpiraionDate(tempStringBuilder2.toString());
        }
        // * Reissue date
        // [T-Up#INFO][COACTUPC.cbl:3997] MOVE statement
        container
                .getWsMiscStorage()
                .getAcctUpdateRecord()
                .setAcctUpdateReissueDate(
                        container.getAccountRecord().getAcctReissueDate());
        // [T-Up#INFO][COACTUPC.cbl:3998] STRING statement
        tempStringBuilder1 = new StringBuilder();
        tempStringBuilder2 = new StringBuilder(container.getWsMiscStorage()
                .getAcctUpdateRecord().getAcctUpdateReissueDate());
        tempStringBuilder1
                .append(container.getWsThisProgcommarea().getAcupNewDetails()
                        .getAcupNewAcctData().getAcupNewReissueYear())
                .append("-")
                .append(container.getWsThisProgcommarea().getAcupNewDetails()
                        .getAcupNewAcctData().getAcupNewReissueMon())
                .append("-")
                .append(container.getWsThisProgcommarea().getAcupNewDetails()
                        .getAcupNewAcctData().getAcupNewReissueDay());
        if (tempStringBuilder1.length() <= 10) {
            tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                    tempStringBuilder1.toString());
            container.getWsMiscStorage().getAcctUpdateRecord()
                    .setAcctUpdateReissueDate(tempStringBuilder2.toString());
        }
        // * Account Group
        // [T-Up#INFO][COACTUPC.cbl:4006] MOVE statement
        container
                .getWsMiscStorage()
                .getAcctUpdateRecord()
                .setAcctUpdateGroupId(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewAcctData().getAcupNewGroupId());
        // ******************************************************************
        // *    Customer data
        // ******************************************************************
        // [T-Up#INFO][COACTUPC.cbl:4011] INITIALIZE statement
        container.getWsMiscStorage().setCustUpdateRecord(
                CoactupcWsMiscStorage.CoactupcCustUpdateRecord
                        .createDefaultValueInstance());
        // [T-Up#INFO][COACTUPC.cbl:4013] MOVE statement
        container
                .getWsMiscStorage()
                .getCustUpdateRecord()
                .setCustUpdateId(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData().getAcupNewCustId());
        // [T-Up#INFO][COACTUPC.cbl:4014] MOVE statement
        container
                .getWsMiscStorage()
                .getCustUpdateRecord()
                .setCustUpdateFirstName(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData().getAcupNewCustFirstName());
        // [T-Up#INFO][COACTUPC.cbl:4016] MOVE statement
        container
                .getWsMiscStorage()
                .getCustUpdateRecord()
                .setCustUpdateMiddleName(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData()
                                .getAcupNewCustMiddleName());
        // [T-Up#INFO][COACTUPC.cbl:4018] MOVE statement
        container
                .getWsMiscStorage()
                .getCustUpdateRecord()
                .setCustUpdateLastName(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData().getAcupNewCustLastName());
        // [T-Up#INFO][COACTUPC.cbl:4019] MOVE statement
        container
                .getWsMiscStorage()
                .getCustUpdateRecord()
                .setCustUpdateAddrLine1(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData().getAcupNewCustAddrLine1());
        // [T-Up#INFO][COACTUPC.cbl:4021] MOVE statement
        container
                .getWsMiscStorage()
                .getCustUpdateRecord()
                .setCustUpdateAddrLine2(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData().getAcupNewCustAddrLine2());
        // [T-Up#INFO][COACTUPC.cbl:4023] MOVE statement
        container
                .getWsMiscStorage()
                .getCustUpdateRecord()
                .setCustUpdateAddrLine3(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData().getAcupNewCustAddrLine3());
        // [T-Up#INFO][COACTUPC.cbl:4025] MOVE statement
        container
                .getWsMiscStorage()
                .getCustUpdateRecord()
                .setCustUpdateAddrStateCd(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData()
                                .getAcupNewCustAddrStateCd());
        // [T-Up#INFO][COACTUPC.cbl:4027] MOVE statement
        container
                .getWsMiscStorage()
                .getCustUpdateRecord()
                .setCustUpdateAddrCountryCd(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData()
                                .getAcupNewCustAddrCountryCd());
        // [T-Up#INFO][COACTUPC.cbl:4029] MOVE statement
        container
                .getWsMiscStorage()
                .getCustUpdateRecord()
                .setCustUpdateAddrZip(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData().getAcupNewCustAddrZip());
        // [T-Up#INFO][COACTUPC.cbl:4031] STRING statement
        tempStringBuilder1 = new StringBuilder();
        tempStringBuilder2 = new StringBuilder(container.getWsMiscStorage()
                .getCustUpdateRecord().getCustUpdatePhoneNum1());
        tempStringBuilder1
                .append("(")
                .append(container.getWsThisProgcommarea().getAcupNewDetails()
                        .getAcupNewCustData().getAcupNewCustPhoneNum1a())
                .append(")")
                .append(container.getWsThisProgcommarea().getAcupNewDetails()
                        .getAcupNewCustData().getAcupNewCustPhoneNum1b())
                .append("-")
                .append(container.getWsThisProgcommarea().getAcupNewDetails()
                        .getAcupNewCustData().getAcupNewCustPhoneNum1c());
        if (tempStringBuilder1.length() <= 15) {
            tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                    tempStringBuilder1.toString());
            container.getWsMiscStorage().getCustUpdateRecord()
                    .setCustUpdatePhoneNum1(tempStringBuilder2.toString());
        }
        // [T-Up#INFO][COACTUPC.cbl:4039] STRING statement
        tempStringBuilder1 = new StringBuilder();
        tempStringBuilder2 = new StringBuilder(container.getWsMiscStorage()
                .getCustUpdateRecord().getCustUpdatePhoneNum2());
        tempStringBuilder1
                .append("(")
                .append(container.getWsThisProgcommarea().getAcupNewDetails()
                        .getAcupNewCustData().getAcupNewCustPhoneNum2a())
                .append(")")
                .append(container.getWsThisProgcommarea().getAcupNewDetails()
                        .getAcupNewCustData().getAcupNewCustPhoneNum2b())
                .append("-")
                .append(container.getWsThisProgcommarea().getAcupNewDetails()
                        .getAcupNewCustData().getAcupNewCustPhoneNum2c());
        if (tempStringBuilder1.length() <= 15) {
            tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                    tempStringBuilder1.toString());
            container.getWsMiscStorage().getCustUpdateRecord()
                    .setCustUpdatePhoneNum2(tempStringBuilder2.toString());
        }
        // [T-Up#INFO][COACTUPC.cbl:4048] MOVE statement
        container
                .getWsMiscStorage()
                .getCustUpdateRecord()
                .setCustUpdateSsn(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData().getAcupNewCustSsn());
        // [T-Up#INFO][COACTUPC.cbl:4049] MOVE statement
        container
                .getWsMiscStorage()
                .getCustUpdateRecord()
                .setCustUpdateGovtIssuedId(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData()
                                .getAcupNewCustGovtIssuedId());
        // [T-Up#INFO][COACTUPC.cbl:4051] STRING statement
        tempStringBuilder1 = new StringBuilder();
        tempStringBuilder2 = new StringBuilder(container.getWsMiscStorage()
                .getCustUpdateRecord().getCustUpdateDobYyyyMmDd());
        tempStringBuilder1
                .append(container.getWsThisProgcommarea().getAcupNewDetails()
                        .getAcupNewCustData().getAcupNewCustDobYear())
                .append("-")
                .append(container.getWsThisProgcommarea().getAcupNewDetails()
                        .getAcupNewCustData().getAcupNewCustDobMon())
                .append("-")
                .append(container.getWsThisProgcommarea().getAcupNewDetails()
                        .getAcupNewCustData().getAcupNewCustDobDay());
        if (tempStringBuilder1.length() <= 10) {
            tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                    tempStringBuilder1.toString());
            container.getWsMiscStorage().getCustUpdateRecord()
                    .setCustUpdateDobYyyyMmDd(tempStringBuilder2.toString());
        }
        // [T-Up#INFO][COACTUPC.cbl:4058] MOVE statement
        container
                .getWsMiscStorage()
                .getCustUpdateRecord()
                .setCustUpdateEftAccountId(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData()
                                .getAcupNewCustEftAccountId());
        // [T-Up#INFO][COACTUPC.cbl:4060] MOVE statement
        container
                .getWsMiscStorage()
                .getCustUpdateRecord()
                .setCustUpdatePriCardInd(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData()
                                .getAcupNewCustPriHolderInd());
        // [T-Up#INFO][COACTUPC.cbl:4062] MOVE statement
        container
                .getWsMiscStorage()
                .getCustUpdateRecord()
                .setCustUpdateFicoCreditScore(
                        container.getWsThisProgcommarea().getAcupNewDetails()
                                .getAcupNewCustData().getAcupNewCustFicoScore());
        // *****************************************************************
        // * Update account *
        // *****************************************************************
        // [T-Up#INFO][COACTUPC.cbl:4069] EXEC_CICS statement
        /*
                       EXEC CICS
                            REWRITE FILE(LIT-ACCTFILENAME)
                                    FROM(ACCT-UPDATE-RECORD)
                                    LENGTH(LENGTH OF ACCT-UPDATE-RECORD)
                                    RESP      (WS-RESP-CD)
                                    RESP2     (WS-REAS-CD)
                       END-EXEC
         */
        try {
            AwsM2CarddemoAcctdataVsamKsdsDto awsM2CarddemoAcctdataVsamKsdsDto = CoactupcAcctUpdateRecordToAwsM2CarddemoAcctdataVsamKsdsDto.INSTANCE
                    .toTarget(container.getWsMiscStorage()
                            .getAcctUpdateRecord());
            recordKeyAccessor.updateLast("awsM2CarddemoAcctdataVsamKsdsDao",
                    awsM2CarddemoAcctdataVsamKsdsDto);
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsReasCd(task.getLastResp2());
        }
        // *
        // *****************************************************************
        // * Did account update succeed ?  *
        // *****************************************************************
        // [T-Up#INFO][COACTUPC.cbl:4080] IF statement
        if (container.getWsMiscStorage().getWsCicsProcessngVars().getWsRespCd() == 0) {
            // [T-Up#INFO][COACTUPC.cbl:4081] CONTINUE statement
        } else {
            // [T-Up#INFO][COACTUPC.cbl:4083] SET statement
            container.getWsMiscStorage().setWsReturnMsg(
                    LOCKED_BUT_UPDATE_FAILED);
            // [T-Up#INFO][COACTUPC.cbl:4084] GO TO statement
            context.setGotoTarget(_9600WriteProcessingExit);
            return;
        }
        // *****************************************************************
        // * Update customer *
        // *****************************************************************
        // [T-Up#INFO][COACTUPC.cbl:4089] EXEC_CICS statement
        /*
                       EXEC CICS
                                    REWRITE FILE(LIT-CUSTFILENAME)
                                    FROM(CUST-UPDATE-RECORD)
                                    LENGTH(LENGTH OF CUST-UPDATE-RECORD)
                                    RESP      (WS-RESP-CD)
                                    RESP2     (WS-REAS-CD)
                       END-EXEC
         */
        try {
            AwsM2CarddemoCustdataVsamKsdsDto awsM2CarddemoCustdataVsamKsdsDto = CoactupcCustUpdateRecordToAwsM2CarddemoCustdataVsamKsdsDto.INSTANCE
                    .toTarget(container.getWsMiscStorage()
                            .getCustUpdateRecord());
            recordKeyAccessor.updateLast("awsM2CarddemoCustdataVsamKsdsDao",
                    awsM2CarddemoCustdataVsamKsdsDto);
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsReasCd(task.getLastResp2());
        }
        // *****************************************************************
        // * Did customer update succeed ? *
        // *****************************************************************
        // [T-Up#INFO][COACTUPC.cbl:4099] IF statement
        if (container.getWsMiscStorage().getWsCicsProcessngVars().getWsRespCd() == 0) {
            // [T-Up#INFO][COACTUPC.cbl:4100] CONTINUE statement
        } else {
            // [T-Up#INFO][COACTUPC.cbl:4102] SET statement
            container.getWsMiscStorage().setWsReturnMsg(
                    LOCKED_BUT_UPDATE_FAILED);
            // [T-Up#INFO][COACTUPC.cbl:4103] EXEC_CICS statement
            /*
                             EXEC CICS
                                SYNCPOINT ROLLBACK
                             END-EXEC
             */
            // [T-Up#ERROR][COACTUPC.cbl:4103] Internal error occurred. See log for details. (EXEC CICS)
            // [T-Up#INFO][COACTUPC.cbl:4106] GO TO statement
            context.setGotoTarget(_9600WriteProcessingExit);
            return;
        }
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:4109] 9600-WRITE-PROCESSING-EXIT Paragraph</p>
     */
    void _9600WriteProcessingExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:4110] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:4113] 9700-CHECK-CHANGE-IN-REC Paragraph</p>
     */
    void _9700CheckChangeInRec(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // ******************************************************************
        // *    Account Master data
        // ******************************************************************
        // [T-Up#INFO][COACTUPC.cbl:4119] IF statement
        if (CobStringUtils.compare(container.getAccountRecord()
                .getAcctActiveStatus(), container.getWsThisProgcommarea()
                .getAcupOldDetails().getAcupOldAcctData()
                .getAcupOldActiveStatus()) == 0
                && container
                        .getAccountRecord()
                        .getAcctCurrBal()
                        .compareTo(
                                container.getWsThisProgcommarea()
                                        .getAcupOldDetails()
                                        .getAcupOldAcctData()
                                        .getAcupOldCurrBalN()) == 0
                && container
                        .getAccountRecord()
                        .getAcctCreditLimit()
                        .compareTo(
                                container.getWsThisProgcommarea()
                                        .getAcupOldDetails()
                                        .getAcupOldAcctData()
                                        .getAcupOldCreditLimitN()) == 0
                && container
                        .getAccountRecord()
                        .getAcctCashCreditLimit()
                        .compareTo(
                                container.getWsThisProgcommarea()
                                        .getAcupOldDetails()
                                        .getAcupOldAcctData()
                                        .getAcupOldCashCreditLimitN()) == 0
                && container
                        .getAccountRecord()
                        .getAcctCurrCycCredit()
                        .compareTo(
                                container.getWsThisProgcommarea()
                                        .getAcupOldDetails()
                                        .getAcupOldAcctData()
                                        .getAcupOldCurrCycCreditN()) == 0
                && container
                        .getAccountRecord()
                        .getAcctCurrCycDebit()
                        .compareTo(
                                container.getWsThisProgcommarea()
                                        .getAcupOldDetails()
                                        .getAcupOldAcctData()
                                        .getAcupOldCurrCycDebitN()) == 0
                && CobStringUtils.compare(container.getAccountRecord()
                        .getAcctOpenDate().substring(0, 4), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldAcctData().getAcupOldOpenYear()) == 0
                && CobStringUtils.compare(container.getAccountRecord()
                        .getAcctOpenDate().substring(5, 7), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldAcctData().getAcupOldOpenMon()) == 0
                && CobStringUtils.compare(container.getAccountRecord()
                        .getAcctOpenDate().substring(8, 10), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldAcctData().getAcupOldOpenDay()) == 0
                && CobStringUtils.compare(container.getAccountRecord()
                        .getAcctExpiraionDate().substring(0, 4), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldAcctData().getAcupOldExpYear()) == 0
                && CobStringUtils.compare(container.getAccountRecord()
                        .getAcctExpiraionDate().substring(5, 7), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldAcctData().getAcupOldExpMon()) == 0
                && CobStringUtils.compare(container.getAccountRecord()
                        .getAcctExpiraionDate().substring(8, 10), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldAcctData().getAcupOldExpDay()) == 0
                && CobStringUtils.compare(container.getAccountRecord()
                        .getAcctReissueDate().substring(0, 4), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldAcctData().getAcupOldReissueYear()) == 0
                && CobStringUtils.compare(container.getAccountRecord()
                        .getAcctReissueDate().substring(5, 7), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldAcctData().getAcupOldReissueMon()) == 0
                && CobStringUtils.compare(container.getAccountRecord()
                        .getAcctReissueDate().substring(8, 10), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldAcctData().getAcupOldReissueDay()) == 0
                && CobStringUtils
                        .compare(container.getAccountRecord().getAcctGroupId()
                                .toLowerCase(), container
                                .getWsThisProgcommarea().getAcupOldDetails()
                                .getAcupOldAcctData().getAcupOldGroupId()
                                .toLowerCase()) == 0) {
            // * Current Balance
            // * Credit Limit
            // * Cash Limit
            // * Current Cycle Credit
            // * Current Cycle Debit
            // * Open date
            // * Expiry date
            // * Reissue date
            // * Account Group
            // [T-Up#INFO][COACTUPC.cbl:4145] CONTINUE statement
        } else {
            // [T-Up#INFO][COACTUPC.cbl:4147] SET statement
            container.getWsMiscStorage().setWsReturnMsg(
                    DATA_WAS_CHANGED_BEFORE_UPDATE);
            // [T-Up#INFO][COACTUPC.cbl:4148] GO TO statement
            context.setGotoTarget(_9600WriteProcessingExit);
            return;
        }
        // ******************************************************************
        // *    Customer  data - Split into 2 IFs for easier reading
        // *    And maybe put logic to update only 1 file if only date
        // *    pertaining to one of them is updated
        // ******************************************************************
        // [T-Up#INFO][COACTUPC.cbl:4156] IF statement
        if (CobStringUtils.compare(container.getCustomerRecord()
                .getCustFirstName().toUpperCase(), container
                .getWsThisProgcommarea().getAcupOldDetails()
                .getAcupOldCustData().getAcupOldCustFirstName().toUpperCase()) == 0
                && CobStringUtils.compare(container.getCustomerRecord()
                        .getCustMiddleName().toUpperCase(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldCustData().getAcupOldCustMiddleName()
                        .toUpperCase()) == 0
                && CobStringUtils.compare(container.getCustomerRecord()
                        .getCustLastName().toUpperCase(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldCustData().getAcupOldCustLastName()
                        .toUpperCase()) == 0
                && CobStringUtils.compare(container.getCustomerRecord()
                        .getCustAddrLine1().toUpperCase(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldCustData().getAcupOldCustAddrLine1()
                        .toUpperCase()) == 0
                && CobStringUtils.compare(container.getCustomerRecord()
                        .getCustAddrLine2().toUpperCase(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldCustData().getAcupOldCustAddrLine2()
                        .toUpperCase()) == 0
                && CobStringUtils.compare(container.getCustomerRecord()
                        .getCustAddrLine3().toUpperCase(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldCustData().getAcupOldCustAddrLine3()
                        .toUpperCase()) == 0
                && CobStringUtils.compare(container.getCustomerRecord()
                        .getCustAddrStateCd().toUpperCase(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldCustData().getAcupOldCustAddrStateCd()
                        .toUpperCase()) == 0
                && CobStringUtils.compare(container.getCustomerRecord()
                        .getCustAddrCountryCd().toUpperCase(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldCustData().getAcupOldCustAddrCountryCd()
                        .toUpperCase()) == 0
                && CobStringUtils.compare(container.getCustomerRecord()
                        .getCustAddrZip(), container.getWsThisProgcommarea()
                        .getAcupOldDetails().getAcupOldCustData()
                        .getAcupOldCustAddrZip()) == 0
                && CobStringUtils.compare(container.getCustomerRecord()
                        .getCustPhoneNum1(), container.getWsThisProgcommarea()
                        .getAcupOldDetails().getAcupOldCustData()
                        .getAcupOldCustPhoneNum1()) == 0
                && CobStringUtils.compare(container.getCustomerRecord()
                        .getCustPhoneNum2(), container.getWsThisProgcommarea()
                        .getAcupOldDetails().getAcupOldCustData()
                        .getAcupOldCustPhoneNum2()) == 0
                && container.getCustomerRecord().getCustSsn() == container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldCustData().getAcupOldCustSsn()
                && CobStringUtils.compare(container.getCustomerRecord()
                        .getCustGovtIssuedId().toUpperCase(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldCustData().getAcupOldCustGovtIssuedId()
                        .toUpperCase()) == 0
                && CobStringUtils.compare(container.getCustomerRecord()
                        .getCustDobYyyyMmDd().substring(0, 4), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldCustData().getAcupOldCustDobYyyyMmDd()
                        .substring(0, 4)) == 0
                && CobStringUtils.compare(container.getCustomerRecord()
                        .getCustDobYyyyMmDd().substring(5, 7), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldCustData().getAcupOldCustDobYyyyMmDd()
                        .substring(4, 6)) == 0
                && CobStringUtils.compare(container.getCustomerRecord()
                        .getCustDobYyyyMmDd().substring(8, 10), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldCustData().getAcupOldCustDobYyyyMmDd()
                        .substring(6, 8)) == 0
                && CobStringUtils.compare(container.getCustomerRecord()
                        .getCustEftAccountId(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldCustData().getAcupOldCustEftAccountId()) == 0
                && CobStringUtils.compare(container.getCustomerRecord()
                        .getCustPriCardHolderInd(), container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldCustData().getAcupOldCustPriHolderInd()) == 0
                && container.getCustomerRecord().getCustFicoCreditScore() == container
                        .getWsThisProgcommarea().getAcupOldDetails()
                        .getAcupOldCustData().getAcupOldCustFicoScore()) {
            // [T-Up#INFO][COACTUPC.cbl:4191] CONTINUE statement
        } else {
            // [T-Up#INFO][COACTUPC.cbl:4193] SET statement
            container.getWsMiscStorage().setWsReturnMsg(
                    DATA_WAS_CHANGED_BEFORE_UPDATE);
            // [T-Up#INFO][COACTUPC.cbl:4194] GO TO statement
            context.setGotoTarget(_9600WriteProcessingExit);
            return;
        }
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:4197] 9700-CHECK-CHANGE-IN-REC-EXIT Paragraph</p>
     */
    void _9700CheckChangeInRecExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:4198] EXIT statement
    }

    // ******************************************************************
    // *Common code to store PFKey
    // ******************************************************************
    //       *COPY 'CSSTRPFY'
    //       *    .
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSSTRPFY.cpy)
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************

    /** 
     * <p>[T-Up#INFO][CSSTRPFY.cpy:18] YYYY-STORE-PFKEY Paragraph</p>
     */
    void yyyyStorePfkey(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // *****************************************************************
        // * Map AID to PFKey in COMMON Area
        // *****************************************************************
        // [T-Up#INFO][CSSTRPFY.cpy:22] EVALUATE statement
        if (CobStringUtils.compare(task.getPressedKey(), container.getDfhaid()
                .getDfhenter()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:24] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_ENTER);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhclear()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:26] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_CLEAR);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpa1()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:28] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PA1);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpa2()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:30] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PA2);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf1()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:32] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK01);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf2()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:34] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK02);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf3()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:36] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK03);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf4()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:38] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK04);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf5()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:40] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK05);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf6()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:42] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK06);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf7()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:44] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK07);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf8()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:46] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK08);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf9()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:48] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK09);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf10()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:50] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK10);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf11()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:52] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK11);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf12()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:54] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK12);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf13()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:56] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK01);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf14()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:58] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK02);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf15()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:60] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK03);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf16()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:62] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK04);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf17()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:64] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK05);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf18()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:66] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK06);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf19()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:68] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK07);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf20()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:70] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK08);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf21()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:72] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK09);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf22()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:74] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK10);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf23()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:76] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK11);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf24()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy:78] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK12);
        }
    }

    /** 
     * <p>[T-Up#INFO][CSSTRPFY.cpy:81] YYYY-STORE-PFKEY-EXIT Paragraph</p>
     */
    void yyyyStorePfkeyExit(OpenFrameContext context) {
        // [T-Up#INFO][CSSTRPFY.cpy:82] EXIT statement
    }

    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:59 CDT
    // *

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:4207] ABEND-ROUTINE Paragraph</p>
     */
    void abendRoutine(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][COACTUPC.cbl:4209] IF statement
        if (CobStringUtils.compare(container.getAbendData().getAbendMsg(),
                StringUtils.repeat((char) 0x00, 72)) == 0) {
            // [T-Up#INFO][COACTUPC.cbl:4210] MOVE statement
            container.getAbendData().setAbendMsg("UNEXPECTED ABEND OCCURRED.");
        }
        // [T-Up#INFO][COACTUPC.cbl:4213] MOVE statement
        container.getAbendData().setAbendCulprit(
                container.getWsLiterals().getLitThispgm());
        // [T-Up#INFO][COACTUPC.cbl:4215] EXEC_CICS statement
        /*
                       EXEC CICS SEND
                                        FROM (ABEND-DATA)
                                        LENGTH(LENGTH OF ABEND-DATA)
                                        NOHANDLE
                                        ERASE
                       END-EXEC
         */
        try {
            task.getOutputDto().getSystemDto()
                    .setNotification(container.getAbendData());
        } catch (OnlineException e) {
        }
        // [T-Up#INFO][COACTUPC.cbl:4222] EXEC_CICS statement
        /*
                       EXEC CICS HANDLE ABEND
                            CANCEL
                       END-EXEC
         */
        abendHandler.cancel();
        // [T-Up#INFO][COACTUPC.cbl:4226] EXEC_CICS statement
        /*
                       EXEC CICS ABEND
                            ABCODE('9999')
                       END-EXEC
         */
        throw new AbendException();
    }

    /** 
     * <p>[T-Up#INFO][COACTUPC.cbl:4230] ABEND-ROUTINE-EXIT Paragraph</p>
     */
    void abendRoutineExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTUPC.cbl:4231] EXIT statement
    }

    // ******************************************************************
    // * Common Date Routines
    // ******************************************************************
    //       *COPY CSUTLDPY
    //       *    .
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSUTLDPY.cpy)
    // ******************************************************************
    // *Procedure Division Copybook for DATE related code
    // ******************************************************************
    // *Date validation paragraph for reuse and hopefully not misuse
    // *Accompanying WORKING Storage is CSUTLDTR
    // ******************************************************************
    // * ***  PERFORM EDIT-DATE-CCYYMMDD
    // *         THRU EDIT-DATE-CCYYMMDD-EXIT
    // *         to validate CCYYMMDD dates
    // *      Reusable paras
    // *      a) EDIT-YEAR-CCYY
    // *      b) EDIT-MONTH
    // *      c) EDIT-DAY
    // *      d) EDIT-DATE-OF-BIRTH
    // *      e) EDIT-DATE-OF-BIRTH
    // ******************************************************************

    /** 
     * <p>[T-Up#INFO][CSUTLDPY.cpy:19] EDIT-DATE-CCYYMMDD Paragraph</p>
     */
    void editDateCcyymmdd(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][CSUTLDPY.cpy:20] SET statement
        container.getWsMiscStorage().getWsCalculationVars().getWsEditDateFlgs()
                .set(WS_EDIT_DATE_IS_INVALID);
    }

    // ******************************************************************
    // *Check for valid year and century
    // ******************************************************************

    /** 
     * <p>[T-Up#INFO][CSUTLDPY.cpy:26] EDIT-YEAR-CCYY Paragraph</p>
     */
    void editYearCcyy(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][CSUTLDPY.cpy:28] SET statement
        container.getWsMiscStorage().getWsCalculationVars().getWsEditDateFlgs()
                .setWsEditYearFlg(FLG_YEAR_NOT_OK);
        // *    Not supplied
        // [T-Up#INFO][CSUTLDPY.cpy:31] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsCalculationVars().getWsEditDateCcyymmdd()
                .getWsEditDateCcyy().get(), StringUtils.repeat((char) 0x00, 4)) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsCalculationVars().getWsEditDateCcyymmdd()
                        .getWsEditDateCcyy().get(), StringUtils.repeat(' ', 4)) == 0) {
            // [T-Up#INFO][CSUTLDPY.cpy:33] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][CSUTLDPY.cpy:34] SET statement
            container.getWsMiscStorage().getWsCalculationVars()
                    .getWsEditDateFlgs().setWsEditYearFlg(FLG_YEAR_BLANK);
            // [T-Up#INFO][CSUTLDPY.cpy:35] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][CSUTLDPY.cpy:36] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        " : Year must be supplied.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // *       Intentional violation of structured programming norms
            // [T-Up#INFO][CSUTLDPY.cpy:43] GO TO statement
            context.setGotoTarget(editYearCcyyExit);
            return;
        } else {
            // [T-Up#INFO][CSUTLDPY.cpy:45] CONTINUE statement
        }
        // *    Not numeric
        // [T-Up#INFO][CSUTLDPY.cpy:49] IF statement
        if (!StringUtils.isNumeric(container.getWsMiscStorage()
                .getWsCalculationVars().getWsEditDateCcyymmdd()
                .getWsEditDateCcyy().toString())) {
            // [T-Up#INFO][CSUTLDPY.cpy:50] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][CSUTLDPY.cpy:51] SET statement
            container.getWsMiscStorage().getWsCalculationVars()
                    .getWsEditDateFlgs().setWsEditYearFlg(FLG_YEAR_NOT_OK);
            // [T-Up#INFO][CSUTLDPY.cpy:52] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][CSUTLDPY.cpy:53] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        " must be 4 digit number.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][CSUTLDPY.cpy:59] GO TO statement
            context.setGotoTarget(editYearCcyyExit);
            return;
        } else {
            // [T-Up#INFO][CSUTLDPY.cpy:61] CONTINUE statement
        }
        // ******************************************************************
        // *    Century not reasonable
        // ******************************************************************
        // *  Not having learnt our lesson from history and Y2K
        // *  And being unable to imagine COBOL in the 2100s
        // *  We code only 19 and 20 as valid century values
        // ******************************************************************
        // [T-Up#INFO][CSUTLDPY.cpy:71] IF statement
        if (container.getWsMiscStorage().getWsCalculationVars()
                .getWsEditDateCcyymmdd().getWsEditDateCcyy().getWsEditDateCcN() == THIS_CENTURY
                || container.getWsMiscStorage().getWsCalculationVars()
                        .getWsEditDateCcyymmdd().getWsEditDateCcyy()
                        .getWsEditDateCcN() == LAST_CENTURY) {
            // [T-Up#INFO][CSUTLDPY.cpy:73] CONTINUE statement
        } else {
            // [T-Up#INFO][CSUTLDPY.cpy:75] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][CSUTLDPY.cpy:76] SET statement
            container.getWsMiscStorage().getWsCalculationVars()
                    .getWsEditDateFlgs().setWsEditYearFlg(FLG_YEAR_NOT_OK);
            // [T-Up#INFO][CSUTLDPY.cpy:77] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][CSUTLDPY.cpy:78] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        " : Century is not valid.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][CSUTLDPY.cpy:84] GO TO statement
            context.setGotoTarget(editYearCcyyExit);
            return;
        }
        // [T-Up#INFO][CSUTLDPY.cpy:87] SET statement
        container.getWsMiscStorage().getWsCalculationVars().getWsEditDateFlgs()
                .setWsEditYearFlg(FLG_YEAR_ISVALID);
    }

    /** 
     * <p>[T-Up#INFO][CSUTLDPY.cpy:89] EDIT-YEAR-CCYY-EXIT Paragraph</p>
     */
    void editYearCcyyExit(OpenFrameContext context) {
        // [T-Up#INFO][CSUTLDPY.cpy:90] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][CSUTLDPY.cpy:92] EDIT-MONTH Paragraph</p>
     */
    void editMonth(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][CSUTLDPY.cpy:93] SET statement
        container.getWsMiscStorage().getWsCalculationVars().getWsEditDateFlgs()
                .setWsEditMonth(FLG_MONTH_NOT_OK);
        // [T-Up#INFO][CSUTLDPY.cpy:95] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsCalculationVars().getWsEditDateCcyymmdd()
                .getWsEditDateMm(), StringUtils.repeat((char) 0x00, 2)) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsCalculationVars().getWsEditDateCcyymmdd()
                        .getWsEditDateMm(), StringUtils.repeat(' ', 2)) == 0) {
            // [T-Up#INFO][CSUTLDPY.cpy:97] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][CSUTLDPY.cpy:98] SET statement
            container.getWsMiscStorage().getWsCalculationVars()
                    .getWsEditDateFlgs().setWsEditMonth(FLG_MONTH_BLANK);
            // [T-Up#INFO][CSUTLDPY.cpy:99] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][CSUTLDPY.cpy:100] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        " : Month must be supplied.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][CSUTLDPY.cpy:106] GO TO statement
            context.setGotoTarget(editMonthExit);
            return;
        } else {
            // [T-Up#INFO][CSUTLDPY.cpy:108] CONTINUE statement
        }
        // *    Month not reasonable
        // [T-Up#INFO][CSUTLDPY.cpy:112] IF statement
        if (container.getWsMiscStorage().getWsCalculationVars()
                .getWsEditDateCcyymmdd().getWsEditDateMmN() >= WS_VALID_MONTH_START
                && container.getWsMiscStorage().getWsCalculationVars()
                        .getWsEditDateCcyymmdd().getWsEditDateMmN() <= WS_VALID_MONTH_END) {
            // [T-Up#INFO][CSUTLDPY.cpy:113] CONTINUE statement
        } else {
            // [T-Up#INFO][CSUTLDPY.cpy:115] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][CSUTLDPY.cpy:116] SET statement
            container.getWsMiscStorage().getWsCalculationVars()
                    .getWsEditDateFlgs().setWsEditMonth(FLG_MONTH_NOT_OK);
            // [T-Up#INFO][CSUTLDPY.cpy:117] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][CSUTLDPY.cpy:118] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        ": Month must be a number between 1 and 12.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][CSUTLDPY.cpy:124] GO TO statement
            context.setGotoTarget(editMonthExit);
            return;
        }
        // [T-Up#INFO][CSUTLDPY.cpy:127] IF statement
        if (IntrinsicFunction.functionTestNumval(container.getWsMiscStorage()
                .getWsCalculationVars().getWsEditDateCcyymmdd()
                .getWsEditDateMm()) == 0) {
            // [T-Up#INFO][CSUTLDPY.cpy:128] COMPUTE statement
            container
                    .getWsMiscStorage()
                    .getWsCalculationVars()
                    .getWsEditDateCcyymmdd()
                    .setWsEditDateMmN(
                            (int) IntrinsicFunction.functionNumval(container
                                    .getWsMiscStorage().getWsCalculationVars()
                                    .getWsEditDateCcyymmdd().getWsEditDateMm()));
        } else {
            // [T-Up#INFO][CSUTLDPY.cpy:132] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][CSUTLDPY.cpy:133] SET statement
            container.getWsMiscStorage().getWsCalculationVars()
                    .getWsEditDateFlgs().setWsEditMonth(FLG_MONTH_NOT_OK);
            // [T-Up#INFO][CSUTLDPY.cpy:134] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][CSUTLDPY.cpy:135] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        ": Month must be a number between 1 and 12.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][CSUTLDPY.cpy:141] GO TO statement
            context.setGotoTarget(editMonthExit);
            return;
        }
        // [T-Up#INFO][CSUTLDPY.cpy:144] SET statement
        container.getWsMiscStorage().getWsCalculationVars().getWsEditDateFlgs()
                .setWsEditMonth(FLG_MONTH_ISVALID);
    }

    /** 
     * <p>[T-Up#INFO][CSUTLDPY.cpy:146] EDIT-MONTH-EXIT Paragraph</p>
     */
    void editMonthExit(OpenFrameContext context) {
        // [T-Up#INFO][CSUTLDPY.cpy:147] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][CSUTLDPY.cpy:151] EDIT-DAY Paragraph</p>
     */
    void editDay(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][CSUTLDPY.cpy:153] SET statement
        container.getWsMiscStorage().getWsCalculationVars().getWsEditDateFlgs()
                .setWsEditDay(FLG_DAY_ISVALID);
        // [T-Up#INFO][CSUTLDPY.cpy:155] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsCalculationVars().getWsEditDateCcyymmdd()
                .getWsEditDateDd(), StringUtils.repeat((char) 0x00, 2)) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsCalculationVars().getWsEditDateCcyymmdd()
                        .getWsEditDateDd(), StringUtils.repeat(' ', 2)) == 0) {
            // [T-Up#INFO][CSUTLDPY.cpy:157] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][CSUTLDPY.cpy:158] SET statement
            container.getWsMiscStorage().getWsCalculationVars()
                    .getWsEditDateFlgs().setWsEditDay(FLG_DAY_BLANK);
            // [T-Up#INFO][CSUTLDPY.cpy:159] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][CSUTLDPY.cpy:160] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        " : Day must be supplied.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][CSUTLDPY.cpy:166] GO TO statement
            context.setGotoTarget(editDayExit);
            return;
        } else {
            // [T-Up#INFO][CSUTLDPY.cpy:168] CONTINUE statement
        }
        // [T-Up#INFO][CSUTLDPY.cpy:171] IF statement
        if (IntrinsicFunction.functionTestNumval(container.getWsMiscStorage()
                .getWsCalculationVars().getWsEditDateCcyymmdd()
                .getWsEditDateDd()) == 0) {
            // [T-Up#INFO][CSUTLDPY.cpy:172] COMPUTE statement
            container
                    .getWsMiscStorage()
                    .getWsCalculationVars()
                    .getWsEditDateCcyymmdd()
                    .setWsEditDateDdN(
                            (int) IntrinsicFunction.functionNumval(container
                                    .getWsMiscStorage().getWsCalculationVars()
                                    .getWsEditDateCcyymmdd().getWsEditDateDd()));
        } else {
            // [T-Up#INFO][CSUTLDPY.cpy:176] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][CSUTLDPY.cpy:177] SET statement
            container.getWsMiscStorage().getWsCalculationVars()
                    .getWsEditDateFlgs().setWsEditDay(FLG_DAY_NOT_OK);
            // [T-Up#INFO][CSUTLDPY.cpy:178] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][CSUTLDPY.cpy:179] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        ":day must be a number between 1 and 31.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][CSUTLDPY.cpy:185] GO TO statement
            context.setGotoTarget(editDayExit);
            return;
        }
        // [T-Up#INFO][CSUTLDPY.cpy:188] IF statement
        if (container.getWsMiscStorage().getWsCalculationVars()
                .getWsEditDateCcyymmdd().getWsEditDateDdN() >= WS_VALID_DAY_START
                && container.getWsMiscStorage().getWsCalculationVars()
                        .getWsEditDateCcyymmdd().getWsEditDateDdN() <= WS_VALID_DAY_END) {
            // [T-Up#INFO][CSUTLDPY.cpy:189] CONTINUE statement
        } else {
            // [T-Up#INFO][CSUTLDPY.cpy:191] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][CSUTLDPY.cpy:192] SET statement
            container.getWsMiscStorage().getWsCalculationVars()
                    .getWsEditDateFlgs().setWsEditDay(FLG_DAY_NOT_OK);
            // [T-Up#INFO][CSUTLDPY.cpy:193] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][CSUTLDPY.cpy:194] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        ":day must be a number between 1 and 31.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][CSUTLDPY.cpy:200] GO TO statement
            context.setGotoTarget(editDayExit);
            return;
        }
        // [T-Up#INFO][CSUTLDPY.cpy:204] SET statement
        container.getWsMiscStorage().getWsCalculationVars().getWsEditDateFlgs()
                .setWsEditDay(FLG_DAY_ISVALID);
    }

    /** 
     * <p>[T-Up#INFO][CSUTLDPY.cpy:206] EDIT-DAY-EXIT Paragraph</p>
     */
    void editDayExit(OpenFrameContext context) {
        // [T-Up#INFO][CSUTLDPY.cpy:207] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][CSUTLDPY.cpy:210] EDIT-DAY-MONTH-YEAR Paragraph</p>
     */
    void editDayMonthYear(OpenFrameContext context) {
        BigDecimal tempBigDecimal1;
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // ******************************************************************
        // *    Checking for any other combinations
        // ******************************************************************
        // [T-Up#INFO][CSUTLDPY.cpy:214] IF statement
        if (!(container.getWsMiscStorage().getWsCalculationVars()
                .getWsEditDateCcyymmdd().getWsEditDateMmN() == WS_31_DAY_MONTH_1
                || container.getWsMiscStorage().getWsCalculationVars()
                        .getWsEditDateCcyymmdd().getWsEditDateMmN() == WS_31_DAY_MONTH_2
                || container.getWsMiscStorage().getWsCalculationVars()
                        .getWsEditDateCcyymmdd().getWsEditDateMmN() == WS_31_DAY_MONTH_3
                || container.getWsMiscStorage().getWsCalculationVars()
                        .getWsEditDateCcyymmdd().getWsEditDateMmN() == WS_31_DAY_MONTH_4
                || container.getWsMiscStorage().getWsCalculationVars()
                        .getWsEditDateCcyymmdd().getWsEditDateMmN() == WS_31_DAY_MONTH_5
                || container.getWsMiscStorage().getWsCalculationVars()
                        .getWsEditDateCcyymmdd().getWsEditDateMmN() == WS_31_DAY_MONTH_6 || container
                .getWsMiscStorage().getWsCalculationVars()
                .getWsEditDateCcyymmdd().getWsEditDateMmN() == WS_31_DAY_MONTH_7)
                && container.getWsMiscStorage().getWsCalculationVars()
                        .getWsEditDateCcyymmdd().getWsEditDateDdN() == WS_DAY_31) {
            // [T-Up#INFO][CSUTLDPY.cpy:216] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][CSUTLDPY.cpy:217] SET statement
            container.getWsMiscStorage().getWsCalculationVars()
                    .getWsEditDateFlgs().setWsEditDay(FLG_DAY_NOT_OK);
            // [T-Up#INFO][CSUTLDPY.cpy:218] SET statement
            container.getWsMiscStorage().getWsCalculationVars()
                    .getWsEditDateFlgs().setWsEditMonth(FLG_MONTH_NOT_OK);
            // [T-Up#INFO][CSUTLDPY.cpy:219] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][CSUTLDPY.cpy:220] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        ":Cannot have 31 days in this month.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][CSUTLDPY.cpy:226] GO TO statement
            context.setGotoTarget(editDateCcyymmddExit);
            return;
        }
        // [T-Up#INFO][CSUTLDPY.cpy:229] IF statement
        if (container.getWsMiscStorage().getWsCalculationVars()
                .getWsEditDateCcyymmdd().getWsEditDateMmN() == WS_FEBRUARY
                && container.getWsMiscStorage().getWsCalculationVars()
                        .getWsEditDateCcyymmdd().getWsEditDateDdN() == WS_DAY_30) {
            // [T-Up#INFO][CSUTLDPY.cpy:231] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][CSUTLDPY.cpy:232] SET statement
            container.getWsMiscStorage().getWsCalculationVars()
                    .getWsEditDateFlgs().setWsEditDay(FLG_DAY_NOT_OK);
            // [T-Up#INFO][CSUTLDPY.cpy:233] SET statement
            container.getWsMiscStorage().getWsCalculationVars()
                    .getWsEditDateFlgs().setWsEditMonth(FLG_MONTH_NOT_OK);
            // [T-Up#INFO][CSUTLDPY.cpy:234] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][CSUTLDPY.cpy:235] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        ":Cannot have 30 days in this month.");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][CSUTLDPY.cpy:241] GO TO statement
            context.setGotoTarget(editDateCcyymmddExit);
            return;
        }
        // [T-Up#INFO][CSUTLDPY.cpy:244] IF statement
        if (container.getWsMiscStorage().getWsCalculationVars()
                .getWsEditDateCcyymmdd().getWsEditDateMmN() == WS_FEBRUARY
                && container.getWsMiscStorage().getWsCalculationVars()
                        .getWsEditDateCcyymmdd().getWsEditDateDdN() == WS_DAY_29) {
            // [T-Up#INFO][CSUTLDPY.cpy:246] IF statement
            if (container.getWsMiscStorage().getWsCalculationVars()
                    .getWsEditDateCcyymmdd().getWsEditDateCcyy()
                    .getWsEditDateYyN() == 0) {
                // [T-Up#INFO][CSUTLDPY.cpy:247] MOVE statement
                container.getWsMiscStorage().getWsCalculationVars()
                        .setWsDivBy(400);
            } else {
                // [T-Up#INFO][CSUTLDPY.cpy:249] MOVE statement
                container.getWsMiscStorage().getWsCalculationVars()
                        .setWsDivBy(4);
            }
            // [T-Up#INFO][CSUTLDPY.cpy:252] DIVIDE statement
            tempBigDecimal1 = BigDecimal.valueOf(container.getWsMiscStorage()
                    .getWsCalculationVars().getWsEditDateCcyymmdd()
                    .getWsEditDateCcyyN());
            container
                    .getWsMiscStorage()
                    .getWsCalculationVars()
                    .setWsDividend(
                            BigDecimal
                                    .valueOf(
                                            container.getWsMiscStorage()
                                                    .getWsCalculationVars()
                                                    .getWsEditDateCcyymmdd()
                                                    .getWsEditDateCcyyN())
                                    .divide(BigDecimal.valueOf(container
                                            .getWsMiscStorage()
                                            .getWsCalculationVars()
                                            .getWsDivBy()), 2,
                                            RoundingMode.DOWN).intValue());
            container
                    .getWsMiscStorage()
                    .getWsCalculationVars()
                    .setWsRemainder(
                            tempBigDecimal1
                                    .subtract(
                                            BigDecimal
                                                    .valueOf(
                                                            container
                                                                    .getWsMiscStorage()
                                                                    .getWsCalculationVars()
                                                                    .getWsDivBy())
                                                    .multiply(
                                                            BigDecimal
                                                                    .valueOf(
                                                                            container
                                                                                    .getWsMiscStorage()
                                                                                    .getWsCalculationVars()
                                                                                    .getWsDividend())
                                                                    .setScale(
                                                                            0,
                                                                            RoundingMode.DOWN)))
                                    .intValue());
            // [T-Up#INFO][CSUTLDPY.cpy:257] IF statement
            if (container.getWsMiscStorage().getWsCalculationVars()
                    .getWsRemainder() == 0) {
                // [T-Up#INFO][CSUTLDPY.cpy:258] CONTINUE statement
            } else {
                // [T-Up#INFO][CSUTLDPY.cpy:260] SET statement
                container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
                // [T-Up#INFO][CSUTLDPY.cpy:261] SET statement
                container.getWsMiscStorage().getWsCalculationVars()
                        .getWsEditDateFlgs().setWsEditDay(FLG_DAY_NOT_OK);
                // [T-Up#INFO][CSUTLDPY.cpy:262] SET statement
                container.getWsMiscStorage().getWsCalculationVars()
                        .getWsEditDateFlgs().setWsEditMonth(FLG_MONTH_NOT_OK);
                // [T-Up#INFO][CSUTLDPY.cpy:263] SET statement
                container.getWsMiscStorage().getWsCalculationVars()
                        .getWsEditDateFlgs().setWsEditYearFlg(FLG_YEAR_NOT_OK);
                // [T-Up#INFO][CSUTLDPY.cpy:264] IF statement
                if (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                    // [T-Up#INFO][CSUTLDPY.cpy:265] STRING statement
                    tempStringBuilder1 = new StringBuilder();
                    tempStringBuilder2 = new StringBuilder(container
                            .getWsMiscStorage().getWsReturnMsg());
                    tempStringBuilder1
                            .append(container.getWsMiscStorage()
                                    .getWsGenericEdits()
                                    .getWsEditVariableName().trim())
                            .append(":Not a leap year.Cannot have 29 days in this month.");
                    if (tempStringBuilder1.length() <= 75) {
                        tempStringBuilder2.replace(0,
                                tempStringBuilder1.length(),
                                tempStringBuilder1.toString());
                        container.getWsMiscStorage().setWsReturnMsg(
                                tempStringBuilder2.toString());
                    }
                }
                // [T-Up#INFO][CSUTLDPY.cpy:271] GO TO statement
                context.setGotoTarget(editDateCcyymmddExit);
                return;
            }
        }
        // [T-Up#INFO][CSUTLDPY.cpy:275] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsCalculationVars().getWsEditDateFlgs().get(),
                WS_EDIT_DATE_IS_VALID) == 0) {
            // [T-Up#INFO][CSUTLDPY.cpy:276] CONTINUE statement
        } else {
            // [T-Up#INFO][CSUTLDPY.cpy:278] GO TO statement
            context.setGotoTarget(editDateCcyymmddExit);
            return;
        }
    }

    /** 
     * <p>[T-Up#INFO][CSUTLDPY.cpy:281] EDIT-DAY-MONTH-YEAR-EXIT Paragraph</p>
     */
    void editDayMonthYearExit(OpenFrameContext context) {
        // [T-Up#INFO][CSUTLDPY.cpy:282] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][CSUTLDPY.cpy:285] EDIT-DATE-LE Paragraph</p>
     */
    void editDateLe(OpenFrameContext context) {
        int tempint1;
        CsutldtcVariableContainer tempCsutldtcVariableContainer1;
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // ******************************************************************
        // *    In case some one managed to enter a bad date that passsed all
        // *    the edits above ......
        // *                  Use LE Services to verify the supplied date
        // ******************************************************************
        // [T-Up#INFO][CSUTLDPY.cpy:291] INITIALIZE statement
        container
                .getWsMiscStorage()
                .getWsCalculationVars()
                .setWsDateValidationResult(
                        CoactupcWsMiscStorage.CoactupcWsDateValidationResult
                                .createDefaultValueInstance());
        // [T-Up#INFO][CSUTLDPY.cpy:292] MOVE statement
        container.getWsMiscStorage().getWsCalculationVars()
                .setWsDateFormat("YYYYMMDD");
        // [T-Up#INFO][CSUTLDPY.cpy:294] CALL statement
        tempint1 = csutldtc.run(context.getGeneralContext(), container
                .getWsMiscStorage().getWsCalculationVars()
                .getWsEditDateCcyymmdd().get(), container.getWsMiscStorage()
                .getWsCalculationVars().getWsDateFormat(), container
                .getWsMiscStorage().getWsCalculationVars()
                .getWsDateValidationResult().get());
        context.setReturnValue(tempint1);
        tempCsutldtcVariableContainer1 = (CsutldtcVariableContainer) context
                .getProgramVariableContainer("Csutldtc");
        container.getWsMiscStorage().getWsCalculationVars()
                .getWsEditDateCcyymmdd()
                .set(tempCsutldtcVariableContainer1.getLsDate());
        container
                .getWsMiscStorage()
                .getWsCalculationVars()
                .setWsDateFormat(
                        tempCsutldtcVariableContainer1.getLsDateFormat());
        container.getWsMiscStorage().getWsCalculationVars()
                .getWsDateValidationResult()
                .set(tempCsutldtcVariableContainer1.getLsResult());
        // [T-Up#INFO][CSUTLDPY.cpy:299] IF statement
        if (container.getWsMiscStorage().getWsCalculationVars()
                .getWsDateValidationResult().getWsSeverityN() == 0) {
            // [T-Up#INFO][CSUTLDPY.cpy:300] CONTINUE statement
        } else {
            // [T-Up#INFO][CSUTLDPY.cpy:302] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][CSUTLDPY.cpy:303] SET statement
            container.getWsMiscStorage().getWsCalculationVars()
                    .getWsEditDateFlgs().setWsEditDay(FLG_DAY_NOT_OK);
            // [T-Up#INFO][CSUTLDPY.cpy:304] SET statement
            container.getWsMiscStorage().getWsCalculationVars()
                    .getWsEditDateFlgs().setWsEditMonth(FLG_MONTH_NOT_OK);
            // [T-Up#INFO][CSUTLDPY.cpy:305] SET statement
            container.getWsMiscStorage().getWsCalculationVars()
                    .getWsEditDateFlgs().setWsEditYearFlg(FLG_YEAR_NOT_OK);
            // [T-Up#INFO][CSUTLDPY.cpy:306] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][CSUTLDPY.cpy:307] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1
                        .append(container.getWsMiscStorage()
                                .getWsGenericEdits().getWsEditVariableName()
                                .trim())
                        .append(" validation error Sev code: ")
                        .append(container.getWsMiscStorage()
                                .getWsCalculationVars()
                                .getWsDateValidationResult().getWsSeverity())
                        .append(" Message code: ")
                        .append(container.getWsMiscStorage()
                                .getWsCalculationVars()
                                .getWsDateValidationResult().getWsMsgNo());
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][CSUTLDPY.cpy:316] GO TO statement
            context.setGotoTarget(editDateLeExit);
            return;
        }
        // [T-Up#INFO][CSUTLDPY.cpy:319] IF statement
        if (!(CobStringUtils.compare(container.getWsMiscStorage()
                .getWsInputFlag(), INPUT_ERROR) == 0)) {
            // [T-Up#INFO][CSUTLDPY.cpy:320] SET statement
            container.getWsMiscStorage().getWsCalculationVars()
                    .getWsEditDateFlgs().setWsEditDay(FLG_DAY_ISVALID);
        }
    }

    /** 
     * <p>[T-Up#INFO][CSUTLDPY.cpy:324] EDIT-DATE-LE-EXIT Paragraph</p>
     */
    void editDateLeExit(OpenFrameContext context) {
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][CSUTLDPY.cpy:325] EXIT statement
        // *    If we got here all edits were cleared
        // [T-Up#INFO][CSUTLDPY.cpy:328] SET statement
        container.getWsMiscStorage().getWsCalculationVars().getWsEditDateFlgs()
                .set(WS_EDIT_DATE_IS_VALID);
    }

    /** 
     * <p>[T-Up#INFO][CSUTLDPY.cpy:330] EDIT-DATE-CCYYMMDD-EXIT Paragraph</p>
     */
    void editDateCcyymmddExit(OpenFrameContext context) {
        // [T-Up#INFO][CSUTLDPY.cpy:331] EXIT statement
    }

    // ******************************************************************
    // *Date of Birth Reasonableness check
    // ******************************************************************
    // *  At the time of writing this program
    // *  Time travel was not possible.
    // *  Date of birth in the future is not acceptable
    // ******************************************************************
    // *

    /** 
     * <p>[T-Up#INFO][CSUTLDPY.cpy:342] EDIT-DATE-OF-BIRTH Paragraph</p>
     */
    void editDateOfBirth(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactupcVariableContainer container = (CoactupcVariableContainer) context
                .getProgramVariableContainer("Coactupc");
        // [T-Up#INFO][CSUTLDPY.cpy:344] MOVE statement
        container
                .getWsMiscStorage()
                .getWsCalculationVars()
                .getWsCurrentDate()
                .setWsCurrentDateYyyymmdd(
                        IntrinsicFunction.functionCurrentDate());
        // [T-Up#INFO][CSUTLDPY.cpy:346] COMPUTE statement
        container
                .getWsMiscStorage()
                .getWsCalculationVars()
                .setWsEditDateBinary(
                        IntrinsicFunction.functionIntegerOfDate(container
                                .getWsMiscStorage().getWsCalculationVars()
                                .getWsEditDateCcyymmddN()));
        // [T-Up#INFO][CSUTLDPY.cpy:348] COMPUTE statement
        container
                .getWsMiscStorage()
                .getWsCalculationVars()
                .getWsCurrentDate()
                .setWsCurrentDateBinary(
                        IntrinsicFunction
                                .functionIntegerOfDate(container
                                        .getWsMiscStorage()
                                        .getWsCalculationVars()
                                        .getWsCurrentDate()
                                        .getWsCurrentDateYyyymmddN()));
        // [T-Up#INFO][CSUTLDPY.cpy:351] IF statement
        if (container.getWsMiscStorage().getWsCalculationVars()
                .getWsCurrentDate().getWsCurrentDateBinary() > container
                .getWsMiscStorage().getWsCalculationVars()
                .getWsEditDateBinary()) {
            // *    IF FUNCTION FIND-DURATION(FUNCTION CURRENT-DATE
            // *                             ,WS-EDIT-DATE-CCYYMMDD)
            // *                             ,DAYS) > 0
            // [T-Up#INFO][CSUTLDPY.cpy:355] CONTINUE statement
        } else {
            // [T-Up#INFO][CSUTLDPY.cpy:357] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][CSUTLDPY.cpy:358] SET statement
            container.getWsMiscStorage().getWsCalculationVars()
                    .getWsEditDateFlgs().setWsEditDay(FLG_DAY_NOT_OK);
            // [T-Up#INFO][CSUTLDPY.cpy:359] SET statement
            container.getWsMiscStorage().getWsCalculationVars()
                    .getWsEditDateFlgs().setWsEditMonth(FLG_MONTH_NOT_OK);
            // [T-Up#INFO][CSUTLDPY.cpy:360] SET statement
            container.getWsMiscStorage().getWsCalculationVars()
                    .getWsEditDateFlgs().setWsEditYearFlg(FLG_YEAR_NOT_OK);
            // [T-Up#INFO][CSUTLDPY.cpy:361] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][CSUTLDPY.cpy:362] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1.append(
                        container.getWsMiscStorage().getWsGenericEdits()
                                .getWsEditVariableName().trim()).append(
                        ":cannot be in the future ");
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
            // [T-Up#INFO][CSUTLDPY.cpy:368] GO TO statement
            context.setGotoTarget(editDateOfBirthExit);
            return;
        }
    }

    /** 
     * <p>[T-Up#INFO][CSUTLDPY.cpy:371] EDIT-DATE-OF-BIRTH-EXIT Paragraph</p>
     */
    void editDateOfBirthExit(OpenFrameContext context) {
        // [T-Up#INFO][CSUTLDPY.cpy:372] EXIT statement
    }

    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:59 CDT
    // *
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:12:32 CDT
    // *
}
