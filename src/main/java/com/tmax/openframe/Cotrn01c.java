package com.tmax.openframe;

import com.tmax.openframe.online.task.service.ProgramControl;
import com.tmax.openframe.dto.Cosgn00cInputDto;
import com.tmax.openframe.mapper.Cotrn01cMapperInterface.*;
import com.tmax.openframe.dto.Comen01cInputDto;
import com.tmax.openframe.dto.Cotrn00cInputDto;
import com.tmax.openframe.online.task.service.OtherUserTaskInvoker;
import com.tmax.openframe.online.task.domain.dto.TaskDto.*;
import com.tmax.openframe.online.task.domain.dto.Data;
import com.tmax.openframe.online.task.service.Task;
import com.tmax.openframe.dto.Cotrn01cOutputDto;
import com.tmax.openframe.dto.Cotrn01cInputDto;
import com.tmax.openframe.online.exception.ConditionException;
import com.tmax.openframe.dto.AwsM2CarddemoTransactVsamKsdsDto;
import com.tmax.openframe.online.daoexecutor.service.ReadPointManager;
import com.tmax.openframe.online.daoexecutor.service.RecordKeyAccessor;
import static com.tmax.openframe.variable.group.Cotrn01cCarddemoCommarea.Cotrn01cCdemoGeneralInfo.*;
import static com.tmax.openframe.variable.group.Cotrn01cWsVariables.*;
import com.tmax.openframe.runtime.cobol.CobStream;
import com.tmax.openframe.runtime.cobol.CobStringUtils;
import com.tmax.openframe.runtime.cobol.IntrinsicFunction;
import com.tmax.openframe.runtime.context.OpenFrameContext;
import com.tmax.openframe.runtime.flow.ControlManager;
import com.tmax.openframe.variable.Cotrn01cVariableContainer;
import com.tmax.openframe.variable.group.Cotrn1ai;
import java.math.*;
import java.util.*;
import java.util.function.Consumer;
import lombok.*;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Primary;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:18 KST</p>
 * <hr>
 * <p>Java class for defining logics of COBOL program</p>
 * <ul>
 * <li>The name of COBOL program: COTRN01C.cbl</li>
 * <li>Variable container class: {@link Cotrn01cVariableContainer}</li>
 * </ul>
 */
@Service
@RequiredArgsConstructor
@Transactional
@Primary
public class Cotrn01c {
    /** 
     * <p>Class that manages an execution flow of the program</p>
     */
    protected final ControlManager controlManager;
    Consumer<OpenFrameContext> mainPara = this::mainPara;
    Consumer<OpenFrameContext> processEnterKey = this::processEnterKey;
    Consumer<OpenFrameContext> returnToPrevScreen = this::returnToPrevScreen;
    Consumer<OpenFrameContext> sendTrnviewScreen = this::sendTrnviewScreen;
    Consumer<OpenFrameContext> receiveTrnviewScreen = this::receiveTrnviewScreen;
    Consumer<OpenFrameContext> populateHeaderInfo = this::populateHeaderInfo;
    Consumer<OpenFrameContext> readTransactFile = this::readTransactFile;
    Consumer<OpenFrameContext> clearCurrentScreen = this::clearCurrentScreen;
    Consumer<OpenFrameContext> initializeAllFields = this::initializeAllFields;
    /** 
     * <p>Execution flow of COBOL program that defined in the procedure division</p>
     */
    ArrayList<Consumer> methodList = new ArrayList<>();
    {
        methodList.add(mainPara);
        methodList.add(processEnterKey);
        methodList.add(returnToPrevScreen);
        methodList.add(sendTrnviewScreen);
        methodList.add(receiveTrnviewScreen);
        methodList.add(populateHeaderInfo);
        methodList.add(readTransactFile);
        methodList.add(clearCurrentScreen);
        methodList.add(initializeAllFields);
    }
    private final ReadPointManager readPointManager;
    private final RecordKeyAccessor recordKeyAccessor;
    private final Task task;
    private final TaskInvoker taskInvoker;
    private final ProgramControl programControl;

    /** 
     * <p>Method for executing a program logic that defined in the procedure division</p>
     * @param generalContext context that is necessary for executing program
     * @return return value of program
     */
    public int run(Map<String, Object> generalContext) {
        OpenFrameContext context = new OpenFrameContext(generalContext,
                methodList);
        if (context.getProgramVariableContainer("Cotrn01c") == null) {
            Cotrn01cVariableContainer container = new Cotrn01cVariableContainer();
            context.setProgramVariableContainer("Cotrn01c", container);
        }
        controlManager.run(context);
        return context.getReturnValue();
    }

    // ******************************************************************
    // * Program     : COTRN01C.CBL
    // * Application : CardDemo
    // * Type        : CICS COBOL Program
    // * Function    : View a Transaction from TRANSACT file
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // *      OCCURS 1 TO 32767 TIMES DEPENDING ON EIBCALEN.
    // *----------------------------------------------------------------*
    // *                       PROCEDURE DIVISION
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COTRN01C.cbl:86] MAIN-PARA Paragraph</p>
     */
    void mainPara(OpenFrameContext context) {
        Cotrn01cVariableContainer container = (Cotrn01cVariableContainer) context
                .getProgramVariableContainer("Cotrn01c");
        // [T-Up#INFO][COTRN01C.cbl:88] SET statement
        container.getWsVariables().setWsErrFlg(ERR_FLG_OFF);
        // [T-Up#INFO][COTRN01C.cbl:89] SET statement
        container.getWsVariables().setWsUsrModified(USR_MODIFIED_NO);
        // [T-Up#INFO][COTRN01C.cbl:91] MOVE statement
        container.getWsVariables().setWsMessage(StringUtils.repeat(' ', 80));
        container.setErrmsgo(StringUtils.repeat(' ', 78));
        // [T-Up#INFO][COTRN01C.cbl:94] IF statement
        if (task.hasCommarea() == 0) {
            // [T-Up#INFO][COTRN01C.cbl:95] MOVE statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoToProgram("COSGN00C");
            // [T-Up#INFO][COTRN01C.cbl:96] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromTranid(
                            container.getWsVariables().getWsTranid());
            // [T-Up#INFO][COTRN01C.cbl:97] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromProgram(
                            container.getWsVariables().getWsPgmname());
            // [T-Up#INFO][COTRN01C.cbl:98] MOVE statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(0);
            // [T-Up#INFO][COTRN01C.cbl:99] EXEC_CICS statement
            /*
                               EXEC CICS
                               XCTL PROGRAM('COSGN00C')
                               COMMAREA(CARDDEMO-COMMAREA)
                               END-EXEC
             */
            Cosgn00cInputDto cosgn00cInputDto = new Cosgn00cInputDto();
            cosgn00cInputDto
                    .setDfhcommarea(Cotrn01cCarddemoCommareaToCosgn00cDfhcommarea.INSTANCE
                            .toTarget(container.getCarddemoCommarea()));
            programControl.forward("CC00", cosgn00cInputDto);
            context.setReturnFlag(true);
            // [T-Up#INFO][COTRN01C.cbl:103] PERFORM statement
            controlManager.run(context, returnToPrevScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][COTRN01C.cbl:105] MOVE statement
            container.getCarddemoCommarea().set(
                    StringUtils.overlay(container.getCarddemoCommarea().get(),
                            container.getDfhcommarea().get().substring(0, 218),
                            0, 218));
            // [T-Up#INFO][COTRN01C.cbl:106] IF statement
            if (!(container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .getCdemoPgmContext() == CDEMO_PGM_REENTER)) {
                // [T-Up#INFO][COTRN01C.cbl:107] SET statement
                container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .setCdemoPgmContext(CDEMO_PGM_REENTER);
                // [T-Up#INFO][COTRN01C.cbl:108] MOVE statement
                container.setCotrn1ao(Cotrn1ai.createDefaultValueInstance()
                        .get());
                // [T-Up#INFO][COTRN01C.cbl:109] MOVE statement
                container.getCotrn1ai().setTrnidinl(-1);
                // [T-Up#INFO][COTRN01C.cbl:110] IF statement
                if (CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoCt01Info().getCdemoCt01TrnSelected(),
                        StringUtils.repeat(' ', 16)) != 0
                        && CobStringUtils.compare(container
                                .getCarddemoCommarea().getCdemoCt01Info()
                                .getCdemoCt01TrnSelected(),
                                StringUtils.repeat((char) 0x00, 16)) != 0) {
                    // [T-Up#INFO][COTRN01C.cbl:112] MOVE statement
                    container.getCotrn1ai().setTrnidini(
                            container.getCarddemoCommarea().getCdemoCt01Info()
                                    .getCdemoCt01TrnSelected());
                    // [T-Up#INFO][COTRN01C.cbl:114] PERFORM statement
                    controlManager.run(context, processEnterKey);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                }
                // [T-Up#INFO][COTRN01C.cbl:116] PERFORM statement
                controlManager.run(context, sendTrnviewScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else {
                // [T-Up#INFO][COTRN01C.cbl:118] PERFORM statement
                controlManager.run(context, receiveTrnviewScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][COTRN01C.cbl:119] EVALUATE statement
                if (CobStringUtils.compare(task.getPressedKey(), container
                        .getDfhaid().getDfhenter()) == 0) {
                    // [T-Up#INFO][COTRN01C.cbl:121] PERFORM statement
                    controlManager.run(context, processEnterKey);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                } else if (CobStringUtils.compare(task.getPressedKey(),
                        container.getDfhaid().getDfhpf3()) == 0) {
                    // [T-Up#INFO][COTRN01C.cbl:123] IF statement
                    if (CobStringUtils.compare(container.getCarddemoCommarea()
                            .getCdemoGeneralInfo().getCdemoFromProgram(),
                            StringUtils.repeat(' ', 8)) == 0
                            || CobStringUtils.compare(container
                                    .getCarddemoCommarea()
                                    .getCdemoGeneralInfo()
                                    .getCdemoFromProgram(),
                                    StringUtils.repeat((char) 0x00, 8)) == 0) {
                        // [T-Up#INFO][COTRN01C.cbl:124] MOVE statement
                        container.getCarddemoCommarea().getCdemoGeneralInfo()
                                .setCdemoToProgram("COMEN01C");
                        // [T-Up#INFO][COTRN01C.cbl:125] MOVE statement
                        container
                                .getCarddemoCommarea()
                                .getCdemoGeneralInfo()
                                .setCdemoFromTranid(
                                        container.getWsVariables()
                                                .getWsTranid());
                        // [T-Up#INFO][COTRN01C.cbl:126] MOVE statement
                        container
                                .getCarddemoCommarea()
                                .getCdemoGeneralInfo()
                                .setCdemoFromProgram(
                                        container.getWsVariables()
                                                .getWsPgmname());
                        // [T-Up#INFO][COTRN01C.cbl:127] MOVE statement
                        container.getCarddemoCommarea().getCdemoGeneralInfo()
                                .setCdemoPgmContext(0);
                        // [T-Up#INFO][COTRN01C.cbl:128] EXEC_CICS statement
                        /*
                                                           EXEC CICS
                                                           XCTL PROGRAM('COMEN01C')
                                                           COMMAREA(CARDDEMO-COMMAREA)
                                                           END-EXEC
                         */
                        Comen01cInputDto comen01cInputDto = new Comen01cInputDto();
                        comen01cInputDto
                                .setDfhcommarea(Cotrn01cCarddemoCommareaToComen01cDfhcommarea.INSTANCE
                                        .toTarget(container
                                                .getCarddemoCommarea()));
                        programControl.forward("CM00", comen01cInputDto);
                        context.setReturnFlag(true);
                    } else {
                        // [T-Up#INFO][COTRN01C.cbl:133] MOVE statement
                        container
                                .getCarddemoCommarea()
                                .getCdemoGeneralInfo()
                                .setCdemoToProgram(
                                        container.getCarddemoCommarea()
                                                .getCdemoGeneralInfo()
                                                .getCdemoFromProgram());
                        // [T-Up#INFO][COTRN01C.cbl:135] MOVE statement
                        container
                                .getCarddemoCommarea()
                                .getCdemoGeneralInfo()
                                .setCdemoFromTranid(
                                        container.getWsVariables()
                                                .getWsTranid());
                        // [T-Up#INFO][COTRN01C.cbl:136] MOVE statement
                        container
                                .getCarddemoCommarea()
                                .getCdemoGeneralInfo()
                                .setCdemoFromProgram(
                                        container.getWsVariables()
                                                .getWsPgmname());
                        // [T-Up#INFO][COTRN01C.cbl:137] MOVE statement
                        container.getCarddemoCommarea().getCdemoGeneralInfo()
                                .setCdemoPgmContext(0);
                        // [T-Up#INFO][COTRN01C.cbl:138] IF statement
                        if (CobStringUtils.compare(container
                                .getCarddemoCommarea().getCdemoGeneralInfo()
                                .getCdemoToProgram(), "COTRN00C") == 0) {
                            // [T-Up#INFO][COTRN01C.cbl:139] EXEC_CICS statement
                            /*
                                                                   EXEC CICS
                                                                   XCTL PROGRAM('COTRN00C')
                                                                   COMMAREA(CARDDEMO-COMMAREA)
                                                                   END-EXEC
                             */
                            Cotrn00cInputDto cotrn00cInputDto = new Cotrn00cInputDto();
                            cotrn00cInputDto
                                    .setDfhcommarea(Cotrn01cCarddemoCommareaToCotrn00cDfhcommarea.INSTANCE
                                            .toTarget(container
                                                    .getCarddemoCommarea()));
                            programControl.forward("CT00", cotrn00cInputDto);
                            context.setReturnFlag(true);
                        } else {
                            // [T-Up#INFO][COTRN01C.cbl:143] IF statement
                            if (CobStringUtils.compare(container
                                    .getCarddemoCommarea()
                                    .getCdemoGeneralInfo().getCdemoToProgram(),
                                    "COMEN01C") == 0) {
                                // [T-Up#INFO][COTRN01C.cbl:144] EXEC_CICS statement
                                /*
                                                                       EXEC CICS
                                                                       XCTL PROGRAM('COMEN01C')
                                                                       COMMAREA(CARDDEMO-COMMAREA)
                                                                       END-EXEC
                                 */
                                Comen01cInputDto comen01cInputDto = new Comen01cInputDto();
                                comen01cInputDto
                                        .setDfhcommarea(Cotrn01cCarddemoCommareaToComen01cDfhcommarea.INSTANCE
                                                .toTarget(container
                                                        .getCarddemoCommarea()));
                                programControl
                                        .forward("CM00", comen01cInputDto);
                                context.setReturnFlag(true);
                            }
                        }
                        // [T-Up#INFO][COTRN01C.cbl:150] PERFORM statement
                        controlManager.run(context, returnToPrevScreen);
                        if (controlManager.isTerminate(context)) {
                            return;
                        }
                    }
                } else if (CobStringUtils.compare(task.getPressedKey(),
                        container.getDfhaid().getDfhpf4()) == 0) {
                    // [T-Up#INFO][COTRN01C.cbl:152] PERFORM statement
                    controlManager.run(context, clearCurrentScreen);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                } else if (CobStringUtils.compare(task.getPressedKey(),
                        container.getDfhaid().getDfhpf5()) == 0) {
                    // [T-Up#INFO][COTRN01C.cbl:154] MOVE statement
                    container.getCarddemoCommarea().getCdemoGeneralInfo()
                            .setCdemoToProgram("COTRN00C");
                    // [T-Up#INFO][COTRN01C.cbl:155] MOVE statement
                    container
                            .getCarddemoCommarea()
                            .getCdemoGeneralInfo()
                            .setCdemoFromTranid(
                                    container.getWsVariables().getWsTranid());
                    // [T-Up#INFO][COTRN01C.cbl:156] MOVE statement
                    container
                            .getCarddemoCommarea()
                            .getCdemoGeneralInfo()
                            .setCdemoFromProgram(
                                    container.getWsVariables().getWsPgmname());
                    // [T-Up#INFO][COTRN01C.cbl:157] MOVE statement
                    container.getCarddemoCommarea().getCdemoGeneralInfo()
                            .setCdemoPgmContext(0);
                    // [T-Up#INFO][COTRN01C.cbl:158] EXEC_CICS statement
                    /*
                                                   EXEC CICS
                                                   XCTL PROGRAM('COTRN00C')
                                                   COMMAREA(CARDDEMO-COMMAREA)
                                                   END-EXEC
                     */
                    Cotrn00cInputDto cotrn00cInputDto = new Cotrn00cInputDto();
                    cotrn00cInputDto
                            .setDfhcommarea(Cotrn01cCarddemoCommareaToCotrn00cDfhcommarea.INSTANCE
                                    .toTarget(container.getCarddemoCommarea()));
                    programControl.forward("CT00", cotrn00cInputDto);
                    context.setReturnFlag(true);
                    // [T-Up#INFO][COTRN01C.cbl:162] PERFORM statement
                    controlManager.run(context, returnToPrevScreen);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                } else {
                    // [T-Up#INFO][COTRN01C.cbl:164] MOVE statement
                    container.getWsVariables().setWsErrFlg("Y");
                    // [T-Up#INFO][COTRN01C.cbl:165] MOVE statement
                    container.getWsVariables().setWsMessage(
                            container.getCcdaCommonMessages()
                                    .getCcdaMsgInvalidKey());
                    // [T-Up#INFO][COTRN01C.cbl:166] PERFORM statement
                    controlManager.run(context, sendTrnviewScreen);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                }
            }
        }
        // [T-Up#INFO][COTRN01C.cbl:171] EXEC_CICS statement
        /*
                       EXEC CICS RETURN
                                 TRANSID (WS-TRANID)
                                 COMMAREA (CARDDEMO-COMMAREA)
                       END-EXEC
         */
        TaskDto taskDto = TaskDto
                .builder()
                .destination("CT01")
                .data(Data
                        .session(Cotrn01cCarddemoCommareaToCotrn01cDfhcommarea.INSTANCE
                                .toTarget(container.getCarddemoCommarea())))
                .build();
        taskInvoker.setNextTask(taskDto);
        context.setReturnFlag(true);
    }

    // *----------------------------------------------------------------*
    // *                      PROCESS-ENTER-KEY
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COTRN01C.cbl:179] PROCESS-ENTER-KEY Paragraph</p>
     */
    void processEnterKey(OpenFrameContext context) {
        Cotrn01cVariableContainer container = (Cotrn01cVariableContainer) context
                .getProgramVariableContainer("Cotrn01c");
        // [T-Up#INFO][COTRN01C.cbl:181] EVALUATE statement
        if (CobStringUtils.compare(container.getCotrn1ai().getTrnidini(),
                StringUtils.repeat(' ', 16)) == 0
                || CobStringUtils.compare(
                        container.getCotrn1ai().getTrnidini(),
                        StringUtils.repeat((char) 0x00, 16)) == 0) {
            // [T-Up#INFO][COTRN01C.cbl:183] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][COTRN01C.cbl:184] MOVE statement
            container.getWsVariables().setWsMessage(
                    "Tran ID can NOT be empty...");
            // [T-Up#INFO][COTRN01C.cbl:186] MOVE statement
            container.getCotrn1ai().setTrnidinl(-1);
            // [T-Up#INFO][COTRN01C.cbl:187] PERFORM statement
            controlManager.run(context, sendTrnviewScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][COTRN01C.cbl:189] MOVE statement
            container.getCotrn1ai().setTrnidinl(-1);
            // [T-Up#INFO][COTRN01C.cbl:190] CONTINUE statement
        }
        // [T-Up#INFO][COTRN01C.cbl:193] IF statement
        if (!(CobStringUtils.compare(container.getWsVariables().getWsErrFlg(),
                ERR_FLG_ON) == 0)) {
            // [T-Up#INFO][COTRN01C.cbl:194] MOVE statement
            container.getCotrn1ai().setTrnidi(StringUtils.repeat(' ', 16));
            container.getCotrn1ai().setCardnumi(StringUtils.repeat(' ', 16));
            container.getCotrn1ai().setTtypcdi(StringUtils.repeat(' ', 2));
            container.getCotrn1ai().setTcatcdi(StringUtils.repeat(' ', 4));
            container.getCotrn1ai().setTrnsrci(StringUtils.repeat(' ', 10));
            container.getCotrn1ai().setTrnamti(StringUtils.repeat(' ', 12));
            container.getCotrn1ai().setTdesci(StringUtils.repeat(' ', 60));
            container.getCotrn1ai().setTorigdti(StringUtils.repeat(' ', 10));
            container.getCotrn1ai().setTprocdti(StringUtils.repeat(' ', 10));
            container.getCotrn1ai().setMidi(StringUtils.repeat(' ', 9));
            container.getCotrn1ai().setMnamei(StringUtils.repeat(' ', 30));
            container.getCotrn1ai().setMcityi(StringUtils.repeat(' ', 25));
            container.getCotrn1ai().setMzipi(StringUtils.repeat(' ', 10));
            // [T-Up#INFO][COTRN01C.cbl:207] MOVE statement
            container.getTranRecord().setTranId(
                    container.getCotrn1ai().getTrnidini());
            // [T-Up#INFO][COTRN01C.cbl:208] PERFORM statement
            controlManager.run(context, readTransactFile);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][COTRN01C.cbl:211] IF statement
        if (!(CobStringUtils.compare(container.getWsVariables().getWsErrFlg(),
                ERR_FLG_ON) == 0)) {
            // [T-Up#INFO][COTRN01C.cbl:212] MOVE statement
            container.getWsVariables().setWsTranAmt(
                    container.getTranRecord().getTranAmt());
            // [T-Up#INFO][COTRN01C.cbl:213] MOVE statement
            container.getCotrn1ai().setTrnidi(
                    container.getTranRecord().getTranId());
            // [T-Up#INFO][COTRN01C.cbl:214] MOVE statement
            container.getCotrn1ai().setCardnumi(
                    container.getTranRecord().getTranCardNum());
            // [T-Up#INFO][COTRN01C.cbl:215] MOVE statement
            container.getCotrn1ai().setTtypcdi(
                    container.getTranRecord().getTranTypeCd());
            // [T-Up#INFO][COTRN01C.cbl:216] MOVE statement
            container.getCotrn1ai().setTcatcdi(
                    StringUtils.leftPad(String.valueOf(Math.abs(container
                            .getTranRecord().getTranCatCd())), 4, '0'));
            // [T-Up#INFO][COTRN01C.cbl:217] MOVE statement
            container.getCotrn1ai().setTrnsrci(
                    container.getTranRecord().getTranSource());
            // [T-Up#INFO][COTRN01C.cbl:218] MOVE statement
            container.getCotrn1ai().setTrnamti(
                    container.getWsVariables().getWsTranAmt());
            // [T-Up#INFO][COTRN01C.cbl:219] MOVE statement
            container.getCotrn1ai().setTdesci(
                    container.getTranRecord().getTranDesc());
            // [T-Up#INFO][COTRN01C.cbl:220] MOVE statement
            container.getCotrn1ai().setTorigdti(
                    container.getTranRecord().getTranOrigTs());
            // [T-Up#INFO][COTRN01C.cbl:221] MOVE statement
            container.getCotrn1ai().setTprocdti(
                    container.getTranRecord().getTranProcTs());
            // [T-Up#INFO][COTRN01C.cbl:222] MOVE statement
            container.getCotrn1ai().setMidi(
                    StringUtils.leftPad(String.valueOf(Math.abs(container
                            .getTranRecord().getTranMerchantId())), 9, '0'));
            // [T-Up#INFO][COTRN01C.cbl:223] MOVE statement
            container.getCotrn1ai().setMnamei(
                    container.getTranRecord().getTranMerchantName());
            // [T-Up#INFO][COTRN01C.cbl:224] MOVE statement
            container.getCotrn1ai().setMcityi(
                    container.getTranRecord().getTranMerchantCity());
            // [T-Up#INFO][COTRN01C.cbl:225] MOVE statement
            container.getCotrn1ai().setMzipi(
                    container.getTranRecord().getTranMerchantZip());
            // [T-Up#INFO][COTRN01C.cbl:226] PERFORM statement
            controlManager.run(context, sendTrnviewScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      RETURN-TO-PREV-SCREEN
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COTRN01C.cbl:232] RETURN-TO-PREV-SCREEN Paragraph</p>
     */
    void returnToPrevScreen(OpenFrameContext context) {
    }

    // *     IF CDEMO-TO-PROGRAM = LOW-VALUES OR SPACES
    // *         MOVE 'COSGN00C' TO CDEMO-TO-PROGRAM
    // *     END-IF
    // *     MOVE WS-TRANID    TO CDEMO-FROM-TRANID
    // *     MOVE WS-PGMNAME   TO CDEMO-FROM-PROGRAM
    // *     MOVE ZEROS        TO CDEMO-PGM-CONTEXT
    // *     EXEC CICS
    // *         XCTL PROGRAM(CDEMO-TO-PROGRAM)
    // *         COMMAREA(CARDDEMO-COMMAREA)
    // *     END-EXEC.
    // *----------------------------------------------------------------*
    // *                      SEND-TRNVIEW-SCREEN
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COTRN01C.cbl:248] SEND-TRNVIEW-SCREEN Paragraph</p>
     */
    void sendTrnviewScreen(OpenFrameContext context) {
        Cotrn01cVariableContainer container = (Cotrn01cVariableContainer) context
                .getProgramVariableContainer("Cotrn01c");
        // [T-Up#INFO][COTRN01C.cbl:250] PERFORM statement
        controlManager.run(context, populateHeaderInfo);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COTRN01C.cbl:252] MOVE statement
        container.setErrmsgo(container.getWsVariables().getWsMessage());
        // [T-Up#INFO][COTRN01C.cbl:254] EXEC_CICS statement
        /*
                       EXEC CICS SEND
                                 MAP('COTRN1A')
                                 MAPSET('COTRN01')
                                 FROM(COTRN1AO)
                                 ERASE
                                 CURSOR
                       END-EXEC
         */
        ((Cotrn01cOutputDto) task.getOutputDto())
                .setPageName("COTRN01_COTRN1A");
        ((Cotrn01cOutputDto) task.getOutputDto()).setCotrn1ao(container
                .getCotrn1ao());
    }

    // *----------------------------------------------------------------*
    // *                      RECEIVE-TRNVIEW-SCREEN
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COTRN01C.cbl:265] RECEIVE-TRNVIEW-SCREEN Paragraph</p>
     */
    void receiveTrnviewScreen(OpenFrameContext context) {
        Cotrn01cVariableContainer container = (Cotrn01cVariableContainer) context
                .getProgramVariableContainer("Cotrn01c");
        // [T-Up#INFO][COTRN01C.cbl:267] EXEC_CICS statement
        /*
                       EXEC CICS RECEIVE
                                 MAP('COTRN1A')
                                 MAPSET('COTRN01')
                                 INTO(COTRN1AI)
                                 RESP(WS-RESP-CD)
                                 RESP2(WS-REAS-CD)
                       END-EXEC
         */
        try {
            container.setCotrn1ai(((Cotrn01cInputDto) task.getInputDto())
                    .getCotrn1ai());
        } catch (ConditionException e) {
        } finally {
            container.getWsVariables().setWsRespCd(task.getLastResp());
            container.getWsVariables().setWsReasCd(task.getLastResp2());
        }
    }

    // *----------------------------------------------------------------*
    // *                      POPULATE-HEADER-INFO
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COTRN01C.cbl:278] POPULATE-HEADER-INFO Paragraph</p>
     */
    void populateHeaderInfo(OpenFrameContext context) {
        Cotrn01cVariableContainer container = (Cotrn01cVariableContainer) context
                .getProgramVariableContainer("Cotrn01c");
        // [T-Up#INFO][COTRN01C.cbl:280] MOVE statement
        container.getWsDateTime().getWsCurdateData()
                .set(IntrinsicFunction.functionCurrentDate());
        // [T-Up#INFO][COTRN01C.cbl:282] MOVE statement
        container.setTitle01o(container.getCcdaScreenTitle().getCcdaTitle01());
        // [T-Up#INFO][COTRN01C.cbl:283] MOVE statement
        container.setTitle02o(container.getCcdaScreenTitle().getCcdaTitle02());
        // [T-Up#INFO][COTRN01C.cbl:284] MOVE statement
        container.setTrnnameo(container.getWsVariables().getWsTranid());
        // [T-Up#INFO][COTRN01C.cbl:285] MOVE statement
        container.setPgmnameo(container.getWsVariables().getWsPgmname());
        // [T-Up#INFO][COTRN01C.cbl:287] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateMonth());
        // [T-Up#INFO][COTRN01C.cbl:288] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateDd(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateDay());
        // [T-Up#INFO][COTRN01C.cbl:289] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateYy(
                        Integer.parseInt(CobStream
                                .convZonedIntToString(
                                        container.getWsDateTime()
                                                .getWsCurdateData()
                                                .getWsCurdate()
                                                .getWsCurdateYear(), 4)
                                .substring(2, 4).trim()));
        // [T-Up#INFO][COTRN01C.cbl:291] MOVE statement
        container.setCurdateo(container.getWsDateTime().getWsCurdateMmDdYy()
                .get());
        // [T-Up#INFO][COTRN01C.cbl:293] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeHh(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeHours());
        // [T-Up#INFO][COTRN01C.cbl:294] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeMinute());
        // [T-Up#INFO][COTRN01C.cbl:295] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeSs(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeSecond());
        // [T-Up#INFO][COTRN01C.cbl:297] MOVE statement
        container.setCurtimeo(container.getWsDateTime().getWsCurtimeHhMmSs()
                .get());
    }

    // *----------------------------------------------------------------*
    // *                      READ-TRANSACT-FILE
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COTRN01C.cbl:302] READ-TRANSACT-FILE Paragraph</p>
     */
    void readTransactFile(OpenFrameContext context) {
        Cotrn01cVariableContainer container = (Cotrn01cVariableContainer) context
                .getProgramVariableContainer("Cotrn01c");
        // [T-Up#INFO][COTRN01C.cbl:304] EXEC_CICS statement
        /*
                       EXEC CICS READ
                            DATASET   (WS-TRANSACT-FILE)
                            INTO      (TRAN-RECORD)
                            LENGTH    (LENGTH OF TRAN-RECORD)
                            RIDFLD    (TRAN-ID)
                            KEYLENGTH (LENGTH OF TRAN-ID)
                            UPDATE
                            RESP      (WS-RESP-CD)
                            RESP2     (WS-REAS-CD)
                       END-EXEC
         */
        try {
            AwsM2CarddemoTransactVsamKsdsDto awsM2CarddemoTransactVsamKsdsDto = recordKeyAccessor
                    .readForUpdate("awsM2CarddemoTransactVsamKsdsDao",
                            container.getTranRecord().getTranId());
            container
                    .setTranRecord(TranRecordToAwsM2CarddemoTransactVsamKsdsDto.INSTANCE
                            .toSource(awsM2CarddemoTransactVsamKsdsDto));
        } catch (ConditionException e) {
        } finally {
            container.getWsVariables().setWsRespCd(task.getLastResp());
            container.getWsVariables().setWsReasCd(task.getLastResp2());
        }
        // [T-Up#INFO][COTRN01C.cbl:315] EVALUATE statement
        if (container.getWsVariables().getWsRespCd() == 0) {
            // [T-Up#INFO][COTRN01C.cbl:317] CONTINUE statement
        } else if (container.getWsVariables().getWsRespCd() == 13) {
            // [T-Up#INFO][COTRN01C.cbl:319] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][COTRN01C.cbl:320] MOVE statement
            container.getWsVariables().setWsMessage(
                    "Transaction ID NOT found...");
            // [T-Up#INFO][COTRN01C.cbl:322] MOVE statement
            container.getCotrn1ai().setTrnidinl(-1);
            // [T-Up#INFO][COTRN01C.cbl:323] PERFORM statement
            controlManager.run(context, sendTrnviewScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][COTRN01C.cbl:325] DISPLAY statement
            System.out.print("RESP:");
            System.out.print(container.getWsVariables().getWsRespCd());
            System.out.print("REAS:");
            System.out.println(container.getWsVariables().getWsReasCd());
            // [T-Up#INFO][COTRN01C.cbl:326] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][COTRN01C.cbl:327] MOVE statement
            container.getWsVariables().setWsMessage(
                    "Unable to lookup Transaction...");
            // [T-Up#INFO][COTRN01C.cbl:329] MOVE statement
            container.getCotrn1ai().setTrnidinl(-1);
            // [T-Up#INFO][COTRN01C.cbl:330] PERFORM statement
            controlManager.run(context, sendTrnviewScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      CLEAR-CURRENT-SCREEN
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COTRN01C.cbl:336] CLEAR-CURRENT-SCREEN Paragraph</p>
     */
    void clearCurrentScreen(OpenFrameContext context) {
        // [T-Up#INFO][COTRN01C.cbl:338] PERFORM statement
        controlManager.run(context, initializeAllFields);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COTRN01C.cbl:339] PERFORM statement
        controlManager.run(context, sendTrnviewScreen);
        if (controlManager.isTerminate(context)) {
            return;
        }
    }

    // *----------------------------------------------------------------*
    // *                      INITIALIZE-ALL-FIELDS
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COTRN01C.cbl:344] INITIALIZE-ALL-FIELDS Paragraph</p>
     */
    void initializeAllFields(OpenFrameContext context) {
        Cotrn01cVariableContainer container = (Cotrn01cVariableContainer) context
                .getProgramVariableContainer("Cotrn01c");
        // [T-Up#INFO][COTRN01C.cbl:346] MOVE statement
        container.getCotrn1ai().setTrnidinl(-1);
        // [T-Up#INFO][COTRN01C.cbl:347] MOVE statement
        container.getCotrn1ai().setTrnidini(StringUtils.repeat(' ', 16));
        container.getCotrn1ai().setTrnidi(StringUtils.repeat(' ', 16));
        container.getCotrn1ai().setCardnumi(StringUtils.repeat(' ', 16));
        container.getCotrn1ai().setTtypcdi(StringUtils.repeat(' ', 2));
        container.getCotrn1ai().setTcatcdi(StringUtils.repeat(' ', 4));
        container.getCotrn1ai().setTrnsrci(StringUtils.repeat(' ', 10));
        container.getCotrn1ai().setTrnamti(StringUtils.repeat(' ', 12));
        container.getCotrn1ai().setTdesci(StringUtils.repeat(' ', 60));
        container.getCotrn1ai().setTorigdti(StringUtils.repeat(' ', 10));
        container.getCotrn1ai().setTprocdti(StringUtils.repeat(' ', 10));
        container.getCotrn1ai().setMidi(StringUtils.repeat(' ', 9));
        container.getCotrn1ai().setMnamei(StringUtils.repeat(' ', 30));
        container.getCotrn1ai().setMcityi(StringUtils.repeat(' ', 25));
        container.getCotrn1ai().setMzipi(StringUtils.repeat(' ', 10));
        container.getWsVariables().setWsMessage(StringUtils.repeat(' ', 80));
    }

    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:12:34 CDT
    // *
}
