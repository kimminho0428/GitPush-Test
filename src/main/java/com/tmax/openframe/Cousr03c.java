package com.tmax.openframe;

import com.tmax.openframe.online.task.service.ProgramControl;
import com.tmax.openframe.dto.Cosgn00cInputDto;
import com.tmax.openframe.mapper.Cousr03cMapperInterface.*;
import com.tmax.openframe.dto.Cousr00cInputDto;
import com.tmax.openframe.dto.Coadm01cInputDto;
import com.tmax.openframe.online.task.service.OtherUserTaskInvoker;
import com.tmax.openframe.online.task.domain.dto.TaskDto.*;
import com.tmax.openframe.online.task.domain.dto.Data;
import com.tmax.openframe.online.task.service.Task;
import com.tmax.openframe.dto.Cousr03cOutputDto;
import com.tmax.openframe.dto.Cousr03cInputDto;
import com.tmax.openframe.online.exception.ConditionException;
import com.tmax.openframe.dto.AwsM2CarddemoUsrsecVsamKsdsDto;
import com.tmax.openframe.online.daoexecutor.service.ReadPointManager;
import com.tmax.openframe.online.daoexecutor.service.RecordKeyAccessor;
import static com.tmax.openframe.variable.group.Cousr03cCarddemoCommarea.Cousr03cCdemoGeneralInfo.*;
import static com.tmax.openframe.variable.group.Cousr03cWsVariables.*;
import com.tmax.openframe.runtime.cobol.CobStream;
import com.tmax.openframe.runtime.cobol.CobStringUtils;
import com.tmax.openframe.runtime.cobol.IntrinsicFunction;
import com.tmax.openframe.runtime.context.OpenFrameContext;
import com.tmax.openframe.runtime.flow.ControlManager;
import com.tmax.openframe.variable.Cousr03cVariableContainer;
import com.tmax.openframe.variable.group.Cousr3ai;
import java.math.*;
import java.util.*;
import java.util.function.Consumer;
import java.util.regex.Pattern;
import lombok.*;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Primary;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:20 KST</p>
 * <hr>
 * <p>Java class for defining logics of COBOL program</p>
 * <ul>
 * <li>The name of COBOL program: COUSR03C.cbl</li>
 * <li>Variable container class: {@link Cousr03cVariableContainer}</li>
 * </ul>
 */
@Service
@RequiredArgsConstructor
@Transactional
@Primary
public class Cousr03c {
    /** 
     * <p>Class that manages an execution flow of the program</p>
     */
    protected final ControlManager controlManager;
    Consumer<OpenFrameContext> mainPara = this::mainPara;
    Consumer<OpenFrameContext> processEnterKey = this::processEnterKey;
    Consumer<OpenFrameContext> deleteUserInfo = this::deleteUserInfo;
    Consumer<OpenFrameContext> returnToPrevScreen = this::returnToPrevScreen;
    Consumer<OpenFrameContext> sendUsrdelScreen = this::sendUsrdelScreen;
    Consumer<OpenFrameContext> receiveUsrdelScreen = this::receiveUsrdelScreen;
    Consumer<OpenFrameContext> populateHeaderInfo = this::populateHeaderInfo;
    Consumer<OpenFrameContext> readUserSecFile = this::readUserSecFile;
    Consumer<OpenFrameContext> deleteUserSecFile = this::deleteUserSecFile;
    Consumer<OpenFrameContext> clearCurrentScreen = this::clearCurrentScreen;
    Consumer<OpenFrameContext> initializeAllFields = this::initializeAllFields;
    /** 
     * <p>Execution flow of COBOL program that defined in the procedure division</p>
     */
    ArrayList<Consumer> methodList = new ArrayList<>();
    {
        methodList.add(mainPara);
        methodList.add(processEnterKey);
        methodList.add(deleteUserInfo);
        methodList.add(returnToPrevScreen);
        methodList.add(sendUsrdelScreen);
        methodList.add(receiveUsrdelScreen);
        methodList.add(populateHeaderInfo);
        methodList.add(readUserSecFile);
        methodList.add(deleteUserSecFile);
        methodList.add(clearCurrentScreen);
        methodList.add(initializeAllFields);
    }
    private final ReadPointManager readPointManager;
    private final RecordKeyAccessor recordKeyAccessor;
    private final Task task;
    private final TaskInvoker taskInvoker;
    private final ProgramControl programControl;

    /** 
     * <p>Method for executing a program logic that defined in the procedure division</p>
     * @param generalContext context that is necessary for executing program
     * @return return value of program
     */
    public int run(Map<String, Object> generalContext) {
        OpenFrameContext context = new OpenFrameContext(generalContext,
                methodList);
        if (context.getProgramVariableContainer("Cousr03c") == null) {
            Cousr03cVariableContainer container = new Cousr03cVariableContainer();
            context.setProgramVariableContainer("Cousr03c", container);
        }
        controlManager.run(context);
        return context.getReturnValue();
    }

    // ******************************************************************
    // * Program     : COUSR03C.CBL
    // * Application : CardDemo
    // * Type        : CICS COBOL Program
    // * Function    : Delete a user from USRSEC file
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // *      OCCURS 1 TO 32767 TIMES DEPENDING ON EIBCALEN.
    // *----------------------------------------------------------------*
    // *                       PROCEDURE DIVISION
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR03C.cbl:82] MAIN-PARA Paragraph</p>
     */
    void mainPara(OpenFrameContext context) {
        Cousr03cVariableContainer container = (Cousr03cVariableContainer) context
                .getProgramVariableContainer("Cousr03c");
        // [T-Up#INFO][COUSR03C.cbl:84] SET statement
        container.getWsVariables().setWsErrFlg(ERR_FLG_OFF);
        // [T-Up#INFO][COUSR03C.cbl:85] SET statement
        container.getWsVariables().setWsUsrModified(USR_MODIFIED_NO);
        // [T-Up#INFO][COUSR03C.cbl:87] MOVE statement
        container.getWsVariables().setWsMessage(StringUtils.repeat(' ', 80));
        container.setErrmsgo(StringUtils.repeat(' ', 78));
        // [T-Up#INFO][COUSR03C.cbl:90] IF statement
        if (task.hasCommarea() == 0) {
            // [T-Up#INFO][COUSR03C.cbl:91] MOVE statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoToProgram("COSGN00C");
            // [T-Up#INFO][COUSR03C.cbl:92] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromTranid(
                            container.getWsVariables().getWsTranid());
            // [T-Up#INFO][COUSR03C.cbl:93] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromProgram(
                            container.getWsVariables().getWsPgmname());
            // [T-Up#INFO][COUSR03C.cbl:94] MOVE statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(0);
            // [T-Up#INFO][COUSR03C.cbl:96] EXEC_CICS statement
            /*
                               EXEC CICS
                               XCTL PROGRAM('COSGN00C')
                               COMMAREA(CARDDEMO-COMMAREA)
                               END-EXEC
             */
            Cosgn00cInputDto cosgn00cInputDto = new Cosgn00cInputDto();
            cosgn00cInputDto
                    .setDfhcommarea(Cousr03cCarddemoCommareaToCosgn00cDfhcommarea.INSTANCE
                            .toTarget(container.getCarddemoCommarea()));
            programControl.forward("CC00", cosgn00cInputDto);
            context.setReturnFlag(true);
            // [T-Up#INFO][COUSR03C.cbl:100] PERFORM statement
            controlManager.run(context, returnToPrevScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][COUSR03C.cbl:102] MOVE statement
            container.getCarddemoCommarea().set(
                    StringUtils.overlay(container.getCarddemoCommarea().get(),
                            container.getDfhcommarea().get().substring(0, 194),
                            0, 194));
            // [T-Up#INFO][COUSR03C.cbl:103] IF statement
            if (!(container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .getCdemoPgmContext() == CDEMO_PGM_REENTER)) {
                // [T-Up#INFO][COUSR03C.cbl:104] SET statement
                container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .setCdemoPgmContext(CDEMO_PGM_REENTER);
                // [T-Up#INFO][COUSR03C.cbl:105] MOVE statement
                container.setCousr3ao(Cousr3ai.createDefaultValueInstance()
                        .get());
                // [T-Up#INFO][COUSR03C.cbl:106] MOVE statement
                container.getCousr3ai().setUsridinl(-1);
                // [T-Up#INFO][COUSR03C.cbl:107] IF statement
                if (CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoCu03Info().getCdemoCu03UsrSelected(),
                        StringUtils.repeat(' ', 8)) != 0
                        && CobStringUtils.compare(container
                                .getCarddemoCommarea().getCdemoCu03Info()
                                .getCdemoCu03UsrSelected(),
                                StringUtils.repeat((char) 0x00, 8)) != 0) {
                    // [T-Up#INFO][COUSR03C.cbl:109] MOVE statement
                    container.getCousr3ai().setUsridini(
                            container.getCarddemoCommarea().getCdemoCu03Info()
                                    .getCdemoCu03UsrSelected());
                    // [T-Up#INFO][COUSR03C.cbl:111] PERFORM statement
                    controlManager.run(context, processEnterKey);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                }
                // [T-Up#INFO][COUSR03C.cbl:113] PERFORM statement
                controlManager.run(context, sendUsrdelScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else {
                // [T-Up#INFO][COUSR03C.cbl:115] PERFORM statement
                controlManager.run(context, receiveUsrdelScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][COUSR03C.cbl:116] EVALUATE statement
                if (CobStringUtils.compare(task.getPressedKey(), container
                        .getDfhaid().getDfhenter()) == 0) {
                    // [T-Up#INFO][COUSR03C.cbl:118] PERFORM statement
                    controlManager.run(context, processEnterKey);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                } else if (CobStringUtils.compare(task.getPressedKey(),
                        container.getDfhaid().getDfhpf3()) == 0) {
                    // [T-Up#INFO][COUSR03C.cbl:120] IF statement
                    if (CobStringUtils.compare(container.getCarddemoCommarea()
                            .getCdemoGeneralInfo().getCdemoFromProgram(),
                            StringUtils.repeat(' ', 8)) == 0
                            || CobStringUtils.compare(container
                                    .getCarddemoCommarea()
                                    .getCdemoGeneralInfo()
                                    .getCdemoFromProgram(),
                                    StringUtils.repeat((char) 0x00, 8)) == 0) {
                        // [T-Up#INFO][COUSR03C.cbl:121] MOVE statement
                        container.getCarddemoCommarea().getCdemoGeneralInfo()
                                .setCdemoToProgram("COADM01C");
                        // [T-Up#INFO][COUSR03C.cbl:122] MOVE statement
                        container
                                .getCarddemoCommarea()
                                .getCdemoGeneralInfo()
                                .setCdemoFromTranid(
                                        container.getWsVariables()
                                                .getWsTranid());
                        // [T-Up#INFO][COUSR03C.cbl:123] MOVE statement
                        container
                                .getCarddemoCommarea()
                                .getCdemoGeneralInfo()
                                .setCdemoFromProgram(
                                        container.getWsVariables()
                                                .getWsPgmname());
                        // [T-Up#INFO][COUSR03C.cbl:124] MOVE statement
                        container.getCarddemoCommarea().getCdemoGeneralInfo()
                                .setCdemoPgmContext(0);
                        // [T-Up#INFO][COUSR03C.cbl:126] EXEC_CICS statement
                        /*
                                                           EXEC CICS
                                                           XCTL PROGRAM('COSGN00C')
                                                           COMMAREA(CARDDEMO-COMMAREA)
                                                           END-EXEC
                         */
                        Cosgn00cInputDto cosgn00cInputDto = new Cosgn00cInputDto();
                        cosgn00cInputDto
                                .setDfhcommarea(Cousr03cCarddemoCommareaToCosgn00cDfhcommarea.INSTANCE
                                        .toTarget(container
                                                .getCarddemoCommarea()));
                        programControl.forward("CC00", cosgn00cInputDto);
                        context.setReturnFlag(true);
                    } else {
                        // [T-Up#INFO][COUSR03C.cbl:131] MOVE statement
                        container
                                .getCarddemoCommarea()
                                .getCdemoGeneralInfo()
                                .setCdemoToProgram(
                                        container.getCarddemoCommarea()
                                                .getCdemoGeneralInfo()
                                                .getCdemoFromProgram());
                        // [T-Up#INFO][COUSR03C.cbl:133] MOVE statement
                        container
                                .getCarddemoCommarea()
                                .getCdemoGeneralInfo()
                                .setCdemoFromTranid(
                                        container.getWsVariables()
                                                .getWsTranid());
                        // [T-Up#INFO][COUSR03C.cbl:134] MOVE statement
                        container
                                .getCarddemoCommarea()
                                .getCdemoGeneralInfo()
                                .setCdemoFromProgram(
                                        container.getWsVariables()
                                                .getWsPgmname());
                        // [T-Up#INFO][COUSR03C.cbl:135] MOVE statement
                        container.getCarddemoCommarea().getCdemoGeneralInfo()
                                .setCdemoPgmContext(0);
                        // [T-Up#INFO][COUSR03C.cbl:136] IF statement
                        if (CobStringUtils.compare(container
                                .getCarddemoCommarea().getCdemoGeneralInfo()
                                .getCdemoToProgram(), "COUSR00C") == 0) {
                            // [T-Up#INFO][COUSR03C.cbl:137] EXEC_CICS statement
                            /*
                                                                   EXEC CICS
                                                                   XCTL PROGRAM('COUSR00C')
                                                                   COMMAREA(CARDDEMO-COMMAREA)
                                                                   END-EXEC
                             */
                            Cousr00cInputDto cousr00cInputDto = new Cousr00cInputDto();
                            cousr00cInputDto
                                    .setDfhcommarea(Cousr03cCarddemoCommareaToCousr00cDfhcommarea.INSTANCE
                                            .toTarget(container
                                                    .getCarddemoCommarea()));
                            programControl.forward("CU00", cousr00cInputDto);
                            context.setReturnFlag(true);
                        } else {
                            // [T-Up#INFO][COUSR03C.cbl:141] IF statement
                            if (CobStringUtils.compare(container
                                    .getCarddemoCommarea()
                                    .getCdemoGeneralInfo().getCdemoToProgram(),
                                    "COADM01C") == 0) {
                                // [T-Up#INFO][COUSR03C.cbl:142] EXEC_CICS statement
                                /*
                                                                       EXEC CICS
                                                                       XCTL PROGRAM('COADM01C')
                                                                       COMMAREA(CARDDEMO-COMMAREA)
                                                                       END-EXEC
                                 */
                                Coadm01cInputDto coadm01cInputDto = new Coadm01cInputDto();
                                coadm01cInputDto
                                        .setDfhcommarea(Cousr03cCarddemoCommareaToCoadm01cDfhcommarea.INSTANCE
                                                .toTarget(container
                                                        .getCarddemoCommarea()));
                                programControl
                                        .forward("CA00", coadm01cInputDto);
                                context.setReturnFlag(true);
                            }
                        }
                        // [T-Up#INFO][COUSR03C.cbl:148] PERFORM statement
                        controlManager.run(context, returnToPrevScreen);
                        if (controlManager.isTerminate(context)) {
                            return;
                        }
                    }
                } else if (CobStringUtils.compare(task.getPressedKey(),
                        container.getDfhaid().getDfhpf4()) == 0) {
                    // [T-Up#INFO][COUSR03C.cbl:150] PERFORM statement
                    controlManager.run(context, clearCurrentScreen);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                } else if (CobStringUtils.compare(task.getPressedKey(),
                        container.getDfhaid().getDfhpf5()) == 0) {
                    // [T-Up#INFO][COUSR03C.cbl:152] PERFORM statement
                    controlManager.run(context, deleteUserInfo);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                } else if (CobStringUtils.compare(task.getPressedKey(),
                        container.getDfhaid().getDfhpf12()) == 0) {
                    // [T-Up#INFO][COUSR03C.cbl:154] MOVE statement
                    container.getCarddemoCommarea().getCdemoGeneralInfo()
                            .setCdemoToProgram("COADM01C");
                    // [T-Up#INFO][COUSR03C.cbl:155] MOVE statement
                    container
                            .getCarddemoCommarea()
                            .getCdemoGeneralInfo()
                            .setCdemoFromTranid(
                                    container.getWsVariables().getWsTranid());
                    // [T-Up#INFO][COUSR03C.cbl:156] MOVE statement
                    container
                            .getCarddemoCommarea()
                            .getCdemoGeneralInfo()
                            .setCdemoFromProgram(
                                    container.getWsVariables().getWsPgmname());
                    // [T-Up#INFO][COUSR03C.cbl:157] MOVE statement
                    container.getCarddemoCommarea().getCdemoGeneralInfo()
                            .setCdemoPgmContext(0);
                    // [T-Up#INFO][COUSR03C.cbl:159] EXEC_CICS statement
                    /*
                                                   EXEC CICS
                                                   XCTL PROGRAM('COADM01C')
                                                   COMMAREA(CARDDEMO-COMMAREA)
                                                   END-EXEC
                     */
                    Coadm01cInputDto coadm01cInputDto = new Coadm01cInputDto();
                    coadm01cInputDto
                            .setDfhcommarea(Cousr03cCarddemoCommareaToCoadm01cDfhcommarea.INSTANCE
                                    .toTarget(container.getCarddemoCommarea()));
                    programControl.forward("CA00", coadm01cInputDto);
                    context.setReturnFlag(true);
                    // [T-Up#INFO][COUSR03C.cbl:163] PERFORM statement
                    controlManager.run(context, returnToPrevScreen);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                } else {
                    // [T-Up#INFO][COUSR03C.cbl:165] MOVE statement
                    container.getWsVariables().setWsErrFlg("Y");
                    // [T-Up#INFO][COUSR03C.cbl:166] MOVE statement
                    container.getWsVariables().setWsMessage(
                            container.getCcdaCommonMessages()
                                    .getCcdaMsgInvalidKey());
                    // [T-Up#INFO][COUSR03C.cbl:167] PERFORM statement
                    controlManager.run(context, sendUsrdelScreen);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                }
            }
        }
        // [T-Up#INFO][COUSR03C.cbl:172] EXEC_CICS statement
        /*
                       EXEC CICS RETURN
                                 TRANSID (WS-TRANID)
                                 COMMAREA (CARDDEMO-COMMAREA)
                       END-EXEC
         */
        TaskDto taskDto = TaskDto
                .builder()
                .destination("CU03")
                .data(Data
                        .session(Cousr03cCarddemoCommareaToCousr03cDfhcommarea.INSTANCE
                                .toTarget(container.getCarddemoCommarea())))
                .build();
        taskInvoker.setNextTask(taskDto);
        context.setReturnFlag(true);
    }

    // *----------------------------------------------------------------*
    // *                      PROCESS-ENTER-KEY
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR03C.cbl:180] PROCESS-ENTER-KEY Paragraph</p>
     */
    void processEnterKey(OpenFrameContext context) {
        Cousr03cVariableContainer container = (Cousr03cVariableContainer) context
                .getProgramVariableContainer("Cousr03c");
        // [T-Up#INFO][COUSR03C.cbl:182] EVALUATE statement
        if (CobStringUtils.compare(container.getCousr3ai().getUsridini(),
                StringUtils.repeat(' ', 8)) == 0
                || CobStringUtils.compare(
                        container.getCousr3ai().getUsridini(),
                        StringUtils.repeat((char) 0x00, 8)) == 0) {
            // [T-Up#INFO][COUSR03C.cbl:184] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][COUSR03C.cbl:185] MOVE statement
            container.getWsVariables().setWsMessage(
                    "User ID can NOT be empty...");
            // [T-Up#INFO][COUSR03C.cbl:187] MOVE statement
            container.getCousr3ai().setUsridinl(-1);
            // [T-Up#INFO][COUSR03C.cbl:188] PERFORM statement
            controlManager.run(context, sendUsrdelScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][COUSR03C.cbl:190] MOVE statement
            container.getCousr3ai().setUsridinl(-1);
            // [T-Up#INFO][COUSR03C.cbl:191] CONTINUE statement
        }
        // [T-Up#INFO][COUSR03C.cbl:194] IF statement
        if (!(CobStringUtils.compare(container.getWsVariables().getWsErrFlg(),
                ERR_FLG_ON) == 0)) {
            // [T-Up#INFO][COUSR03C.cbl:195] MOVE statement
            container.getCousr3ai().setFnamei(StringUtils.repeat(' ', 20));
            container.getCousr3ai().setLnamei(StringUtils.repeat(' ', 20));
            container.getCousr3ai().setUsrtypei(" ");
            // [T-Up#INFO][COUSR03C.cbl:198] MOVE statement
            container.getSecUserData().setSecUsrId(
                    container.getCousr3ai().getUsridini());
            // [T-Up#INFO][COUSR03C.cbl:199] PERFORM statement
            controlManager.run(context, readUserSecFile);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][COUSR03C.cbl:202] IF statement
        if (!(CobStringUtils.compare(container.getWsVariables().getWsErrFlg(),
                ERR_FLG_ON) == 0)) {
            // [T-Up#INFO][COUSR03C.cbl:203] MOVE statement
            container.getCousr3ai().setFnamei(
                    container.getSecUserData().getSecUsrFname());
            // [T-Up#INFO][COUSR03C.cbl:204] MOVE statement
            container.getCousr3ai().setLnamei(
                    container.getSecUserData().getSecUsrLname());
            // [T-Up#INFO][COUSR03C.cbl:205] MOVE statement
            container.getCousr3ai().setUsrtypei(
                    container.getSecUserData().getSecUsrType());
            // [T-Up#INFO][COUSR03C.cbl:206] PERFORM statement
            controlManager.run(context, sendUsrdelScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      DELETE-USER-INFO
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR03C.cbl:212] DELETE-USER-INFO Paragraph</p>
     */
    void deleteUserInfo(OpenFrameContext context) {
        Cousr03cVariableContainer container = (Cousr03cVariableContainer) context
                .getProgramVariableContainer("Cousr03c");
        // [T-Up#INFO][COUSR03C.cbl:214] EVALUATE statement
        if (CobStringUtils.compare(container.getCousr3ai().getUsridini(),
                StringUtils.repeat(' ', 8)) == 0
                || CobStringUtils.compare(
                        container.getCousr3ai().getUsridini(),
                        StringUtils.repeat((char) 0x00, 8)) == 0) {
            // [T-Up#INFO][COUSR03C.cbl:216] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][COUSR03C.cbl:217] MOVE statement
            container.getWsVariables().setWsMessage(
                    "User ID can NOT be empty...");
            // [T-Up#INFO][COUSR03C.cbl:219] MOVE statement
            container.getCousr3ai().setUsridinl(-1);
            // [T-Up#INFO][COUSR03C.cbl:220] PERFORM statement
            controlManager.run(context, sendUsrdelScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][COUSR03C.cbl:222] MOVE statement
            container.getCousr3ai().setUsridinl(-1);
            // [T-Up#INFO][COUSR03C.cbl:223] CONTINUE statement
        }
        // [T-Up#INFO][COUSR03C.cbl:226] IF statement
        if (!(CobStringUtils.compare(container.getWsVariables().getWsErrFlg(),
                ERR_FLG_ON) == 0)) {
            // [T-Up#INFO][COUSR03C.cbl:227] MOVE statement
            container.getSecUserData().setSecUsrId(
                    container.getCousr3ai().getUsridini());
            // [T-Up#INFO][COUSR03C.cbl:228] PERFORM statement
            controlManager.run(context, readUserSecFile);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COUSR03C.cbl:229] PERFORM statement
            controlManager.run(context, deleteUserSecFile);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      RETURN-TO-PREV-SCREEN
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR03C.cbl:235] RETURN-TO-PREV-SCREEN Paragraph</p>
     */
    void returnToPrevScreen(OpenFrameContext context) {
    }

    // *     IF CDEMO-TO-PROGRAM = LOW-VALUES OR SPACES
    // *         MOVE 'COSGN00C' TO CDEMO-TO-PROGRAM
    // *     END-IF
    // *     MOVE WS-TRANID    TO CDEMO-FROM-TRANID
    // *     MOVE WS-PGMNAME   TO CDEMO-FROM-PROGRAM
    // *     MOVE ZEROS        TO CDEMO-PGM-CONTEXT
    // *     EXEC CICS
    // *         XCTL PROGRAM(CDEMO-TO-PROGRAM)
    // *         COMMAREA(CARDDEMO-COMMAREA)
    // *     END-EXEC.
    // *----------------------------------------------------------------*
    // *                      SEND-USRDEL-SCREEN
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR03C.cbl:251] SEND-USRDEL-SCREEN Paragraph</p>
     */
    void sendUsrdelScreen(OpenFrameContext context) {
        Cousr03cVariableContainer container = (Cousr03cVariableContainer) context
                .getProgramVariableContainer("Cousr03c");
        // [T-Up#INFO][COUSR03C.cbl:253] PERFORM statement
        controlManager.run(context, populateHeaderInfo);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COUSR03C.cbl:255] MOVE statement
        container.setErrmsgo(container.getWsVariables().getWsMessage());
        // [T-Up#INFO][COUSR03C.cbl:257] EXEC_CICS statement
        /*
                       EXEC CICS SEND
                                 MAP('COUSR3A')
                                 MAPSET('COUSR03')
                                 FROM(COUSR3AO)
                                 ERASE
                                 CURSOR
                       END-EXEC
         */
        ((Cousr03cOutputDto) task.getOutputDto())
                .setPageName("COUSR03_COUSR3A");
        ((Cousr03cOutputDto) task.getOutputDto()).setCousr3ao(container
                .getCousr3ao());
    }

    // *----------------------------------------------------------------*
    // *                      RECEIVE-USRDEL-SCREEN
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR03C.cbl:268] RECEIVE-USRDEL-SCREEN Paragraph</p>
     */
    void receiveUsrdelScreen(OpenFrameContext context) {
        Cousr03cVariableContainer container = (Cousr03cVariableContainer) context
                .getProgramVariableContainer("Cousr03c");
        // [T-Up#INFO][COUSR03C.cbl:270] EXEC_CICS statement
        /*
                       EXEC CICS RECEIVE
                                 MAP('COUSR3A')
                                 MAPSET('COUSR03')
                                 INTO(COUSR3AI)
                                 RESP(WS-RESP-CD)
                                 RESP2(WS-REAS-CD)
                       END-EXEC
         */
        try {
            container.setCousr3ai(((Cousr03cInputDto) task.getInputDto())
                    .getCousr3ai());
        } catch (ConditionException e) {
        } finally {
            container.getWsVariables().setWsRespCd(task.getLastResp());
            container.getWsVariables().setWsReasCd(task.getLastResp2());
        }
    }

    // *----------------------------------------------------------------*
    // *                      POPULATE-HEADER-INFO
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR03C.cbl:281] POPULATE-HEADER-INFO Paragraph</p>
     */
    void populateHeaderInfo(OpenFrameContext context) {
        Cousr03cVariableContainer container = (Cousr03cVariableContainer) context
                .getProgramVariableContainer("Cousr03c");
        // [T-Up#INFO][COUSR03C.cbl:283] MOVE statement
        container.getWsDateTime().getWsCurdateData()
                .set(IntrinsicFunction.functionCurrentDate());
        // [T-Up#INFO][COUSR03C.cbl:285] MOVE statement
        container.setTitle01o(container.getCcdaScreenTitle().getCcdaTitle01());
        // [T-Up#INFO][COUSR03C.cbl:286] MOVE statement
        container.setTitle02o(container.getCcdaScreenTitle().getCcdaTitle02());
        // [T-Up#INFO][COUSR03C.cbl:287] MOVE statement
        container.setTrnnameo(container.getWsVariables().getWsTranid());
        // [T-Up#INFO][COUSR03C.cbl:288] MOVE statement
        container.setPgmnameo(container.getWsVariables().getWsPgmname());
        // [T-Up#INFO][COUSR03C.cbl:290] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateMonth());
        // [T-Up#INFO][COUSR03C.cbl:291] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateDd(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateDay());
        // [T-Up#INFO][COUSR03C.cbl:292] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateYy(
                        Integer.parseInt(CobStream
                                .convZonedIntToString(
                                        container.getWsDateTime()
                                                .getWsCurdateData()
                                                .getWsCurdate()
                                                .getWsCurdateYear(), 4)
                                .substring(2, 4).trim()));
        // [T-Up#INFO][COUSR03C.cbl:294] MOVE statement
        container.setCurdateo(container.getWsDateTime().getWsCurdateMmDdYy()
                .get());
        // [T-Up#INFO][COUSR03C.cbl:296] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeHh(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeHours());
        // [T-Up#INFO][COUSR03C.cbl:297] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeMinute());
        // [T-Up#INFO][COUSR03C.cbl:298] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeSs(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeSecond());
        // [T-Up#INFO][COUSR03C.cbl:300] MOVE statement
        container.setCurtimeo(container.getWsDateTime().getWsCurtimeHhMmSs()
                .get());
    }

    // *----------------------------------------------------------------*
    // *                      READ-USER-SEC-FILE
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR03C.cbl:305] READ-USER-SEC-FILE Paragraph</p>
     */
    void readUserSecFile(OpenFrameContext context) {
        Cousr03cVariableContainer container = (Cousr03cVariableContainer) context
                .getProgramVariableContainer("Cousr03c");
        // [T-Up#INFO][COUSR03C.cbl:307] EXEC_CICS statement
        /*
                       EXEC CICS READ
                            DATASET   (WS-USRSEC-FILE)
                            INTO      (SEC-USER-DATA)
                            LENGTH    (LENGTH OF SEC-USER-DATA)
                            RIDFLD    (SEC-USR-ID)
                            KEYLENGTH (LENGTH OF SEC-USR-ID)
                            UPDATE
                            RESP      (WS-RESP-CD)
                            RESP2     (WS-REAS-CD)
                       END-EXEC
         */
        try {
            AwsM2CarddemoUsrsecVsamKsdsDto awsM2CarddemoUsrsecVsamKsdsDto = recordKeyAccessor
                    .readForUpdate("awsM2CarddemoUsrsecVsamKsdsDao", container
                            .getSecUserData().getSecUsrId());
            container
                    .setSecUserData(SecUserDataToAwsM2CarddemoUsrsecVsamKsdsDto.INSTANCE
                            .toSource(awsM2CarddemoUsrsecVsamKsdsDto));
        } catch (ConditionException e) {
        } finally {
            container.getWsVariables().setWsRespCd(task.getLastResp());
            container.getWsVariables().setWsReasCd(task.getLastResp2());
        }
        // [T-Up#INFO][COUSR03C.cbl:318] EVALUATE statement
        if (container.getWsVariables().getWsRespCd() == 0) {
            // [T-Up#INFO][COUSR03C.cbl:320] CONTINUE statement
            // [T-Up#INFO][COUSR03C.cbl:321] MOVE statement
            container.getWsVariables().setWsMessage(
                    "Press PF5 key to delete this user ...");
            // [T-Up#INFO][COUSR03C.cbl:323] MOVE statement
            container.setErrmsgc(container.getDfhbmsca().getDfhneutr());
            // [T-Up#INFO][COUSR03C.cbl:324] PERFORM statement
            controlManager.run(context, sendUsrdelScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else if (container.getWsVariables().getWsRespCd() == 13) {
            // [T-Up#INFO][COUSR03C.cbl:326] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][COUSR03C.cbl:327] MOVE statement
            container.getWsVariables().setWsMessage("User ID NOT found...");
            // [T-Up#INFO][COUSR03C.cbl:329] MOVE statement
            container.getCousr3ai().setUsridinl(-1);
            // [T-Up#INFO][COUSR03C.cbl:330] PERFORM statement
            controlManager.run(context, sendUsrdelScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][COUSR03C.cbl:332] DISPLAY statement
            System.out.print("RESP:");
            System.out.print(container.getWsVariables().getWsRespCd());
            System.out.print("REAS:");
            System.out.println(container.getWsVariables().getWsReasCd());
            // [T-Up#INFO][COUSR03C.cbl:333] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][COUSR03C.cbl:334] MOVE statement
            container.getWsVariables().setWsMessage("Unable to lookup User...");
            // [T-Up#INFO][COUSR03C.cbl:336] MOVE statement
            container.getCousr3ai().setFnamel(-1);
            // [T-Up#INFO][COUSR03C.cbl:337] PERFORM statement
            controlManager.run(context, sendUsrdelScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      DELETE-USER-SEC-FILE
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR03C.cbl:343] DELETE-USER-SEC-FILE Paragraph</p>
     */
    void deleteUserSecFile(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        Cousr03cVariableContainer container = (Cousr03cVariableContainer) context
                .getProgramVariableContainer("Cousr03c");
        // [T-Up#INFO][COUSR03C.cbl:345] EXEC_CICS statement
        /*
                       EXEC CICS DELETE
                            DATASET   (WS-USRSEC-FILE)
                            RESP      (WS-RESP-CD)
                            RESP2     (WS-REAS-CD)
                       END-EXEC
         */
        try {
            recordKeyAccessor.deleteLast("awsM2CarddemoUsrsecVsamKsdsDao");
        } catch (ConditionException e) {
        } finally {
            container.getWsVariables().setWsRespCd(task.getLastResp());
            container.getWsVariables().setWsReasCd(task.getLastResp2());
        }
        // [T-Up#INFO][COUSR03C.cbl:351] EVALUATE statement
        if (container.getWsVariables().getWsRespCd() == 0) {
            // [T-Up#INFO][COUSR03C.cbl:353] PERFORM statement
            controlManager.run(context, initializeAllFields);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COUSR03C.cbl:354] MOVE statement
            container.getWsVariables()
                    .setWsMessage(StringUtils.repeat(' ', 80));
            // [T-Up#INFO][COUSR03C.cbl:355] MOVE statement
            container.setErrmsgc(container.getDfhbmsca().getDfhgreen());
            // [T-Up#INFO][COUSR03C.cbl:356] STRING statement
            tempStringBuilder1 = new StringBuilder();
            tempStringBuilder2 = new StringBuilder(container.getWsVariables()
                    .getWsMessage());
            tempStringBuilder1
                    .append("User ")
                    .append(container.getSecUserData().getSecUsrId()
                            .split(Pattern.quote(" "))[0])
                    .append(" has been deleted ...");
            if (tempStringBuilder1.length() <= 80) {
                tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                        tempStringBuilder1.toString());
                container.getWsVariables().setWsMessage(
                        tempStringBuilder2.toString());
            }
            // [T-Up#INFO][COUSR03C.cbl:360] PERFORM statement
            controlManager.run(context, sendUsrdelScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else if (container.getWsVariables().getWsRespCd() == 13) {
            // [T-Up#INFO][COUSR03C.cbl:362] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][COUSR03C.cbl:363] MOVE statement
            container.getWsVariables().setWsMessage("User ID NOT found...");
            // [T-Up#INFO][COUSR03C.cbl:365] MOVE statement
            container.getCousr3ai().setUsridinl(-1);
            // [T-Up#INFO][COUSR03C.cbl:366] PERFORM statement
            controlManager.run(context, sendUsrdelScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][COUSR03C.cbl:368] DISPLAY statement
            System.out.print("RESP:");
            System.out.print(container.getWsVariables().getWsRespCd());
            System.out.print("REAS:");
            System.out.println(container.getWsVariables().getWsReasCd());
            // [T-Up#INFO][COUSR03C.cbl:369] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][COUSR03C.cbl:370] MOVE statement
            container.getWsVariables().setWsMessage("Unable to Update User...");
            // [T-Up#INFO][COUSR03C.cbl:372] MOVE statement
            container.getCousr3ai().setFnamel(-1);
            // [T-Up#INFO][COUSR03C.cbl:373] PERFORM statement
            controlManager.run(context, sendUsrdelScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      CLEAR-CURRENT-SCREEN
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR03C.cbl:379] CLEAR-CURRENT-SCREEN Paragraph</p>
     */
    void clearCurrentScreen(OpenFrameContext context) {
        // [T-Up#INFO][COUSR03C.cbl:381] PERFORM statement
        controlManager.run(context, initializeAllFields);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COUSR03C.cbl:382] PERFORM statement
        controlManager.run(context, sendUsrdelScreen);
        if (controlManager.isTerminate(context)) {
            return;
        }
    }

    // *----------------------------------------------------------------*
    // *                      INITIALIZE-ALL-FIELDS
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR03C.cbl:387] INITIALIZE-ALL-FIELDS Paragraph</p>
     */
    void initializeAllFields(OpenFrameContext context) {
        Cousr03cVariableContainer container = (Cousr03cVariableContainer) context
                .getProgramVariableContainer("Cousr03c");
        // [T-Up#INFO][COUSR03C.cbl:389] MOVE statement
        container.getCousr3ai().setUsridinl(-1);
        // [T-Up#INFO][COUSR03C.cbl:390] MOVE statement
        container.getCousr3ai().setUsridini(StringUtils.repeat(' ', 8));
        container.getCousr3ai().setFnamei(StringUtils.repeat(' ', 20));
        container.getCousr3ai().setLnamei(StringUtils.repeat(' ', 20));
        container.getCousr3ai().setUsrtypei(" ");
        container.getWsVariables().setWsMessage(StringUtils.repeat(' ', 80));
    }

    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:12:35 CDT
    // *
}
