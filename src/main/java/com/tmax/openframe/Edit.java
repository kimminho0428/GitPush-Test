package com.tmax.openframe;

import com.tmax.openframe.variable.Cosgn00cVariableContainer;
import java.util.HashMap;
import com.tmax.openframe.Cosgn00c;
import com.tmax.openframe.online.task.service.ProgramControl;
import com.tmax.openframe.util.CommareaMapper;
import com.tmax.openframe.mapper.EditMapperInterface.*;
import com.tmax.openframe.dto.Comen01cInputDto;
import com.tmax.openframe.online.task.service.OtherUserTaskInvoker;
import com.tmax.openframe.online.task.domain.dto.TaskDto.*;
import com.tmax.openframe.online.task.domain.dto.Data;
import com.tmax.openframe.online.queue.service.QueueManager;
import com.tmax.openframe.online.exception.ConditionException;
import com.tmax.openframe.online.task.service.Task;
import com.tmax.openframe.dto.EditOutputDto;
import com.tmax.openframe.dto.EditInputDto;
import static com.tmax.openframe.variable.group.CarddemoCommarea.CdemoGeneralInfo.*;
import static com.tmax.openframe.variable.group.EditWsVariables.*;
import com.tmax.openframe.runtime.cobol.CobStream;
import com.tmax.openframe.runtime.cobol.CobStringUtils;
import com.tmax.openframe.runtime.cobol.IntrinsicFunction;
import com.tmax.openframe.runtime.context.OpenFrameContext;
import com.tmax.openframe.runtime.flow.ControlManager;
import com.tmax.openframe.variable.CsutldtcVariableContainer;
import com.tmax.openframe.variable.EditVariableContainer;
import com.tmax.openframe.variable.group.Corpt0ai;
import java.math.*;
import java.util.*;
import java.util.function.Consumer;
import java.util.regex.Pattern;
import lombok.*;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Primary;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:20 KST</p>
 * <hr>
 * <p>Java class for defining logics of COBOL program</p>
 * <ul>
 * <li>The name of COBOL program: EDIT2.cbl</li>
 * <li>Variable container class: {@link EditVariableContainer}</li>
 * </ul>
 */
@Service
@RequiredArgsConstructor
@Transactional
@Primary
public class Edit {
    @Autowired
    private Csutldtc csutldtc;
    /** 
     * <p>Class that manages an execution flow of the program</p>
     */
    protected final ControlManager controlManager;
    Consumer<OpenFrameContext> mainPara = this::mainPara;
    Consumer<OpenFrameContext> processEnterKey = this::processEnterKey;
    Consumer<OpenFrameContext> submitJobToIntrdr = this::submitJobToIntrdr;
    Consumer<OpenFrameContext> wirteJobsubTdq = this::wirteJobsubTdq;
    Consumer<OpenFrameContext> returnToPrevScreen = this::returnToPrevScreen;
    Consumer<OpenFrameContext> sendTrnrptScreen = this::sendTrnrptScreen;
    Consumer<OpenFrameContext> returnToCics = this::returnToCics;
    Consumer<OpenFrameContext> receiveTrnrptScreen = this::receiveTrnrptScreen;
    Consumer<OpenFrameContext> populateHeaderInfo = this::populateHeaderInfo;
    Consumer<OpenFrameContext> initializeAllFields = this::initializeAllFields;
    /** 
     * <p>Execution flow of COBOL program that defined in the procedure division</p>
     */
    ArrayList<Consumer> methodList = new ArrayList<>();
    {
        methodList.add(mainPara);
        methodList.add(processEnterKey);
        methodList.add(submitJobToIntrdr);
        methodList.add(wirteJobsubTdq);
        methodList.add(returnToPrevScreen);
        methodList.add(sendTrnrptScreen);
        methodList.add(returnToCics);
        methodList.add(receiveTrnrptScreen);
        methodList.add(populateHeaderInfo);
        methodList.add(initializeAllFields);
    }
    private final Task task;
    private final QueueManager queueManager;
    private final TaskInvoker taskInvoker;
    private final ProgramControl programControl;
    private final Cosgn00c cosgn00c;

    /** 
     * <p>Method for executing a program logic that defined in the procedure division</p>
     * @param generalContext context that is necessary for executing program
     * @return return value of program
     */
    public int run(Map<String, Object> generalContext) {
        OpenFrameContext context = new OpenFrameContext(generalContext,
                methodList);
        if (context.getProgramVariableContainer("Edit") == null) {
            EditVariableContainer container = new EditVariableContainer();
            context.setProgramVariableContainer("Edit", container);
        }
        controlManager.run(context);
        return context.getReturnValue();
    }

    // ******************************************************************
    // * Program     : CORPT00C.CBL
    // * Application : CardDemo
    // * Type        : CICS COBOL Program
    // * Function    : Print Transaction reports by submitting batch
    // *               job from online using extra partition TDQ.
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // *      OCCURS 1 TO 32767 TIMES DEPENDING ON EIBCALEN.
    // *----------------------------------------------------------------*
    // *                       PROCEDURE DIVISION
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][EDIT2.cbl:163] MAIN-PARA Paragraph</p>
     */
    void mainPara(OpenFrameContext context) {
        EditVariableContainer container = (EditVariableContainer) context
                .getProgramVariableContainer("Edit");
        // [T-Up#INFO][EDIT2.cbl:165] SET statement
        container.getWsVariables().setWsErrFlg(ERR_FLG_OFF);
        // [T-Up#INFO][EDIT2.cbl:166] SET statement
        container.getWsVariables().setWsTransactEof(TRANSACT_NOT_EOF);
        // [T-Up#INFO][EDIT2.cbl:167] SET statement
        container.getWsVariables().setWsSendEraseFlg(SEND_ERASE_YES);
        // [T-Up#INFO][EDIT2.cbl:169] MOVE statement
        container.getWsVariables().setWsMessage(StringUtils.repeat(' ', 80));
        container.setErrmsgo(StringUtils.repeat(' ', 78));
        // [T-Up#INFO][EDIT2.cbl:172] IF statement
        if (task.hasCommarea() == 0) {
            // [T-Up#INFO][EDIT2.cbl:173] MOVE statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoToProgram("COSGN00C");
            // [T-Up#INFO][EDIT2.cbl:174] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromTranid(
                            container.getWsVariables().getWsTranid());
            // [T-Up#INFO][EDIT2.cbl:175] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromProgram(
                            container.getWsVariables().getWsPgmname());
            // [T-Up#INFO][EDIT2.cbl:176] MOVE statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(0);
            // [T-Up#INFO][EDIT2.cbl:177] EXEC_CICS statement
            /*
                               EXEC CICS
                               LINK PROGRAM('COSGN00C')
                               COMMAREA(CARDDEMO-COMMAREA)
                               LENGTH (LENGTH OF CARDDEMO-COMMAREA)
                               END-EXEC
             */
            Cosgn00cVariableContainer cosgn00cVariableContainer = CommareaMapper
                    .mappingCosgn00cDfhcommarea(CarddemoCommareaToCosgn00cDfhcommarea.INSTANCE
                            .toTarget(container.getCarddemoCommarea()));
            Map<String, Object> cosgn00cAppContext = new HashMap<>();
            cosgn00cAppContext.put("Cosgn00cVariableContainer",
                    cosgn00cVariableContainer);
            programControl.call(() -> {
                cosgn00c.run(cosgn00cAppContext);
            });
            container
                    .setCarddemoCommarea(CarddemoCommareaToCosgn00cDfhcommarea.INSTANCE
                            .toSource(cosgn00cVariableContainer
                                    .getDfhcommarea()));
            // [T-Up#INFO][EDIT2.cbl:182] PERFORM statement
            controlManager.run(context, returnToPrevScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][EDIT2.cbl:184] MOVE statement
            container.getCarddemoCommarea().set(
                    StringUtils.overlay(container.getCarddemoCommarea().get(),
                            container.getDfhcommarea().get().substring(0, 160),
                            0, 160));
            // [T-Up#INFO][EDIT2.cbl:185] IF statement
            if (!(container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .getCdemoPgmContext() == CDEMO_PGM_REENTER)) {
                // [T-Up#INFO][EDIT2.cbl:186] SET statement
                container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .setCdemoPgmContext(CDEMO_PGM_REENTER);
                // [T-Up#INFO][EDIT2.cbl:187] MOVE statement
                container.setCorpt0ao(Corpt0ai.createDefaultValueInstance()
                        .get());
                // [T-Up#INFO][EDIT2.cbl:188] MOVE statement
                container.getCorpt0ai().setMonthlyl(-1);
                // [T-Up#INFO][EDIT2.cbl:189] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else {
                // [T-Up#INFO][EDIT2.cbl:191] PERFORM statement
                controlManager.run(context, receiveTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][EDIT2.cbl:192] EVALUATE statement
                if (CobStringUtils.compare(task.getPressedKey(), container
                        .getDfhaid().getDfhenter()) == 0) {
                    // [T-Up#INFO][EDIT2.cbl:194] PERFORM statement
                    controlManager.run(context, processEnterKey);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                } else if (CobStringUtils.compare(task.getPressedKey(),
                        container.getDfhaid().getDfhpf3()) == 0) {
                    // [T-Up#INFO][EDIT2.cbl:196] MOVE statement
                    container.getCarddemoCommarea().getCdemoGeneralInfo()
                            .setCdemoToProgram("COMEN01C");
                    // [T-Up#INFO][EDIT2.cbl:197] MOVE statement
                    container
                            .getCarddemoCommarea()
                            .getCdemoGeneralInfo()
                            .setCdemoFromTranid(
                                    container.getWsVariables().getWsTranid());
                    // [T-Up#INFO][EDIT2.cbl:198] MOVE statement
                    container
                            .getCarddemoCommarea()
                            .getCdemoGeneralInfo()
                            .setCdemoFromProgram(
                                    container.getWsVariables().getWsPgmname());
                    // [T-Up#INFO][EDIT2.cbl:199] MOVE statement
                    container.getCarddemoCommarea().getCdemoGeneralInfo()
                            .setCdemoPgmContext(0);
                    // [T-Up#INFO][EDIT2.cbl:200] EXEC_CICS statement
                    /*
                                                   EXEC CICS
                                                   XCTL PROGRAM('COMEN01C')
                                                   COMMAREA(CARDDEMO-COMMAREA)
                                                   END-EXEC
                     */
                    Comen01cInputDto comen01cInputDto = new Comen01cInputDto();
                    comen01cInputDto
                            .setDfhcommarea(CarddemoCommareaToComen01cDfhcommarea.INSTANCE
                                    .toTarget(container.getCarddemoCommarea()));
                    programControl.forward("CM00", comen01cInputDto);
                    context.setReturnFlag(true);
                    // [T-Up#INFO][EDIT2.cbl:204] PERFORM statement
                    controlManager.run(context, returnToPrevScreen);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                } else {
                    // [T-Up#INFO][EDIT2.cbl:206] MOVE statement
                    container.getWsVariables().setWsErrFlg("Y");
                    // [T-Up#INFO][EDIT2.cbl:207] MOVE statement
                    container.getCorpt0ai().setMonthlyl(-1);
                    // [T-Up#INFO][EDIT2.cbl:208] MOVE statement
                    container.getWsVariables().setWsMessage(
                            container.getCcdaCommonMessages()
                                    .getCcdaMsgInvalidKey());
                    // [T-Up#INFO][EDIT2.cbl:209] PERFORM statement
                    controlManager.run(context, sendTrnrptScreen);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                }
            }
        }
        // [T-Up#INFO][EDIT2.cbl:214] EXEC_CICS statement
        /*
                       EXEC CICS RETURN
                                 TRANSID (WS-TRANID)
                                 COMMAREA (CARDDEMO-COMMAREA)
                       END-EXEC
         */
        TaskDto taskDto = TaskDto
                .builder()
                .destination("CR00")
                .data(Data
                        .session(CarddemoCommareaToCorpt00cDfhcommarea.INSTANCE
                                .toTarget(container.getCarddemoCommarea())))
                .build();
        taskInvoker.setNextTask(taskDto);
        context.setReturnFlag(true);
    }

    // *----------------------------------------------------------------*
    // *                      PROCESS-ENTER-KEY
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][EDIT2.cbl:223] PROCESS-ENTER-KEY Paragraph</p>
     */
    void processEnterKey(OpenFrameContext context) {
        int tempint1;
        CsutldtcVariableContainer tempCsutldtcVariableContainer1;
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        EditVariableContainer container = (EditVariableContainer) context
                .getProgramVariableContainer("Edit");
        // [T-Up#INFO][EDIT2.cbl:225] DISPLAY statement
        System.out.println("PROCESS ENTER KEY");
        // [T-Up#INFO][EDIT2.cbl:227] EVALUATE statement
        if (CobStringUtils.compare(container.getCorpt0ai().getMonthlyi(), " ") != 0
                && CobStringUtils.compare(
                        container.getCorpt0ai().getMonthlyi(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][EDIT2.cbl:229] MOVE statement
            container.getWsVariables().setWsReportName("Monthly");
            // [T-Up#INFO][EDIT2.cbl:230] MOVE statement
            container.getWsDateTime().getWsCurdateData()
                    .set(IntrinsicFunction.functionCurrentDate());
            // [T-Up#INFO][EDIT2.cbl:232] MOVE statement
            container
                    .getWsVariables()
                    .getWsStartDate()
                    .setWsStartDateYyyy(
                            StringUtils.leftPad(String.valueOf(Math
                                    .abs(container.getWsDateTime()
                                            .getWsCurdateData().getWsCurdate()
                                            .getWsCurdateYear())), 4, '0'));
            // [T-Up#INFO][EDIT2.cbl:233] MOVE statement
            container
                    .getWsVariables()
                    .getWsStartDate()
                    .setWsStartDateMm(
                            StringUtils.leftPad(String.valueOf(Math
                                    .abs(container.getWsDateTime()
                                            .getWsCurdateData().getWsCurdate()
                                            .getWsCurdateMonth())), 2, '0'));
            // [T-Up#INFO][EDIT2.cbl:234] MOVE statement
            container.getWsVariables().getWsStartDate().setWsStartDateDd("01");
            // [T-Up#INFO][EDIT2.cbl:235] MOVE statement
            container
                    .getJobData()
                    .getJobData1()
                    .getFiller1()
                    .setParmStartDate1(
                            container.getWsVariables().getWsStartDate().get());
            container
                    .getJobData()
                    .getJobData1()
                    .getFiller3()
                    .setParmStartDate2(
                            container.getWsVariables().getWsStartDate().get());
            // [T-Up#INFO][EDIT2.cbl:238] MOVE statement
            container.getWsDateTime().getWsCurdateData().getWsCurdate()
                    .setWsCurdateDay(1);
            // [T-Up#INFO][EDIT2.cbl:239] ADD statement
            container
                    .getWsDateTime()
                    .getWsCurdateData()
                    .getWsCurdate()
                    .setWsCurdateMonth(
                            container.getWsDateTime().getWsCurdateData()
                                    .getWsCurdate().getWsCurdateMonth() + 1);
            // [T-Up#INFO][EDIT2.cbl:240] IF statement
            if (container.getWsDateTime().getWsCurdateData().getWsCurdate()
                    .getWsCurdateMonth() > 12) {
                // [T-Up#INFO][EDIT2.cbl:241] ADD statement
                container
                        .getWsDateTime()
                        .getWsCurdateData()
                        .getWsCurdate()
                        .setWsCurdateYear(
                                container.getWsDateTime().getWsCurdateData()
                                        .getWsCurdate().getWsCurdateYear() + 1);
                // [T-Up#INFO][EDIT2.cbl:242] MOVE statement
                container.getWsDateTime().getWsCurdateData().getWsCurdate()
                        .setWsCurdateMonth(1);
            }
            // [T-Up#INFO][EDIT2.cbl:244] COMPUTE statement
            container
                    .getWsDateTime()
                    .getWsCurdateData()
                    .setWsCurdateN(
                            IntrinsicFunction
                                    .functionDateOfInteger(IntrinsicFunction
                                            .functionIntegerOfDate(container
                                                    .getWsDateTime()
                                                    .getWsCurdateData()
                                                    .getWsCurdateN()) - 1));
            // [T-Up#INFO][EDIT2.cbl:247] MOVE statement
            container
                    .getWsVariables()
                    .getWsEndDate()
                    .setWsEndDateYyyy(
                            StringUtils.leftPad(String.valueOf(Math
                                    .abs(container.getWsDateTime()
                                            .getWsCurdateData().getWsCurdate()
                                            .getWsCurdateYear())), 4, '0'));
            // [T-Up#INFO][EDIT2.cbl:248] MOVE statement
            container
                    .getWsVariables()
                    .getWsEndDate()
                    .setWsEndDateMm(
                            StringUtils.leftPad(String.valueOf(Math
                                    .abs(container.getWsDateTime()
                                            .getWsCurdateData().getWsCurdate()
                                            .getWsCurdateMonth())), 2, '0'));
            // [T-Up#INFO][EDIT2.cbl:249] MOVE statement
            container
                    .getWsVariables()
                    .getWsEndDate()
                    .setWsEndDateDd(
                            StringUtils.leftPad(
                                    String.valueOf(Math.abs(container
                                            .getWsDateTime().getWsCurdateData()
                                            .getWsCurdate().getWsCurdateDay())),
                                    2, '0'));
            // [T-Up#INFO][EDIT2.cbl:250] MOVE statement
            container
                    .getJobData()
                    .getJobData1()
                    .getFiller2()
                    .setParmEndDate1(
                            container.getWsVariables().getWsEndDate().get());
            container
                    .getJobData()
                    .getJobData1()
                    .getFiller3()
                    .setParmEndDate2(
                            container.getWsVariables().getWsEndDate().get());
            // [T-Up#INFO][EDIT2.cbl:253] PERFORM statement
            controlManager.run(context, submitJobToIntrdr);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else if (CobStringUtils.compare(container.getCorpt0ai().getYearlyi(),
                " ") != 0
                && CobStringUtils.compare(container.getCorpt0ai().getYearlyi(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][EDIT2.cbl:255] MOVE statement
            container.getWsVariables().setWsReportName("Yearly");
            // [T-Up#INFO][EDIT2.cbl:256] MOVE statement
            container.getWsDateTime().getWsCurdateData()
                    .set(IntrinsicFunction.functionCurrentDate());
            // [T-Up#INFO][EDIT2.cbl:258] MOVE statement
            container
                    .getWsVariables()
                    .getWsStartDate()
                    .setWsStartDateYyyy(
                            StringUtils.leftPad(String.valueOf(Math
                                    .abs(container.getWsDateTime()
                                            .getWsCurdateData().getWsCurdate()
                                            .getWsCurdateYear())), 4, '0'));
            container
                    .getWsVariables()
                    .getWsEndDate()
                    .setWsEndDateYyyy(
                            StringUtils.leftPad(String.valueOf(Math
                                    .abs(container.getWsDateTime()
                                            .getWsCurdateData().getWsCurdate()
                                            .getWsCurdateYear())), 4, '0'));
            // [T-Up#INFO][EDIT2.cbl:260] MOVE statement
            container.getWsVariables().getWsStartDate().setWsStartDateMm("01");
            container.getWsVariables().getWsStartDate().setWsStartDateDd("01");
            // [T-Up#INFO][EDIT2.cbl:262] MOVE statement
            container
                    .getJobData()
                    .getJobData1()
                    .getFiller1()
                    .setParmStartDate1(
                            container.getWsVariables().getWsStartDate().get());
            container
                    .getJobData()
                    .getJobData1()
                    .getFiller3()
                    .setParmStartDate2(
                            container.getWsVariables().getWsStartDate().get());
            // [T-Up#INFO][EDIT2.cbl:265] MOVE statement
            container.getWsVariables().getWsEndDate().setWsEndDateMm("12");
            // [T-Up#INFO][EDIT2.cbl:266] MOVE statement
            container.getWsVariables().getWsEndDate().setWsEndDateDd("31");
            // [T-Up#INFO][EDIT2.cbl:267] MOVE statement
            container
                    .getJobData()
                    .getJobData1()
                    .getFiller2()
                    .setParmEndDate1(
                            container.getWsVariables().getWsEndDate().get());
            container
                    .getJobData()
                    .getJobData1()
                    .getFiller3()
                    .setParmEndDate2(
                            container.getWsVariables().getWsEndDate().get());
            // [T-Up#INFO][EDIT2.cbl:270] PERFORM statement
            controlManager.run(context, submitJobToIntrdr);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else if (CobStringUtils.compare(container.getCorpt0ai().getCustomi(),
                " ") != 0
                && CobStringUtils.compare(container.getCorpt0ai().getCustomi(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][EDIT2.cbl:273] EVALUATE statement
            if (CobStringUtils.compare(container.getCorpt0ai().getSdtmmi(),
                    StringUtils.repeat(' ', 2)) == 0
                    || CobStringUtils.compare(container.getCorpt0ai()
                            .getSdtmmi(), StringUtils.repeat((char) 0x00, 2)) == 0) {
                // [T-Up#INFO][EDIT2.cbl:276] MOVE statement
                container.getWsVariables().setWsMessage(
                        "Start Date - Month can NOT be empty...");
                // [T-Up#INFO][EDIT2.cbl:278] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][EDIT2.cbl:279] MOVE statement
                container.getCorpt0ai().setSdtmml(-1);
                // [T-Up#INFO][EDIT2.cbl:280] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else if (CobStringUtils.compare(container.getCorpt0ai()
                    .getSdtddi(), StringUtils.repeat(' ', 2)) == 0
                    || CobStringUtils.compare(container.getCorpt0ai()
                            .getSdtddi(), StringUtils.repeat((char) 0x00, 2)) == 0) {
                // [T-Up#INFO][EDIT2.cbl:283] MOVE statement
                container.getWsVariables().setWsMessage(
                        "Start Date - Day can NOT be empty...");
                // [T-Up#INFO][EDIT2.cbl:285] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][EDIT2.cbl:286] MOVE statement
                container.getCorpt0ai().setSdtddl(-1);
                // [T-Up#INFO][EDIT2.cbl:287] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else if (CobStringUtils.compare(container.getCorpt0ai()
                    .getSdtyyyyi(), StringUtils.repeat(' ', 4)) == 0
                    || CobStringUtils.compare(container.getCorpt0ai()
                            .getSdtyyyyi(), StringUtils.repeat((char) 0x00, 4)) == 0) {
                // [T-Up#INFO][EDIT2.cbl:290] MOVE statement
                container.getWsVariables().setWsMessage(
                        "Start Date - Year can NOT be empty...");
                // [T-Up#INFO][EDIT2.cbl:292] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][EDIT2.cbl:293] MOVE statement
                container.getCorpt0ai().setSdtyyyyl(-1);
                // [T-Up#INFO][EDIT2.cbl:294] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else if (CobStringUtils.compare(container.getCorpt0ai()
                    .getEdtmmi(), StringUtils.repeat(' ', 2)) == 0
                    || CobStringUtils.compare(container.getCorpt0ai()
                            .getEdtmmi(), StringUtils.repeat((char) 0x00, 2)) == 0) {
                // [T-Up#INFO][EDIT2.cbl:297] MOVE statement
                container.getWsVariables().setWsMessage(
                        "End Date - Month can NOT be empty...");
                // [T-Up#INFO][EDIT2.cbl:299] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][EDIT2.cbl:300] MOVE statement
                container.getCorpt0ai().setEdtmml(-1);
                // [T-Up#INFO][EDIT2.cbl:301] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else if (CobStringUtils.compare(container.getCorpt0ai()
                    .getEdtddi(), StringUtils.repeat(' ', 2)) == 0
                    || CobStringUtils.compare(container.getCorpt0ai()
                            .getEdtddi(), StringUtils.repeat((char) 0x00, 2)) == 0) {
                // [T-Up#INFO][EDIT2.cbl:304] MOVE statement
                container.getWsVariables().setWsMessage(
                        "End Date - Day can NOT be empty...");
                // [T-Up#INFO][EDIT2.cbl:306] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][EDIT2.cbl:307] MOVE statement
                container.getCorpt0ai().setEdtddl(-1);
                // [T-Up#INFO][EDIT2.cbl:308] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else if (CobStringUtils.compare(container.getCorpt0ai()
                    .getEdtyyyyi(), StringUtils.repeat(' ', 4)) == 0
                    || CobStringUtils.compare(container.getCorpt0ai()
                            .getEdtyyyyi(), StringUtils.repeat((char) 0x00, 4)) == 0) {
                // [T-Up#INFO][EDIT2.cbl:311] MOVE statement
                container.getWsVariables().setWsMessage(
                        "End Date - Year can NOT be empty...");
                // [T-Up#INFO][EDIT2.cbl:313] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][EDIT2.cbl:314] MOVE statement
                container.getCorpt0ai().setEdtyyyyl(-1);
                // [T-Up#INFO][EDIT2.cbl:315] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else {
                // [T-Up#INFO][EDIT2.cbl:317] CONTINUE statement
            }
            // [T-Up#INFO][EDIT2.cbl:320] COMPUTE statement
            container.getWsVariables().setWsNum99(
                    (int) IntrinsicFunction.functionNumvalC(container
                            .getCorpt0ai().getSdtmmi(), null));
            // [T-Up#INFO][EDIT2.cbl:322] MOVE statement
            container.getCorpt0ai().setSdtmmi(
                    StringUtils.leftPad(String.valueOf(Math.abs(container
                            .getWsVariables().getWsNum99())), 2, '0'));
            // [T-Up#INFO][EDIT2.cbl:324] COMPUTE statement
            container.getWsVariables().setWsNum99(
                    (int) IntrinsicFunction.functionNumvalC(container
                            .getCorpt0ai().getSdtddi(), null));
            // [T-Up#INFO][EDIT2.cbl:326] MOVE statement
            container.getCorpt0ai().setSdtddi(
                    StringUtils.leftPad(String.valueOf(Math.abs(container
                            .getWsVariables().getWsNum99())), 2, '0'));
            // [T-Up#INFO][EDIT2.cbl:328] COMPUTE statement
            container.getWsVariables().setWsNum9999(
                    (int) IntrinsicFunction.functionNumvalC(container
                            .getCorpt0ai().getSdtyyyyi(), null));
            // [T-Up#INFO][EDIT2.cbl:330] MOVE statement
            container.getCorpt0ai().setSdtyyyyi(
                    StringUtils.leftPad(String.valueOf(Math.abs(container
                            .getWsVariables().getWsNum9999())), 4, '0'));
            // [T-Up#INFO][EDIT2.cbl:332] COMPUTE statement
            container.getWsVariables().setWsNum99(
                    (int) IntrinsicFunction.functionNumvalC(container
                            .getCorpt0ai().getEdtmmi(), null));
            // [T-Up#INFO][EDIT2.cbl:334] MOVE statement
            container.getCorpt0ai().setEdtmmi(
                    StringUtils.leftPad(String.valueOf(Math.abs(container
                            .getWsVariables().getWsNum99())), 2, '0'));
            // [T-Up#INFO][EDIT2.cbl:336] COMPUTE statement
            container.getWsVariables().setWsNum99(
                    (int) IntrinsicFunction.functionNumvalC(container
                            .getCorpt0ai().getEdtddi(), null));
            // [T-Up#INFO][EDIT2.cbl:338] MOVE statement
            container.getCorpt0ai().setEdtddi(
                    StringUtils.leftPad(String.valueOf(Math.abs(container
                            .getWsVariables().getWsNum99())), 2, '0'));
            // [T-Up#INFO][EDIT2.cbl:340] COMPUTE statement
            container.getWsVariables().setWsNum9999(
                    (int) IntrinsicFunction.functionNumvalC(container
                            .getCorpt0ai().getEdtyyyyi(), null));
            // [T-Up#INFO][EDIT2.cbl:342] MOVE statement
            container.getCorpt0ai().setEdtyyyyi(
                    StringUtils.leftPad(String.valueOf(Math.abs(container
                            .getWsVariables().getWsNum9999())), 4, '0'));
            // [T-Up#INFO][EDIT2.cbl:344] IF statement
            if (!StringUtils.isNumeric(container.getCorpt0ai().getSdtmmi())
                    || CobStringUtils.compare(container.getCorpt0ai()
                            .getSdtmmi(), "12") > 0) {
                // [T-Up#INFO][EDIT2.cbl:346] MOVE statement
                container.getWsVariables().setWsMessage(
                        "Start Date - Not a valid Month...");
                // [T-Up#INFO][EDIT2.cbl:348] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][EDIT2.cbl:349] MOVE statement
                container.getCorpt0ai().setSdtmml(-1);
                // [T-Up#INFO][EDIT2.cbl:350] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
            // [T-Up#INFO][EDIT2.cbl:353] IF statement
            if (!StringUtils.isNumeric(container.getCorpt0ai().getSdtddi())
                    || CobStringUtils.compare(container.getCorpt0ai()
                            .getSdtddi(), "31") > 0) {
                // [T-Up#INFO][EDIT2.cbl:355] MOVE statement
                container.getWsVariables().setWsMessage(
                        "Start Date - Not a valid Day...");
                // [T-Up#INFO][EDIT2.cbl:357] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][EDIT2.cbl:358] MOVE statement
                container.getCorpt0ai().setSdtddl(-1);
                // [T-Up#INFO][EDIT2.cbl:359] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
            // [T-Up#INFO][EDIT2.cbl:362] IF statement
            if (!StringUtils.isNumeric(container.getCorpt0ai().getSdtyyyyi())) {
                // [T-Up#INFO][EDIT2.cbl:363] MOVE statement
                container.getWsVariables().setWsMessage(
                        "Start Date - Not a valid Year...");
                // [T-Up#INFO][EDIT2.cbl:365] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][EDIT2.cbl:366] MOVE statement
                container.getCorpt0ai().setSdtyyyyl(-1);
                // [T-Up#INFO][EDIT2.cbl:367] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
            // [T-Up#INFO][EDIT2.cbl:370] IF statement
            if (!StringUtils.isNumeric(container.getCorpt0ai().getEdtmmi())
                    || CobStringUtils.compare(container.getCorpt0ai()
                            .getEdtmmi(), "12") > 0) {
                // [T-Up#INFO][EDIT2.cbl:372] MOVE statement
                container.getWsVariables().setWsMessage(
                        "End Date - Not a valid Month...");
                // [T-Up#INFO][EDIT2.cbl:374] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][EDIT2.cbl:375] MOVE statement
                container.getCorpt0ai().setEdtmml(-1);
                // [T-Up#INFO][EDIT2.cbl:376] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
            // [T-Up#INFO][EDIT2.cbl:379] IF statement
            if (!StringUtils.isNumeric(container.getCorpt0ai().getEdtddi())
                    || CobStringUtils.compare(container.getCorpt0ai()
                            .getEdtddi(), "31") > 0) {
                // [T-Up#INFO][EDIT2.cbl:381] MOVE statement
                container.getWsVariables().setWsMessage(
                        "End Date - Not a valid Day...");
                // [T-Up#INFO][EDIT2.cbl:383] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][EDIT2.cbl:384] MOVE statement
                container.getCorpt0ai().setEdtddl(-1);
                // [T-Up#INFO][EDIT2.cbl:385] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
            // [T-Up#INFO][EDIT2.cbl:388] IF statement
            if (!StringUtils.isNumeric(container.getCorpt0ai().getEdtyyyyi())) {
                // [T-Up#INFO][EDIT2.cbl:389] MOVE statement
                container.getWsVariables().setWsMessage(
                        "End Date - Not a valid Year...");
                // [T-Up#INFO][EDIT2.cbl:391] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][EDIT2.cbl:392] MOVE statement
                container.getCorpt0ai().setEdtyyyyl(-1);
                // [T-Up#INFO][EDIT2.cbl:393] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
            // [T-Up#INFO][EDIT2.cbl:396] MOVE statement
            container.getWsVariables().getWsStartDate()
                    .setWsStartDateYyyy(container.getCorpt0ai().getSdtyyyyi());
            // [T-Up#INFO][EDIT2.cbl:397] MOVE statement
            container.getWsVariables().getWsStartDate()
                    .setWsStartDateMm(container.getCorpt0ai().getSdtmmi());
            // [T-Up#INFO][EDIT2.cbl:398] MOVE statement
            container.getWsVariables().getWsStartDate()
                    .setWsStartDateDd(container.getCorpt0ai().getSdtddi());
            // [T-Up#INFO][EDIT2.cbl:399] MOVE statement
            container.getWsVariables().getWsEndDate()
                    .setWsEndDateYyyy(container.getCorpt0ai().getEdtyyyyi());
            // [T-Up#INFO][EDIT2.cbl:400] MOVE statement
            container.getWsVariables().getWsEndDate()
                    .setWsEndDateMm(container.getCorpt0ai().getEdtmmi());
            // [T-Up#INFO][EDIT2.cbl:401] MOVE statement
            container.getWsVariables().getWsEndDate()
                    .setWsEndDateDd(container.getCorpt0ai().getEdtddi());
            // [T-Up#INFO][EDIT2.cbl:403] MOVE statement
            container.getCsutldtcParm().setCsutldtcDate(
                    container.getWsVariables().getWsStartDate().get());
            // [T-Up#INFO][EDIT2.cbl:404] MOVE statement
            container.getCsutldtcParm().setCsutldtcDateFormat(
                    container.getWsVariables().getWsDateFormat());
            // [T-Up#INFO][EDIT2.cbl:405] MOVE statement
            container.getCsutldtcParm().getCsutldtcResult()
                    .set(StringUtils.repeat(' ', 80));
            // [T-Up#INFO][EDIT2.cbl:407] CALL statement
            tempint1 = csutldtc.run(context.getGeneralContext(), container
                    .getCsutldtcParm().getCsutldtcDate(), container
                    .getCsutldtcParm().getCsutldtcDateFormat(), container
                    .getCsutldtcParm().getCsutldtcResult().get());
            context.setReturnValue(tempint1);
            tempCsutldtcVariableContainer1 = (CsutldtcVariableContainer) context
                    .getProgramVariableContainer("Csutldtc");
            container.getCsutldtcParm().setCsutldtcDate(
                    tempCsutldtcVariableContainer1.getLsDate());
            container.getCsutldtcParm().setCsutldtcDateFormat(
                    tempCsutldtcVariableContainer1.getLsDateFormat());
            container.getCsutldtcParm().getCsutldtcResult()
                    .set(tempCsutldtcVariableContainer1.getLsResult());
            // [T-Up#INFO][EDIT2.cbl:411] IF statement
            if (CobStringUtils.compare(container.getCsutldtcParm()
                    .getCsutldtcResult().getCsutldtcResultSevCd(), "0000") == 0) {
                // [T-Up#INFO][EDIT2.cbl:412] CONTINUE statement
            } else {
                // [T-Up#INFO][EDIT2.cbl:414] IF statement
                if (CobStringUtils.compare(container.getCsutldtcParm()
                        .getCsutldtcResult().getCsutldtcResultMsgNum(), "2513") != 0) {
                    // [T-Up#INFO][EDIT2.cbl:415] MOVE statement
                    container.getWsVariables().setWsMessage(
                            "Start Date - Not a valid date...");
                    // [T-Up#INFO][EDIT2.cbl:417] MOVE statement
                    container.getWsVariables().setWsErrFlg("Y");
                    // [T-Up#INFO][EDIT2.cbl:418] MOVE statement
                    container.getCorpt0ai().setSdtmml(-1);
                    // [T-Up#INFO][EDIT2.cbl:419] PERFORM statement
                    controlManager.run(context, sendTrnrptScreen);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                }
            }
            // [T-Up#INFO][EDIT2.cbl:423] MOVE statement
            container.getCsutldtcParm().setCsutldtcDate(
                    container.getWsVariables().getWsEndDate().get());
            // [T-Up#INFO][EDIT2.cbl:424] MOVE statement
            container.getCsutldtcParm().setCsutldtcDateFormat(
                    container.getWsVariables().getWsDateFormat());
            // [T-Up#INFO][EDIT2.cbl:425] MOVE statement
            container.getCsutldtcParm().getCsutldtcResult()
                    .set(StringUtils.repeat(' ', 80));
            // [T-Up#INFO][EDIT2.cbl:427] CALL statement
            tempint1 = csutldtc.run(context.getGeneralContext(), container
                    .getCsutldtcParm().getCsutldtcDate(), container
                    .getCsutldtcParm().getCsutldtcDateFormat(), container
                    .getCsutldtcParm().getCsutldtcResult().get());
            context.setReturnValue(tempint1);
            tempCsutldtcVariableContainer1 = (CsutldtcVariableContainer) context
                    .getProgramVariableContainer("Csutldtc");
            container.getCsutldtcParm().setCsutldtcDate(
                    tempCsutldtcVariableContainer1.getLsDate());
            container.getCsutldtcParm().setCsutldtcDateFormat(
                    tempCsutldtcVariableContainer1.getLsDateFormat());
            container.getCsutldtcParm().getCsutldtcResult()
                    .set(tempCsutldtcVariableContainer1.getLsResult());
            // [T-Up#INFO][EDIT2.cbl:431] IF statement
            if (CobStringUtils.compare(container.getCsutldtcParm()
                    .getCsutldtcResult().getCsutldtcResultSevCd(), "0000") == 0) {
                // [T-Up#INFO][EDIT2.cbl:432] CONTINUE statement
            } else {
                // [T-Up#INFO][EDIT2.cbl:434] IF statement
                if (CobStringUtils.compare(container.getCsutldtcParm()
                        .getCsutldtcResult().getCsutldtcResultMsgNum(), "2513") != 0) {
                    // [T-Up#INFO][EDIT2.cbl:435] MOVE statement
                    container.getWsVariables().setWsMessage(
                            "End Date - Not a valid date...");
                    // [T-Up#INFO][EDIT2.cbl:437] MOVE statement
                    container.getWsVariables().setWsErrFlg("Y");
                    // [T-Up#INFO][EDIT2.cbl:438] MOVE statement
                    container.getCorpt0ai().setEdtmml(-1);
                    // [T-Up#INFO][EDIT2.cbl:439] PERFORM statement
                    controlManager.run(context, sendTrnrptScreen);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                }
            }
            // [T-Up#INFO][EDIT2.cbl:444] MOVE statement
            container
                    .getJobData()
                    .getJobData1()
                    .getFiller1()
                    .setParmStartDate1(
                            container.getWsVariables().getWsStartDate().get());
            container
                    .getJobData()
                    .getJobData1()
                    .getFiller3()
                    .setParmStartDate2(
                            container.getWsVariables().getWsStartDate().get());
            // [T-Up#INFO][EDIT2.cbl:446] MOVE statement
            container
                    .getJobData()
                    .getJobData1()
                    .getFiller2()
                    .setParmEndDate1(
                            container.getWsVariables().getWsEndDate().get());
            container
                    .getJobData()
                    .getJobData1()
                    .getFiller3()
                    .setParmEndDate2(
                            container.getWsVariables().getWsEndDate().get());
            // [T-Up#INFO][EDIT2.cbl:448] MOVE statement
            container.getWsVariables().setWsReportName("Custom");
            // [T-Up#INFO][EDIT2.cbl:449] IF statement
            if (!(CobStringUtils.compare(container.getWsVariables()
                    .getWsErrFlg(), ERR_FLG_ON) == 0)) {
                // [T-Up#INFO][EDIT2.cbl:450] PERFORM statement
                controlManager.run(context, submitJobToIntrdr);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
        } else {
            // [T-Up#INFO][EDIT2.cbl:453] MOVE statement
            container.getWsVariables().setWsMessage(
                    "Select a report type to print report...");
            // [T-Up#INFO][EDIT2.cbl:455] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][EDIT2.cbl:456] MOVE statement
            container.getCorpt0ai().setMonthlyl(-1);
            // [T-Up#INFO][EDIT2.cbl:457] PERFORM statement
            controlManager.run(context, sendTrnrptScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][EDIT2.cbl:460] IF statement
        if (!(CobStringUtils.compare(container.getWsVariables().getWsErrFlg(),
                ERR_FLG_ON) == 0)) {
            // [T-Up#INFO][EDIT2.cbl:462] PERFORM statement
            controlManager.run(context, initializeAllFields);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][EDIT2.cbl:463] MOVE statement
            container.setErrmsgc(container.getDfhbmsca().getDfhgreen());
            // [T-Up#INFO][EDIT2.cbl:464] STRING statement
            tempStringBuilder1 = new StringBuilder();
            tempStringBuilder2 = new StringBuilder(container.getWsVariables()
                    .getWsMessage());
            tempStringBuilder1.append(
                    container.getWsVariables().getWsReportName()
                            .split(Pattern.quote(" "))[0]).append(
                    " report submitted for printing ...");
            if (tempStringBuilder1.length() <= 80) {
                tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                        tempStringBuilder1.toString());
                container.getWsVariables().setWsMessage(
                        tempStringBuilder2.toString());
            }
            // [T-Up#INFO][EDIT2.cbl:468] MOVE statement
            container.getCorpt0ai().setMonthlyl(-1);
            // [T-Up#INFO][EDIT2.cbl:469] PERFORM statement
            controlManager.run(context, sendTrnrptScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      SUBMIT-JOB-TO-INTRDR
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][EDIT2.cbl:477] SUBMIT-JOB-TO-INTRDR Paragraph</p>
     */
    void submitJobToIntrdr(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        EditVariableContainer container = (EditVariableContainer) context
                .getProgramVariableContainer("Edit");
        // [T-Up#INFO][EDIT2.cbl:479] IF statement
        if (CobStringUtils.compare(container.getCorpt0ai().getConfirmi(), " ") == 0
                || CobStringUtils.compare(
                        container.getCorpt0ai().getConfirmi(),
                        StringUtils.repeat((char) 0x00, 1)) == 0) {
            // [T-Up#INFO][EDIT2.cbl:480] STRING statement
            tempStringBuilder1 = new StringBuilder();
            tempStringBuilder2 = new StringBuilder(container.getWsVariables()
                    .getWsMessage());
            tempStringBuilder1
                    .append("Please confirm to print the ")
                    .append(container.getWsVariables().getWsReportName()
                            .split(Pattern.quote(" "))[0]).append(" report...");
            if (tempStringBuilder1.length() <= 80) {
                tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                        tempStringBuilder1.toString());
                container.getWsVariables().setWsMessage(
                        tempStringBuilder2.toString());
            }
            // [T-Up#INFO][EDIT2.cbl:486] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][EDIT2.cbl:487] MOVE statement
            container.getCorpt0ai().setConfirml(-1);
            // [T-Up#INFO][EDIT2.cbl:488] PERFORM statement
            controlManager.run(context, sendTrnrptScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][EDIT2.cbl:491] IF statement
        if (!(CobStringUtils.compare(container.getWsVariables().getWsErrFlg(),
                ERR_FLG_ON) == 0)) {
            // [T-Up#INFO][EDIT2.cbl:492] EVALUATE statement
            if (CobStringUtils.compare(container.getCorpt0ai().getConfirmi(),
                    "Y") == 0
                    || CobStringUtils.compare(container.getCorpt0ai()
                            .getConfirmi(), "y") == 0) {
                // [T-Up#INFO][EDIT2.cbl:494] CONTINUE statement
            } else if (CobStringUtils.compare(container.getCorpt0ai()
                    .getConfirmi(), "N") == 0
                    || CobStringUtils.compare(container.getCorpt0ai()
                            .getConfirmi(), "n") == 0) {
                // [T-Up#INFO][EDIT2.cbl:496] PERFORM statement
                controlManager.run(context, initializeAllFields);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][EDIT2.cbl:497] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][EDIT2.cbl:498] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else {
                // [T-Up#INFO][EDIT2.cbl:500] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsVariables().getWsMessage());
                tempStringBuilder1
                        .append("\"")
                        .append(container.getCorpt0ai().getConfirmi()
                                .split(Pattern.quote(" "))[0])
                        .append("\" is not a valid value to confirm...");
                if (tempStringBuilder1.length() <= 80) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsVariables().setWsMessage(
                            tempStringBuilder2.toString());
                }
                // [T-Up#INFO][EDIT2.cbl:506] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][EDIT2.cbl:507] MOVE statement
                container.getCorpt0ai().setConfirml(-1);
                // [T-Up#INFO][EDIT2.cbl:508] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
            // [T-Up#INFO][EDIT2.cbl:511] SET statement
            container.getWsVariables().setWsEndLoop(END_LOOP_NO);
            // [T-Up#INFO][EDIT2.cbl:513] PERFORM statement
            container.getWsVariables().setWsIdx(1);
            while (!(container.getWsVariables().getWsIdx() > 1000
                    || CobStringUtils.compare(container.getWsVariables()
                            .getWsEndLoop(), END_LOOP_YES) == 0 || CobStringUtils
                        .compare(container.getWsVariables().getWsErrFlg(),
                                ERR_FLG_ON) == 0)) {
                // [T-Up#INFO][EDIT2.cbl:516] MOVE statement
                container.getWsVariables().setJclRecord(
                        container.getJobData().getJobLines(
                                container.getWsVariables().getWsIdx() - 1));
                // [T-Up#INFO][EDIT2.cbl:517] IF statement
                if (CobStringUtils.compare(container.getWsVariables()
                        .getJclRecord(), "/*EOF") == 0
                        || CobStringUtils.compare(container.getWsVariables()
                                .getJclRecord(), StringUtils.repeat(' ', 80)) == 0
                        || CobStringUtils.compare(container.getWsVariables()
                                .getJclRecord(), StringUtils.repeat(
                                (char) 0x00, 80)) == 0) {
                    // [T-Up#INFO][EDIT2.cbl:519] SET statement
                    container.getWsVariables().setWsEndLoop(END_LOOP_YES);
                }
                // [T-Up#INFO][EDIT2.cbl:522] PERFORM statement
                controlManager.run(context, wirteJobsubTdq);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                container.getWsVariables().setWsIdx(
                        container.getWsVariables().getWsIdx() + 1);
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      WIRTE-JOBSUB-TDQ
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][EDIT2.cbl:530] WIRTE-JOBSUB-TDQ Paragraph</p>
     */
    void wirteJobsubTdq(OpenFrameContext context) {
        EditVariableContainer container = (EditVariableContainer) context
                .getProgramVariableContainer("Edit");
        // [T-Up#INFO][EDIT2.cbl:532] EXEC_CICS statement
        /*
                       EXEC CICS WRITEQ TD
                         QUEUE ('JOBS')
                         FROM (JCL-RECORD)
                         LENGTH (LENGTH OF JCL-RECORD)
                         RESP(WS-RESP-CD)
                         RESP2(WS-REAS-CD)
                       END-EXEC
         */
        try {
            queueManager.writeTransientQueue("JOBS", container.getWsVariables()
                    .getJclRecord());
        } catch (ConditionException e) {
        } finally {
            container.getWsVariables().setWsRespCd(task.getLastResp());
            container.getWsVariables().setWsReasCd(task.getLastResp2());
        }
        // [T-Up#INFO][EDIT2.cbl:540] EVALUATE statement
        if (container.getWsVariables().getWsRespCd() == 0) {
            // [T-Up#INFO][EDIT2.cbl:542] CONTINUE statement
        } else {
            // [T-Up#INFO][EDIT2.cbl:544] DISPLAY statement
            System.out.print("RESP:");
            System.out.print(container.getWsVariables().getWsRespCd());
            System.out.print("REAS:");
            System.out.println(container.getWsVariables().getWsReasCd());
            // [T-Up#INFO][EDIT2.cbl:545] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][EDIT2.cbl:546] MOVE statement
            container.getWsVariables().setWsMessage(
                    "Unable to Write TDQ (JOBS)...");
            // [T-Up#INFO][EDIT2.cbl:548] MOVE statement
            container.getCorpt0ai().setMonthlyl(-1);
            // [T-Up#INFO][EDIT2.cbl:549] PERFORM statement
            controlManager.run(context, sendTrnrptScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      RETURN-TO-PREV-SCREEN
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][EDIT2.cbl:555] RETURN-TO-PREV-SCREEN Paragraph</p>
     */
    void returnToPrevScreen(OpenFrameContext context) {
    }

    // *     IF CDEMO-TO-PROGRAM = LOW-VALUES OR SPACES
    // *         MOVE 'COSGN00C' TO CDEMO-TO-PROGRAM
    // *     END-IF
    // *     MOVE WS-TRANID    TO CDEMO-FROM-TRANID
    // *     MOVE WS-PGMNAME   TO CDEMO-FROM-PROGRAM
    // *     MOVE ZEROS        TO CDEMO-PGM-CONTEXT
    // *     EXEC CICS
    // *         XCTL PROGRAM(CDEMO-TO-PROGRAM)
    // *         COMMAREA(CARDDEMO-COMMAREA)
    // *     END-EXEC.
    // *----------------------------------------------------------------*
    // *                      SEND-TRNRPT-SCREEN
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][EDIT2.cbl:571] SEND-TRNRPT-SCREEN Paragraph</p>
     */
    void sendTrnrptScreen(OpenFrameContext context) {
        EditVariableContainer container = (EditVariableContainer) context
                .getProgramVariableContainer("Edit");
        // [T-Up#INFO][EDIT2.cbl:573] PERFORM statement
        controlManager.run(context, populateHeaderInfo);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][EDIT2.cbl:575] MOVE statement
        container.setErrmsgo(container.getWsVariables().getWsMessage());
        // [T-Up#INFO][EDIT2.cbl:577] IF statement
        if (CobStringUtils.compare(container.getWsVariables()
                .getWsSendEraseFlg(), SEND_ERASE_YES) == 0) {
            // [T-Up#INFO][EDIT2.cbl:578] EXEC_CICS statement
            /*
                               EXEC CICS SEND
                                         MAP('CORPT0A')
                                         MAPSET('CORPT00')
                                         FROM(CORPT0AO)
                                         ERASE
                                         CURSOR
                               END-EXEC
             */
            ((EditOutputDto) task.getOutputDto())
                    .setPageName("CORPT00_CORPT0A");
            ((EditOutputDto) task.getOutputDto()).setCorpt0ao(container
                    .getCorpt0ao());
        } else {
            // [T-Up#INFO][EDIT2.cbl:586] EXEC_CICS statement
            /*
                               EXEC CICS SEND
                                         MAP('CORPT0A')
                                         MAPSET('CORPT00')
                                         FROM(CORPT0AO)
                                         CURSOR
                               END-EXEC
             */
            ((EditOutputDto) task.getOutputDto())
                    .setPageName("CORPT00_CORPT0A");
            ((EditOutputDto) task.getOutputDto()).setCorpt0ao(container
                    .getCorpt0ao());
        }
        // *                  ERASE
        // [T-Up#INFO][EDIT2.cbl:595] GO TO statement
        context.setGotoTarget(returnToCics);
        return;
    }

    // *----------------------------------------------------------------*
    // *                         RETURN-TO-CICS
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][EDIT2.cbl:600] RETURN-TO-CICS Paragraph</p>
     */
    void returnToCics(OpenFrameContext context) {
        EditVariableContainer container = (EditVariableContainer) context
                .getProgramVariableContainer("Edit");
        // [T-Up#INFO][EDIT2.cbl:602] EXEC_CICS statement
        /*
                       EXEC CICS RETURN
                                 TRANSID (WS-TRANID)
                                 COMMAREA (CARDDEMO-COMMAREA)
                       END-EXEC
         */
        TaskDto taskDto = TaskDto
                .builder()
                .destination("CR00")
                .data(Data
                        .session(CarddemoCommareaToCorpt00cDfhcommarea.INSTANCE
                                .toTarget(container.getCarddemoCommarea())))
                .build();
        taskInvoker.setNextTask(taskDto);
        context.setReturnFlag(true);
    }

    // *              LENGTH(LENGTH OF CARDDEMO-COMMAREA)
    // *----------------------------------------------------------------*
    // *                      RECEIVE-TRNRPT-SCREEN
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][EDIT2.cbl:611] RECEIVE-TRNRPT-SCREEN Paragraph</p>
     */
    void receiveTrnrptScreen(OpenFrameContext context) {
        EditVariableContainer container = (EditVariableContainer) context
                .getProgramVariableContainer("Edit");
        // [T-Up#INFO][EDIT2.cbl:613] EXEC_CICS statement
        /*
                       EXEC CICS RECEIVE
                                 MAP('CORPT0A')
                                 MAPSET('CORPT00')
                                 INTO(CORPT0AI)
                                 RESP(WS-RESP-CD)
                                 RESP2(WS-REAS-CD)
                       END-EXEC
         */
        try {
            container.setCorpt0ai(((EditInputDto) task.getInputDto())
                    .getCorpt0ai());
        } catch (ConditionException e) {
        } finally {
            container.getWsVariables().setWsRespCd(task.getLastResp());
            container.getWsVariables().setWsReasCd(task.getLastResp2());
        }
    }

    // *----------------------------------------------------------------*
    // *                      POPULATE-HEADER-INFO
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][EDIT2.cbl:624] POPULATE-HEADER-INFO Paragraph</p>
     */
    void populateHeaderInfo(OpenFrameContext context) {
        EditVariableContainer container = (EditVariableContainer) context
                .getProgramVariableContainer("Edit");
        // [T-Up#INFO][EDIT2.cbl:626] MOVE statement
        container.getWsDateTime().getWsCurdateData()
                .set(IntrinsicFunction.functionCurrentDate());
        // [T-Up#INFO][EDIT2.cbl:628] MOVE statement
        container.setTitle01o(container.getCcdaScreenTitle().getCcdaTitle01());
        // [T-Up#INFO][EDIT2.cbl:629] MOVE statement
        container.setTitle02o(container.getCcdaScreenTitle().getCcdaTitle02());
        // [T-Up#INFO][EDIT2.cbl:630] MOVE statement
        container.setTrnnameo(container.getWsVariables().getWsTranid());
        // [T-Up#INFO][EDIT2.cbl:631] MOVE statement
        container.setPgmnameo(container.getWsVariables().getWsPgmname());
        // [T-Up#INFO][EDIT2.cbl:633] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateMonth());
        // [T-Up#INFO][EDIT2.cbl:634] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateDd(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateDay());
        // [T-Up#INFO][EDIT2.cbl:635] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateYy(
                        Integer.parseInt(CobStream
                                .convZonedIntToString(
                                        container.getWsDateTime()
                                                .getWsCurdateData()
                                                .getWsCurdate()
                                                .getWsCurdateYear(), 4)
                                .substring(2, 4).trim()));
        // [T-Up#INFO][EDIT2.cbl:637] MOVE statement
        container.setCurdateo(container.getWsDateTime().getWsCurdateMmDdYy()
                .get());
        // [T-Up#INFO][EDIT2.cbl:639] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeHh(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeHours());
        // [T-Up#INFO][EDIT2.cbl:640] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeMinute());
        // [T-Up#INFO][EDIT2.cbl:641] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeSs(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeSecond());
        // [T-Up#INFO][EDIT2.cbl:643] MOVE statement
        container.setCurtimeo(container.getWsDateTime().getWsCurtimeHhMmSs()
                .get());
    }

    // *----------------------------------------------------------------*
    // *                      INITIALIZE-ALL-FIELDS
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][EDIT2.cbl:648] INITIALIZE-ALL-FIELDS Paragraph</p>
     */
    void initializeAllFields(OpenFrameContext context) {
        EditVariableContainer container = (EditVariableContainer) context
                .getProgramVariableContainer("Edit");
        // [T-Up#INFO][EDIT2.cbl:650] MOVE statement
        container.getCorpt0ai().setMonthlyl(-1);
        // [T-Up#INFO][EDIT2.cbl:651] INITIALIZE statement
        container.getCorpt0ai().setMonthlyi(StringUtils.repeat(' ', 1));
        container.getCorpt0ai().setYearlyi(StringUtils.repeat(' ', 1));
        container.getCorpt0ai().setCustomi(StringUtils.repeat(' ', 1));
        container.getCorpt0ai().setSdtmmi(StringUtils.repeat(' ', 2));
        container.getCorpt0ai().setSdtddi(StringUtils.repeat(' ', 2));
        container.getCorpt0ai().setSdtyyyyi(StringUtils.repeat(' ', 4));
        container.getCorpt0ai().setEdtmmi(StringUtils.repeat(' ', 2));
        container.getCorpt0ai().setEdtddi(StringUtils.repeat(' ', 2));
        container.getCorpt0ai().setEdtyyyyi(StringUtils.repeat(' ', 4));
        container.getCorpt0ai().setConfirmi(StringUtils.repeat(' ', 1));
        container.getWsVariables().setWsMessage(StringUtils.repeat(' ', 80));
    }

    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:12:33 CDT
    // *
}
