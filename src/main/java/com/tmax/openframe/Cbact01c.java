package com.tmax.openframe;

import static com.tmax.openframe.variable.Cbact01cVariableContainer.*;
import com.tmax.openframe.file.*;
import com.tmax.openframe.mapper.Cbact01cMapperInterface;
import com.tmax.openframe.runtime.cobol.CobStringUtils;
import com.tmax.openframe.runtime.context.OpenFrameContext;
import com.tmax.openframe.runtime.file.FileStatus;
import com.tmax.openframe.runtime.flow.ControlManager;
import com.tmax.openframe.variable.Cbact01cVariableContainer;
import com.tmax.openframe.variable.group.Cbact01cFdAcctfileRec;
import java.math.*;
import java.util.*;
import java.util.function.Consumer;
import lombok.*;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Primary;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:09 KST</p>
 * <hr>
 * <p>Java class for defining logics of COBOL program</p>
 * <ul>
 * <li>The name of COBOL program: CBACT01C.cbl</li>
 * <li>Variable container class: {@link Cbact01cVariableContainer}</li>
 * <li>The list of files used in the program</li>
 * <ul>
 * <li>ACCTFILE-FILE: FD class {@code ->} {@link Cbact01cFdAcctfileFile}, record class {@code -> } {@link Cbact01cFdAcctfileRec}</li>
 * </ul>
 * </ul>
 */
@Service
@RequiredArgsConstructor
@Transactional
@Primary
public class Cbact01c {
    // *
    /** 
     * <p>Class that manages an execution flow of the program</p>
     */
    protected final ControlManager controlManager;
    Consumer<OpenFrameContext> unnamedSentence = this::unnamedSentence;
    Consumer<OpenFrameContext> _1000AcctfileGetNext = this::_1000AcctfileGetNext;
    Consumer<OpenFrameContext> _1100DisplayAcctRecord = this::_1100DisplayAcctRecord;
    Consumer<OpenFrameContext> _0000AcctfileOpen = this::_0000AcctfileOpen;
    Consumer<OpenFrameContext> _9000AcctfileClose = this::_9000AcctfileClose;
    Consumer<OpenFrameContext> _9999AbendProgram = this::_9999AbendProgram;
    Consumer<OpenFrameContext> _9910DisplayIoStatus = this::_9910DisplayIoStatus;
    /** 
     * <p>Execution flow of COBOL program that defined in the procedure division</p>
     */
    ArrayList<Consumer> methodList = new ArrayList<>();
    {
        methodList.add(unnamedSentence);
        methodList.add(_1000AcctfileGetNext);
        methodList.add(_1100DisplayAcctRecord);
        methodList.add(_0000AcctfileOpen);
        methodList.add(_9000AcctfileClose);
        methodList.add(_9999AbendProgram);
        methodList.add(_9910DisplayIoStatus);
    }
    @Autowired
    private Cbact01cFileOpAcctfileFile fdAcctfileFile;

    /** 
     * <p>Method for executing a program logic that defined in the procedure division</p>
     * @param generalContext context that is necessary for executing program
     * @return return value of program
     */
    public int run(Map<String, Object> generalContext) {
        OpenFrameContext context = new OpenFrameContext(generalContext,
                methodList);
        if (context.getProgramVariableContainer("Cbact01c") == null) {
            Cbact01cVariableContainer container = new Cbact01cVariableContainer();
            context.setProgramVariableContainer("Cbact01c", container);
        }
        controlManager.run(context);
        return context.getReturnValue();
    }

    // ******************************************************************
    // * Program     : CBACT01C.CBL
    // * Application : CardDemo
    // * Type        : BATCH COBOL Program
    // * Function    : Read and print account data file.
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // *****************************************************************

    void unnamedSentence(OpenFrameContext context) {
        Cbact01cVariableContainer container = (Cbact01cVariableContainer) context
                .getProgramVariableContainer("Cbact01c");
        // [T-Up#INFO][CBACT01C.cbl:82] DISPLAY statement
        System.out.println("START OF EXECUTION OF PROGRAM CBACT01C");
        // [T-Up#INFO][CBACT01C.cbl:83] PERFORM statement
        controlManager.run(context, _0000AcctfileOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBACT01C.cbl:85] PERFORM statement
        while (!(CobStringUtils.compare(container.getEndOfFile(), "Y") == 0)) {
            // [T-Up#INFO][CBACT01C.cbl:86] IF statement
            if (CobStringUtils.compare(container.getEndOfFile(), "N") == 0) {
                // [T-Up#INFO][CBACT01C.cbl:87] PERFORM statement
                controlManager.run(context, _1000AcctfileGetNext);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][CBACT01C.cbl:88] IF statement
                if (CobStringUtils.compare(container.getEndOfFile(), "N") == 0) {
                    // [T-Up#INFO][CBACT01C.cbl:89] DISPLAY statement
                    System.out.println(container.getAccountRecord());
                }
            }
        }
        // [T-Up#INFO][CBACT01C.cbl:94] PERFORM statement
        controlManager.run(context, _9000AcctfileClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBACT01C.cbl:96] DISPLAY statement
        System.out.println("END OF EXECUTION OF PROGRAM CBACT01C");
        // [T-Up#INFO][CBACT01C.cbl:98] GOBACK statement
        context.setReturnFlag(true);
        return;
    }

    // *****************************************************************
    // * I/O ROUTINES TO ACCESS A KSDS, VSAM DATA SET...               *
    // *****************************************************************

    /** 
     * <p>[T-Up#INFO][CBACT01C.cbl:103] 1000-ACCTFILE-GET-NEXT Paragraph</p>
     */
    void _1000AcctfileGetNext(OpenFrameContext context) {
        Cbact01cFdAcctfileRec tempCbact01cFdAcctfileRec1;
        Cbact01cVariableContainer container = (Cbact01cVariableContainer) context
                .getProgramVariableContainer("Cbact01c");
        tempCbact01cFdAcctfileRec1 = fdAcctfileFile.readNext(context);
        if (tempCbact01cFdAcctfileRec1 != null) {
            container.setFdAcctfileRec(tempCbact01cFdAcctfileRec1);
            Cbact01cMapperInterface.Cbact01cFdAcctfileRecToAccountRecord.set(
                    container.getFdAcctfileRec(), container.getAccountRecord());
        }
        // [T-Up#INFO][CBACT01C.cbl:105] IF statement
        if (CobStringUtils.compare(container.getAcctfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBACT01C.cbl:106] MOVE statement
            container.setApplResult(0);
            // [T-Up#INFO][CBACT01C.cbl:107] PERFORM statement
            controlManager.run(context, _1100DisplayAcctRecord);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][CBACT01C.cbl:109] IF statement
            if (CobStringUtils.compare(container.getAcctfileStatus().get(),
                    "10") == 0) {
                // [T-Up#INFO][CBACT01C.cbl:110] MOVE statement
                container.setApplResult(16);
            } else {
                // [T-Up#INFO][CBACT01C.cbl:112] MOVE statement
                container.setApplResult(12);
            }
        }
        // [T-Up#INFO][CBACT01C.cbl:115] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBACT01C.cbl:116] CONTINUE statement
        } else {
            // [T-Up#INFO][CBACT01C.cbl:118] IF statement
            if (container.getApplResult() == APPL_EOF) {
                // [T-Up#INFO][CBACT01C.cbl:119] MOVE statement
                container.setEndOfFile("Y");
            } else {
                // [T-Up#INFO][CBACT01C.cbl:121] DISPLAY statement
                System.out.println("ERROR READING ACCOUNT FILE");
                // [T-Up#INFO][CBACT01C.cbl:122] MOVE statement
                Cbact01cMapperInterface.Cbact01cAcctfileStatusToCbact01cIoStatus
                        .set(container.getAcctfileStatus(),
                                container.getIoStatus());
                // [T-Up#INFO][CBACT01C.cbl:123] PERFORM statement
                controlManager.run(context, _9910DisplayIoStatus);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][CBACT01C.cbl:124] PERFORM statement
                controlManager.run(context, _9999AbendProgram);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
        }
        // [T-Up#INFO][CBACT01C.cbl:127] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBACT01C.cbl:129] 1100-DISPLAY-ACCT-RECORD Paragraph</p>
     */
    void _1100DisplayAcctRecord(OpenFrameContext context) {
        Cbact01cVariableContainer container = (Cbact01cVariableContainer) context
                .getProgramVariableContainer("Cbact01c");
        // [T-Up#INFO][CBACT01C.cbl:130] DISPLAY statement
        System.out.print("ACCT-ID                 :");
        System.out.println(container.getAccountRecord().getAcctId());
        // [T-Up#INFO][CBACT01C.cbl:131] DISPLAY statement
        System.out.print("ACCT-ACTIVE-STATUS      :");
        System.out.println(container.getAccountRecord().getAcctActiveStatus());
        // [T-Up#INFO][CBACT01C.cbl:132] DISPLAY statement
        System.out.print("ACCT-CURR-BAL           :");
        System.out.println(container.getAccountRecord().getAcctCurrBal());
        // [T-Up#INFO][CBACT01C.cbl:133] DISPLAY statement
        System.out.print("ACCT-CREDIT-LIMIT       :");
        System.out.println(container.getAccountRecord().getAcctCreditLimit());
        // [T-Up#INFO][CBACT01C.cbl:134] DISPLAY statement
        System.out.print("ACCT-CASH-CREDIT-LIMIT  :");
        System.out.println(container.getAccountRecord()
                .getAcctCashCreditLimit());
        // [T-Up#INFO][CBACT01C.cbl:135] DISPLAY statement
        System.out.print("ACCT-OPEN-DATE          :");
        System.out.println(container.getAccountRecord().getAcctOpenDate());
        // [T-Up#INFO][CBACT01C.cbl:136] DISPLAY statement
        System.out.print("ACCT-EXPIRAION-DATE     :");
        System.out.println(container.getAccountRecord().getAcctExpiraionDate());
        // [T-Up#INFO][CBACT01C.cbl:137] DISPLAY statement
        System.out.print("ACCT-REISSUE-DATE       :");
        System.out.println(container.getAccountRecord().getAcctReissueDate());
        // [T-Up#INFO][CBACT01C.cbl:138] DISPLAY statement
        System.out.print("ACCT-CURR-CYC-CREDIT    :");
        System.out.println(container.getAccountRecord().getAcctCurrCycCredit());
        // [T-Up#INFO][CBACT01C.cbl:139] DISPLAY statement
        System.out.print("ACCT-CURR-CYC-DEBIT     :");
        System.out.println(container.getAccountRecord().getAcctCurrCycDebit());
        // [T-Up#INFO][CBACT01C.cbl:140] DISPLAY statement
        System.out.print("ACCT-GROUP-ID           :");
        System.out.println(container.getAccountRecord().getAcctGroupId());
        // [T-Up#INFO][CBACT01C.cbl:141] DISPLAY statement
        System.out.println("-------------------------------------------------");
        // [T-Up#INFO][CBACT01C.cbl:142] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBACT01C.cbl:144] 0000-ACCTFILE-OPEN Paragraph</p>
     */
    void _0000AcctfileOpen(OpenFrameContext context) {
        Cbact01cVariableContainer container = (Cbact01cVariableContainer) context
                .getProgramVariableContainer("Cbact01c");
        // [T-Up#INFO][CBACT01C.cbl:145] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBACT01C.cbl:146] OPEN statement
        fdAcctfileFile.open(context);
        // [T-Up#INFO][CBACT01C.cbl:147] IF statement
        if (CobStringUtils.compare(container.getAcctfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBACT01C.cbl:148] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBACT01C.cbl:150] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBACT01C.cbl:152] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBACT01C.cbl:153] CONTINUE statement
        } else {
            // [T-Up#INFO][CBACT01C.cbl:155] DISPLAY statement
            System.out.println("ERROR OPENING ACCTFILE");
            // [T-Up#INFO][CBACT01C.cbl:156] MOVE statement
            Cbact01cMapperInterface.Cbact01cAcctfileStatusToCbact01cIoStatus
                    .set(container.getAcctfileStatus(), container.getIoStatus());
            // [T-Up#INFO][CBACT01C.cbl:157] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBACT01C.cbl:158] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBACT01C.cbl:160] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBACT01C.cbl:162] 9000-ACCTFILE-CLOSE Paragraph</p>
     */
    void _9000AcctfileClose(OpenFrameContext context) {
        Cbact01cVariableContainer container = (Cbact01cVariableContainer) context
                .getProgramVariableContainer("Cbact01c");
        // [T-Up#INFO][CBACT01C.cbl:163] ADD statement
        container.setApplResult(8);
        // [T-Up#INFO][CBACT01C.cbl:164] CLOSE statement
        fdAcctfileFile.close(context);
        // [T-Up#INFO][CBACT01C.cbl:165] IF statement
        if (CobStringUtils.compare(container.getAcctfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBACT01C.cbl:166] SUBTRACT statement
            container.setApplResult(container.getApplResult()
                    - container.getApplResult());
        } else {
            // [T-Up#INFO][CBACT01C.cbl:168] ADD statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBACT01C.cbl:170] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBACT01C.cbl:171] CONTINUE statement
        } else {
            // [T-Up#INFO][CBACT01C.cbl:173] DISPLAY statement
            System.out.println("ERROR CLOSING ACCOUNT FILE");
            // [T-Up#INFO][CBACT01C.cbl:174] MOVE statement
            Cbact01cMapperInterface.Cbact01cAcctfileStatusToCbact01cIoStatus
                    .set(container.getAcctfileStatus(), container.getIoStatus());
            // [T-Up#INFO][CBACT01C.cbl:175] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBACT01C.cbl:176] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBACT01C.cbl:178] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][CBACT01C.cbl:180] 9999-ABEND-PROGRAM Paragraph</p>
     */
    void _9999AbendProgram(OpenFrameContext context) {
        Cbact01cVariableContainer container = (Cbact01cVariableContainer) context
                .getProgramVariableContainer("Cbact01c");
        // [T-Up#INFO][CBACT01C.cbl:181] DISPLAY statement
        System.out.println("ABENDING PROGRAM");
        // [T-Up#INFO][CBACT01C.cbl:182] MOVE statement
        container.setTiming(0);
        // [T-Up#INFO][CBACT01C.cbl:183] MOVE statement
        container.setAbcode(999);
        // [T-Up#INFO][CBACT01C.cbl:184] CALL statement
        throw new RuntimeException();
    }

    // *****************************************************************

    /** 
     * <p>[T-Up#INFO][CBACT01C.cbl:187] 9910-DISPLAY-IO-STATUS Paragraph</p>
     */
    void _9910DisplayIoStatus(OpenFrameContext context) {
        Cbact01cVariableContainer container = (Cbact01cVariableContainer) context
                .getProgramVariableContainer("Cbact01c");
        // [T-Up#INFO][CBACT01C.cbl:188] IF statement
        if (!StringUtils.isNumeric(container.getIoStatus().toString())
                || CobStringUtils.compare(container.getIoStatus().getIoStat1(),
                        "9") == 0) {
            // [T-Up#INFO][CBACT01C.cbl:190] MOVE statement
            container.getIoStatus04().set(
                    StringUtils.overlay(container.getIoStatus04().get(),
                            container.getIoStatus().getIoStat1(), 0, 1));
            // [T-Up#INFO][CBACT01C.cbl:191] MOVE statement
            container.setTwoBytesBinary(0);
            // [T-Up#INFO][CBACT01C.cbl:192] MOVE statement
            container.setTwoBytesRight(container.getIoStatus().getIoStat2());
            // [T-Up#INFO][CBACT01C.cbl:193] MOVE statement
            container.getIoStatus04().setIoStatus0403(
                    container.getTwoBytesBinary());
            // [T-Up#INFO][CBACT01C.cbl:194] DISPLAY statement
            System.out.print("FILE STATUS IS: NNNN");
            System.out.println(container.getIoStatus04());
        } else {
            // [T-Up#INFO][CBACT01C.cbl:196] MOVE statement
            container.getIoStatus04().set("0000");
            // [T-Up#INFO][CBACT01C.cbl:197] MOVE statement
            container.getIoStatus04().set(
                    StringUtils.overlay(container.getIoStatus04().get(),
                            container.getIoStatus().get(), 2, 4));
            // [T-Up#INFO][CBACT01C.cbl:198] DISPLAY statement
            System.out.print("FILE STATUS IS: NNNN");
            System.out.println(container.getIoStatus04());
        }
        // [T-Up#INFO][CBACT01C.cbl:200] EXIT statement
    }

    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:12:31 CDT
    // *
}
