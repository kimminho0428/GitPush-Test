package com.tmax.openframe;

import com.tmax.openframe.online.task.service.ProgramControl;
import com.tmax.openframe.dto.Cosgn00cInputDto;
import com.tmax.openframe.online.task.service.OtherUserTaskInvoker;
import com.tmax.openframe.online.task.domain.dto.TaskDto.*;
import com.tmax.openframe.online.task.domain.dto.Data;
import com.tmax.openframe.mapper.Coadm01cMapperInterface.*;
import com.tmax.openframe.dto.Cousr00cInputDto;
import com.tmax.openframe.dto.Cousr01cInputDto;
import com.tmax.openframe.dto.Cousr02cInputDto;
import com.tmax.openframe.dto.Cousr03cInputDto;
import com.tmax.openframe.online.task.service.Task;
import com.tmax.openframe.dto.Coadm01cOutputDto;
import com.tmax.openframe.dto.Coadm01cInputDto;
import com.tmax.openframe.online.exception.ConditionException;
import static com.tmax.openframe.variable.group.CarddemoCommarea.CdemoGeneralInfo.*;
import static com.tmax.openframe.variable.group.Coadm01cWsVariables.*;
import com.tmax.openframe.runtime.cobol.CobStream;
import com.tmax.openframe.runtime.cobol.CobStringUtils;
import com.tmax.openframe.runtime.cobol.IntrinsicFunction;
import com.tmax.openframe.runtime.context.OpenFrameContext;
import com.tmax.openframe.runtime.flow.ControlManager;
import com.tmax.openframe.variable.Coadm01cVariableContainer;
import com.tmax.openframe.variable.group.Coadm1ai;
import java.math.*;
import java.util.*;
import java.util.function.Consumer;
import lombok.*;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Primary;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:15 KST</p>
 * <hr>
 * <p>Java class for defining logics of COBOL program</p>
 * <ul>
 * <li>The name of COBOL program: COADM01C.cbl</li>
 * <li>Variable container class: {@link Coadm01cVariableContainer}</li>
 * </ul>
 */
@Service
@RequiredArgsConstructor
@Transactional
@Primary
public class Coadm01c {
    /** 
     * <p>Class that manages an execution flow of the program</p>
     */
    protected final ControlManager controlManager;
    Consumer<OpenFrameContext> mainPara = this::mainPara;
    Consumer<OpenFrameContext> processEnterKey = this::processEnterKey;
    Consumer<OpenFrameContext> returnToSignonScreen = this::returnToSignonScreen;
    Consumer<OpenFrameContext> sendMenuScreen = this::sendMenuScreen;
    Consumer<OpenFrameContext> receiveMenuScreen = this::receiveMenuScreen;
    Consumer<OpenFrameContext> populateHeaderInfo = this::populateHeaderInfo;
    Consumer<OpenFrameContext> buildMenuOptions = this::buildMenuOptions;
    /** 
     * <p>Execution flow of COBOL program that defined in the procedure division</p>
     */
    ArrayList<Consumer> methodList = new ArrayList<>();
    {
        methodList.add(mainPara);
        methodList.add(processEnterKey);
        methodList.add(returnToSignonScreen);
        methodList.add(sendMenuScreen);
        methodList.add(receiveMenuScreen);
        methodList.add(populateHeaderInfo);
        methodList.add(buildMenuOptions);
    }
    private final Task task;
    private final TaskInvoker taskInvoker;
    private final ProgramControl programControl;

    /** 
     * <p>Method for executing a program logic that defined in the procedure division</p>
     * @param generalContext context that is necessary for executing program
     * @return return value of program
     */
    public int run(Map<String, Object> generalContext) {
        OpenFrameContext context = new OpenFrameContext(generalContext,
                methodList);
        if (context.getProgramVariableContainer("Coadm01c") == null) {
            Coadm01cVariableContainer container = new Coadm01cVariableContainer();
            context.setProgramVariableContainer("Coadm01c", container);
        }
        controlManager.run(context);
        return context.getReturnValue();
    }

    // ******************************************************************
    // * Program     : COADM01C.CBL
    // * Application : CardDemo
    // * Type        : CICS COBOL Program
    // * Function    : Admin Menu for Admin users
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // *      OCCURS 1 TO 32767 TIMES DEPENDING ON EIBCALEN.
    // *----------------------------------------------------------------*
    // *                       PROCEDURE DIVISION
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COADM01C.cbl:75] MAIN-PARA Paragraph</p>
     */
    void mainPara(OpenFrameContext context) {
        Coadm01cVariableContainer container = (Coadm01cVariableContainer) context
                .getProgramVariableContainer("Coadm01c");
        // [T-Up#INFO][COADM01C.cbl:77] SET statement
        container.getWsVariables().setWsErrFlg(ERR_FLG_OFF);
        // [T-Up#INFO][COADM01C.cbl:79] MOVE statement
        container.getWsVariables().setWsMessage(StringUtils.repeat(' ', 80));
        container.setErrmsgo(StringUtils.repeat(' ', 78));
        // [T-Up#INFO][COADM01C.cbl:82] IF statement
        if (task.hasCommarea() == 0) {
            // [T-Up#INFO][COADM01C.cbl:83] MOVE statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoFromProgram("COSGN00C");
            // [T-Up#INFO][COADM01C.cbl:84] EXEC_CICS statement
            /*
                               EXEC CICS
                               XCTL PROGRAM('COSGN00C')
                               END-EXEC
             */
            Cosgn00cInputDto cosgn00cInputDto = new Cosgn00cInputDto();
            programControl.forward("CC00", cosgn00cInputDto);
            context.setReturnFlag(true);
            // [T-Up#INFO][COADM01C.cbl:87] PERFORM statement
            controlManager.run(context, returnToSignonScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][COADM01C.cbl:89] MOVE statement
            container.getCarddemoCommarea().set(
                    StringUtils.overlay(container.getCarddemoCommarea().get(),
                            container.getDfhcommarea().get().substring(0, 160),
                            0, 160));
            // [T-Up#INFO][COADM01C.cbl:90] IF statement
            if (!(container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .getCdemoPgmContext() == CDEMO_PGM_REENTER)) {
                // [T-Up#INFO][COADM01C.cbl:91] SET statement
                container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .setCdemoPgmContext(CDEMO_PGM_REENTER);
                // [T-Up#INFO][COADM01C.cbl:92] MOVE statement
                container.setCoadm1ao(Coadm1ai.createDefaultValueInstance()
                        .get());
                // [T-Up#INFO][COADM01C.cbl:93] PERFORM statement
                controlManager.run(context, sendMenuScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else {
                // [T-Up#INFO][COADM01C.cbl:95] PERFORM statement
                controlManager.run(context, receiveMenuScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][COADM01C.cbl:96] EVALUATE statement
                if (CobStringUtils.compare(task.getPressedKey(), container
                        .getDfhaid().getDfhenter()) == 0) {
                    // [T-Up#INFO][COADM01C.cbl:98] PERFORM statement
                    controlManager.run(context, processEnterKey);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                } else if (CobStringUtils.compare(task.getPressedKey(),
                        container.getDfhaid().getDfhpf3()) == 0) {
                    // [T-Up#INFO][COADM01C.cbl:100] MOVE statement
                    container.getCarddemoCommarea().getCdemoGeneralInfo()
                            .setCdemoToProgram("COSGN00C");
                    // [T-Up#INFO][COADM01C.cbl:101] EXEC_CICS statement
                    /*
                                                   EXEC CICS
                                                     XCTL PROGRAM('COSGN00C')
                                                   END-EXEC
                     */
                    Cosgn00cInputDto cosgn00cInputDto = new Cosgn00cInputDto();
                    programControl.forward("CC00", cosgn00cInputDto);
                    context.setReturnFlag(true);
                    // [T-Up#INFO][COADM01C.cbl:104] PERFORM statement
                    controlManager.run(context, returnToSignonScreen);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                } else {
                    // [T-Up#INFO][COADM01C.cbl:106] MOVE statement
                    container.getWsVariables().setWsErrFlg("Y");
                    // [T-Up#INFO][COADM01C.cbl:107] MOVE statement
                    container.getWsVariables().setWsMessage(
                            container.getCcdaCommonMessages()
                                    .getCcdaMsgInvalidKey());
                    // [T-Up#INFO][COADM01C.cbl:108] PERFORM statement
                    controlManager.run(context, sendMenuScreen);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                }
            }
        }
        // [T-Up#INFO][COADM01C.cbl:113] EXEC_CICS statement
        /*
                       EXEC CICS RETURN
                                 TRANSID (WS-TRANID)
                                 COMMAREA (CARDDEMO-COMMAREA)
                       END-EXEC
         */
        TaskDto taskDto = TaskDto
                .builder()
                .destination("CA00")
                .data(Data
                        .session(CarddemoCommareaToCoadm01cDfhcommarea.INSTANCE
                                .toTarget(container.getCarddemoCommarea())))
                .build();
        taskInvoker.setNextTask(taskDto);
        context.setReturnFlag(true);
    }

    // *----------------------------------------------------------------*
    // *                      PROCESS-ENTER-KEY
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COADM01C.cbl:121] PROCESS-ENTER-KEY Paragraph</p>
     */
    void processEnterKey(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        Coadm01cVariableContainer container = (Coadm01cVariableContainer) context
                .getProgramVariableContainer("Coadm01c");
        // [T-Up#INFO][COADM01C.cbl:123] PERFORM statement
        container.getWsVariables().setWsIdx(2);
        while (!(CobStringUtils.compare(
                container
                        .getCoadm1ai()
                        .getOptioni()
                        .substring(container.getWsVariables().getWsIdx() - 1,
                                container.getWsVariables().getWsIdx() - 1 + 1),
                StringUtils.repeat(' ', 2)) != 0 || container.getWsVariables()
                .getWsIdx() == 1)) {
            container.getWsVariables().setWsIdx(
                    container.getWsVariables().getWsIdx() + -1);
        }
        // [T-Up#INFO][COADM01C.cbl:128] MOVE statement
        container.getWsVariables()
                .setWsOptionX(
                        container
                                .getCoadm1ai()
                                .getOptioni()
                                .substring(
                                        0,
                                        0 + container.getWsVariables()
                                                .getWsIdx()));
        // [T-Up#INFO][COADM01C.cbl:129] INSPECT statement
        tempStringBuilder1 = new StringBuilder();
        for (char ch : container.getWsVariables().getWsOptionX().toCharArray()) {
            if (ch == " ".charAt(0)) {
                tempStringBuilder1.append("0".charAt(0));
            } else {
                tempStringBuilder1.append(ch);
            }
        }
        container.getWsVariables().setWsOptionX(tempStringBuilder1.toString());
        // [T-Up#INFO][COADM01C.cbl:130] MOVE statement
        container.getWsVariables().setWsOption(
                Integer.parseInt(container.getWsVariables().getWsOptionX()
                        .trim()));
        // [T-Up#INFO][COADM01C.cbl:131] MOVE statement
        container.setOptiono(StringUtils.leftPad(String.valueOf(Math
                .abs(container.getWsVariables().getWsOption())), 2, '0'));
        // [T-Up#INFO][COADM01C.cbl:133] IF statement
        if (!true
                || container.getWsVariables().getWsOption() > container
                        .getCarddemoAdminMenuOptions().getCdemoAdminOptCount()
                || container.getWsVariables().getWsOption() == 0) {
            // [T-Up#INFO][COADM01C.cbl:136] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][COADM01C.cbl:137] MOVE statement
            container.getWsVariables().setWsMessage(
                    "Please enter a valid option number...");
            // [T-Up#INFO][COADM01C.cbl:139] PERFORM statement
            controlManager.run(context, sendMenuScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][COADM01C.cbl:143] IF statement
        if (!(CobStringUtils.compare(container.getWsVariables().getWsErrFlg(),
                ERR_FLG_ON) == 0)) {
            // [T-Up#INFO][COADM01C.cbl:144] IF statement
            if (CobStringUtils
                    .compare(
                            container
                                    .getCarddemoAdminMenuOptions()
                                    .getCdemoAdminOptions()
                                    .getCdemoAdminOpt()
                                    .getCdemoAdminOptPgmname(
                                            container.getWsVariables()
                                                    .getWsOption() - 1)
                                    .substring(0, 5), "DUMMY") != 0) {
                // [T-Up#INFO][COADM01C.cbl:145] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoFromTranid(
                                container.getWsVariables().getWsTranid());
                // [T-Up#INFO][COADM01C.cbl:146] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoFromProgram(
                                container.getWsVariables().getWsPgmname());
                // [T-Up#INFO][COADM01C.cbl:147] MOVE statement
                container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .setCdemoPgmContext(0);
                // [T-Up#INFO][COADM01C.cbl:149] EVALUATE statement
                switch (container
                        .getCarddemoAdminMenuOptions()
                        .getCdemoAdminOptions()
                        .getCdemoAdminOpt()
                        .getCdemoAdminOptPgmname(
                                container.getWsVariables().getWsOption() - 1)) {
                case "COUSR00C": {
                    // [T-Up#INFO][COADM01C.cbl:151] EXEC_CICS statement
                    /*
                                           EXEC CICS
                                               XCTL PROGRAM('COUSR00C')
                                               COMMAREA(CARDDEMO-COMMAREA)
                                           END-EXEC
                     */
                    Cousr00cInputDto cousr00cInputDto = new Cousr00cInputDto();
                    cousr00cInputDto
                            .setDfhcommarea(CarddemoCommareaToCousr00cDfhcommarea.INSTANCE
                                    .toTarget(container.getCarddemoCommarea()));
                    programControl.forward("CU00", cousr00cInputDto);
                    context.setReturnFlag(true);
                    break;
                }
                case "COUSR01C": {
                    // [T-Up#INFO][COADM01C.cbl:156] EXEC_CICS statement
                    /*
                                           EXEC CICS
                                               XCTL PROGRAM('COUSR01C')
                                               COMMAREA(CARDDEMO-COMMAREA)
                                           END-EXEC
                     */
                    Cousr01cInputDto cousr01cInputDto = new Cousr01cInputDto();
                    cousr01cInputDto
                            .setDfhcommarea(CarddemoCommareaToCousr01cDfhcommarea.INSTANCE
                                    .toTarget(container.getCarddemoCommarea()));
                    programControl.forward("CU01", cousr01cInputDto);
                    context.setReturnFlag(true);
                    break;
                }
                case "COUSR02C": {
                    // [T-Up#INFO][COADM01C.cbl:161] EXEC_CICS statement
                    /*
                                           EXEC CICS
                                               XCTL PROGRAM('COUSR02C')
                                               COMMAREA(CARDDEMO-COMMAREA)
                                           END-EXEC
                     */
                    Cousr02cInputDto cousr02cInputDto = new Cousr02cInputDto();
                    cousr02cInputDto
                            .setDfhcommarea(CarddemoCommareaToCousr02cDfhcommarea.INSTANCE
                                    .toTarget(container.getCarddemoCommarea()));
                    programControl.forward("CU02", cousr02cInputDto);
                    context.setReturnFlag(true);
                    break;
                }
                case "COUSR03C": {
                    // [T-Up#INFO][COADM01C.cbl:166] EXEC_CICS statement
                    /*
                                           EXEC CICS
                                               XCTL PROGRAM('COUSR03C')
                                               COMMAREA(CARDDEMO-COMMAREA)
                                           END-EXEC
                     */
                    Cousr03cInputDto cousr03cInputDto = new Cousr03cInputDto();
                    cousr03cInputDto
                            .setDfhcommarea(CarddemoCommareaToCousr03cDfhcommarea.INSTANCE
                                    .toTarget(container.getCarddemoCommarea()));
                    programControl.forward("CU03", cousr03cInputDto);
                    context.setReturnFlag(true);
                    break;
                }
                default: {
                    // [T-Up#INFO][COADM01C.cbl:171] CONTINUE statement
                    break;
                }
                }
            }
            // [T-Up#INFO][COADM01C.cbl:174] MOVE statement
            container.getWsVariables()
                    .setWsMessage(StringUtils.repeat(' ', 80));
            // [T-Up#INFO][COADM01C.cbl:175] MOVE statement
            container.setErrmsgc(container.getDfhbmsca().getDfhgreen());
            // [T-Up#INFO][COADM01C.cbl:176] STRING statement
            tempStringBuilder1 = new StringBuilder();
            tempStringBuilder2 = new StringBuilder(container.getWsVariables()
                    .getWsMessage());
            tempStringBuilder1.append("This option ").append(
                    "is coming soon ...");
            if (tempStringBuilder1.length() <= 80) {
                tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                        tempStringBuilder1.toString());
                container.getWsVariables().setWsMessage(
                        tempStringBuilder2.toString());
            }
            // *                CDEMO-ADMIN-OPT-NAME(WS-OPTION)
            // *                                DELIMITED BY SIZE
            // [T-Up#INFO][COADM01C.cbl:181] PERFORM statement
            controlManager.run(context, sendMenuScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      RETURN-TO-SIGNON-SCREEN
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COADM01C.cbl:187] RETURN-TO-SIGNON-SCREEN Paragraph</p>
     */
    void returnToSignonScreen(OpenFrameContext context) {
    }

    // *     IF CDEMO-TO-PROGRAM = LOW-VALUES OR SPACES
    // *         MOVE 'COSGN00C' TO CDEMO-TO-PROGRAM
    // *     END-IF
    // *     EXEC CICS
    // *         XCTL PROGRAM(CDEMO-TO-PROGRAM)
    // *     END-EXEC.
    // *----------------------------------------------------------------*
    // *                      SEND-MENU-SCREEN
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COADM01C.cbl:199] SEND-MENU-SCREEN Paragraph</p>
     */
    void sendMenuScreen(OpenFrameContext context) {
        Coadm01cVariableContainer container = (Coadm01cVariableContainer) context
                .getProgramVariableContainer("Coadm01c");
        // [T-Up#INFO][COADM01C.cbl:201] PERFORM statement
        controlManager.run(context, populateHeaderInfo);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COADM01C.cbl:202] PERFORM statement
        controlManager.run(context, buildMenuOptions);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COADM01C.cbl:204] MOVE statement
        container.setErrmsgo(container.getWsVariables().getWsMessage());
        // [T-Up#INFO][COADM01C.cbl:206] EXEC_CICS statement
        /*
                       EXEC CICS SEND
                                 MAP('COADM1A')
                                 MAPSET('COADM01')
                                 FROM(COADM1AO)
                                 ERASE
                       END-EXEC
         */
        ((Coadm01cOutputDto) task.getOutputDto())
                .setPageName("COADM01_COADM1A");
        ((Coadm01cOutputDto) task.getOutputDto()).setCoadm1ao(container
                .getCoadm1ao());
    }

    // *----------------------------------------------------------------*
    // *                      RECEIVE-MENU-SCREEN
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COADM01C.cbl:216] RECEIVE-MENU-SCREEN Paragraph</p>
     */
    void receiveMenuScreen(OpenFrameContext context) {
        Coadm01cVariableContainer container = (Coadm01cVariableContainer) context
                .getProgramVariableContainer("Coadm01c");
        // [T-Up#INFO][COADM01C.cbl:218] EXEC_CICS statement
        /*
                       EXEC CICS RECEIVE
                                 MAP('COADM1A')
                                 MAPSET('COADM01')
                                 INTO(COADM1AI)
                                 RESP(WS-RESP-CD)
                                 RESP2(WS-REAS-CD)
                       END-EXEC
         */
        try {
            container.setCoadm1ai(((Coadm01cInputDto) task.getInputDto())
                    .getCoadm1ai());
        } catch (ConditionException e) {
        } finally {
            container.getWsVariables().setWsRespCd(task.getLastResp());
            container.getWsVariables().setWsReasCd(task.getLastResp2());
        }
    }

    // *----------------------------------------------------------------*
    // *                      POPULATE-HEADER-INFO
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COADM01C.cbl:229] POPULATE-HEADER-INFO Paragraph</p>
     */
    void populateHeaderInfo(OpenFrameContext context) {
        Coadm01cVariableContainer container = (Coadm01cVariableContainer) context
                .getProgramVariableContainer("Coadm01c");
        // [T-Up#INFO][COADM01C.cbl:231] MOVE statement
        container.getWsDateTime().getWsCurdateData()
                .set(IntrinsicFunction.functionCurrentDate());
        // [T-Up#INFO][COADM01C.cbl:233] MOVE statement
        container.setTitle01o(container.getCcdaScreenTitle().getCcdaTitle01());
        // [T-Up#INFO][COADM01C.cbl:234] MOVE statement
        container.setTitle02o(container.getCcdaScreenTitle().getCcdaTitle02());
        // [T-Up#INFO][COADM01C.cbl:235] MOVE statement
        container.setTrnnameo(container.getWsVariables().getWsTranid());
        // [T-Up#INFO][COADM01C.cbl:236] MOVE statement
        container.setPgmnameo(container.getWsVariables().getWsPgmname());
        // [T-Up#INFO][COADM01C.cbl:238] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateMonth());
        // [T-Up#INFO][COADM01C.cbl:239] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateDd(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateDay());
        // [T-Up#INFO][COADM01C.cbl:240] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateYy(
                        Integer.parseInt(CobStream
                                .convZonedIntToString(
                                        container.getWsDateTime()
                                                .getWsCurdateData()
                                                .getWsCurdate()
                                                .getWsCurdateYear(), 4)
                                .substring(2, 4).trim()));
        // [T-Up#INFO][COADM01C.cbl:242] MOVE statement
        container.setCurdateo(container.getWsDateTime().getWsCurdateMmDdYy()
                .get());
        // [T-Up#INFO][COADM01C.cbl:244] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeHh(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeHours());
        // [T-Up#INFO][COADM01C.cbl:245] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeMinute());
        // [T-Up#INFO][COADM01C.cbl:246] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeSs(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeSecond());
        // [T-Up#INFO][COADM01C.cbl:248] MOVE statement
        container.setCurtimeo(container.getWsDateTime().getWsCurtimeHhMmSs()
                .get());
    }

    // *----------------------------------------------------------------*
    // *                      BUILD-MENU-OPTIONS
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COADM01C.cbl:253] BUILD-MENU-OPTIONS Paragraph</p>
     */
    void buildMenuOptions(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        Coadm01cVariableContainer container = (Coadm01cVariableContainer) context
                .getProgramVariableContainer("Coadm01c");
        // [T-Up#INFO][COADM01C.cbl:255] PERFORM statement
        container.getWsVariables().setWsIdx(1);
        while (!(container.getWsVariables().getWsIdx() > container
                .getCarddemoAdminMenuOptions().getCdemoAdminOptCount())) {
            // [T-Up#INFO][COADM01C.cbl:258] MOVE statement
            container.getWsVariables().setWsAdminOptTxt(
                    StringUtils.repeat(' ', 40));
            // [T-Up#INFO][COADM01C.cbl:260] STRING statement
            tempStringBuilder1 = new StringBuilder();
            tempStringBuilder2 = new StringBuilder(container.getWsVariables()
                    .getWsAdminOptTxt());
            tempStringBuilder1
                    .append(container
                            .getCarddemoAdminMenuOptions()
                            .getCdemoAdminOptions()
                            .getCdemoAdminOpt()
                            .getCdemoAdminOptNum(
                                    container.getWsVariables().getWsIdx() - 1))
                    .append(". ")
                    .append(container
                            .getCarddemoAdminMenuOptions()
                            .getCdemoAdminOptions()
                            .getCdemoAdminOpt()
                            .getCdemoAdminOptName(
                                    container.getWsVariables().getWsIdx() - 1));
            if (tempStringBuilder1.length() <= 40) {
                tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                        tempStringBuilder1.toString());
                container.getWsVariables().setWsAdminOptTxt(
                        tempStringBuilder2.toString());
            }
            // [T-Up#INFO][COADM01C.cbl:265] EVALUATE statement
            switch (container.getWsVariables().getWsIdx()) {
            case 1: {
                // [T-Up#INFO][COADM01C.cbl:267] MOVE statement
                container.setOptn001o(container.getWsVariables()
                        .getWsAdminOptTxt());
                break;
            }
            case 2: {
                // [T-Up#INFO][COADM01C.cbl:269] MOVE statement
                container.setOptn002o(container.getWsVariables()
                        .getWsAdminOptTxt());
                break;
            }
            case 3: {
                // [T-Up#INFO][COADM01C.cbl:271] MOVE statement
                container.setOptn003o(container.getWsVariables()
                        .getWsAdminOptTxt());
                break;
            }
            case 4: {
                // [T-Up#INFO][COADM01C.cbl:273] MOVE statement
                container.setOptn004o(container.getWsVariables()
                        .getWsAdminOptTxt());
                break;
            }
            case 5: {
                // [T-Up#INFO][COADM01C.cbl:275] MOVE statement
                container.setOptn005o(container.getWsVariables()
                        .getWsAdminOptTxt());
                break;
            }
            case 6: {
                // [T-Up#INFO][COADM01C.cbl:277] MOVE statement
                container.setOptn006o(container.getWsVariables()
                        .getWsAdminOptTxt());
                break;
            }
            case 7: {
                // [T-Up#INFO][COADM01C.cbl:279] MOVE statement
                container.setOptn007o(container.getWsVariables()
                        .getWsAdminOptTxt());
                break;
            }
            case 8: {
                // [T-Up#INFO][COADM01C.cbl:281] MOVE statement
                container.setOptn008o(container.getWsVariables()
                        .getWsAdminOptTxt());
                break;
            }
            case 9: {
                // [T-Up#INFO][COADM01C.cbl:283] MOVE statement
                container.setOptn009o(container.getWsVariables()
                        .getWsAdminOptTxt());
                break;
            }
            case 10: {
                // [T-Up#INFO][COADM01C.cbl:285] MOVE statement
                container.setOptn010o(container.getWsVariables()
                        .getWsAdminOptTxt());
                break;
            }
            default: {
                // [T-Up#INFO][COADM01C.cbl:287] CONTINUE statement
                break;
            }
            }
            container.getWsVariables().setWsIdx(
                    container.getWsVariables().getWsIdx() + 1);
        }
    }

    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:12:32 CDT
    // *
}
