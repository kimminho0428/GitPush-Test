package com.tmax.openframe;

import com.tmax.openframe.online.task.service.ProgramControl;
import com.tmax.openframe.dto.Cosgn00cInputDto;
import com.tmax.openframe.mapper.Cousr00cMapperInterface.*;
import com.tmax.openframe.dto.Coadm01cInputDto;
import com.tmax.openframe.online.task.service.OtherUserTaskInvoker;
import com.tmax.openframe.online.task.domain.dto.TaskDto.*;
import com.tmax.openframe.online.task.domain.dto.Data;
import com.tmax.openframe.dto.Cousr02cInputDto;
import com.tmax.openframe.dto.Cousr03cInputDto;
import com.tmax.openframe.online.task.service.Task;
import com.tmax.openframe.dto.Cousr00cOutputDto;
import com.tmax.openframe.dto.Cousr00cInputDto;
import com.tmax.openframe.online.exception.ConditionException;
import com.tmax.openframe.dao.AwsM2CarddemoUsrsecVsamKsdsDao;
import com.tmax.openframe.dto.AwsM2CarddemoUsrsecVsamKsdsDto;
import com.tmax.openframe.online.daoexecutor.service.ReadPointManager;
import com.tmax.openframe.online.daoexecutor.domain.dto.ReadPoint;
import com.tmax.openframe.online.daoexecutor.service.ReadPointAccessor;
import static com.tmax.openframe.variable.group.Cousr00cCarddemoCommarea.Cousr00cCdemoCu00Info.*;
import static com.tmax.openframe.variable.group.Cousr00cCarddemoCommarea.Cousr00cCdemoGeneralInfo.*;
import static com.tmax.openframe.variable.group.Cousr00cWsVariables.*;
import com.tmax.openframe.runtime.cobol.CobStream;
import com.tmax.openframe.runtime.cobol.CobStringUtils;
import com.tmax.openframe.runtime.cobol.IntrinsicFunction;
import com.tmax.openframe.runtime.context.OpenFrameContext;
import com.tmax.openframe.runtime.flow.ControlManager;
import com.tmax.openframe.variable.Cousr00cVariableContainer;
import com.tmax.openframe.variable.group.Cousr0ai;
import java.math.*;
import java.util.*;
import java.util.function.Consumer;
import lombok.*;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Primary;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:19 KST</p>
 * <hr>
 * <p>Java class for defining logics of COBOL program</p>
 * <ul>
 * <li>The name of COBOL program: COUSR00C.cbl</li>
 * <li>Variable container class: {@link Cousr00cVariableContainer}</li>
 * </ul>
 */
@Service
@RequiredArgsConstructor
@Transactional
@Primary
public class Cousr00c {
    /** 
     * <p>Class that manages an execution flow of the program</p>
     */
    protected final ControlManager controlManager;
    Consumer<OpenFrameContext> mainPara = this::mainPara;
    Consumer<OpenFrameContext> processEnterKey = this::processEnterKey;
    Consumer<OpenFrameContext> processPf7Key = this::processPf7Key;
    Consumer<OpenFrameContext> processPf8Key = this::processPf8Key;
    Consumer<OpenFrameContext> processPageForward = this::processPageForward;
    Consumer<OpenFrameContext> processPageBackward = this::processPageBackward;
    Consumer<OpenFrameContext> populateUserData = this::populateUserData;
    Consumer<OpenFrameContext> initializeUserData = this::initializeUserData;
    Consumer<OpenFrameContext> returnToPrevScreen = this::returnToPrevScreen;
    Consumer<OpenFrameContext> sendUsrlstScreen = this::sendUsrlstScreen;
    Consumer<OpenFrameContext> receiveUsrlstScreen = this::receiveUsrlstScreen;
    Consumer<OpenFrameContext> populateHeaderInfo = this::populateHeaderInfo;
    Consumer<OpenFrameContext> startbrUserSecFile = this::startbrUserSecFile;
    Consumer<OpenFrameContext> readnextUserSecFile = this::readnextUserSecFile;
    Consumer<OpenFrameContext> readprevUserSecFile = this::readprevUserSecFile;
    Consumer<OpenFrameContext> endbrUserSecFile = this::endbrUserSecFile;
    /** 
     * <p>Execution flow of COBOL program that defined in the procedure division</p>
     */
    ArrayList<Consumer> methodList = new ArrayList<>();
    {
        methodList.add(mainPara);
        methodList.add(processEnterKey);
        methodList.add(processPf7Key);
        methodList.add(processPf8Key);
        methodList.add(processPageForward);
        methodList.add(processPageBackward);
        methodList.add(populateUserData);
        methodList.add(initializeUserData);
        methodList.add(returnToPrevScreen);
        methodList.add(sendUsrlstScreen);
        methodList.add(receiveUsrlstScreen);
        methodList.add(populateHeaderInfo);
        methodList.add(startbrUserSecFile);
        methodList.add(readnextUserSecFile);
        methodList.add(readprevUserSecFile);
        methodList.add(endbrUserSecFile);
    }
    private final ReadPointAccessor readPointAccessor;
    private final ReadPointManager readPointManager;
    private final Task task;
    private final TaskInvoker taskInvoker;
    private final ProgramControl programControl;

    /** 
     * <p>Method for executing a program logic that defined in the procedure division</p>
     * @param generalContext context that is necessary for executing program
     * @return return value of program
     */
    public int run(Map<String, Object> generalContext) {
        OpenFrameContext context = new OpenFrameContext(generalContext,
                methodList);
        if (context.getProgramVariableContainer("Cousr00c") == null) {
            Cousr00cVariableContainer container = new Cousr00cVariableContainer();
            context.setProgramVariableContainer("Cousr00c", container);
        }
        controlManager.run(context);
        return context.getReturnValue();
    }

    // ******************************************************************
    // * Program     : COUSR00C.CBL
    // * Application : CardDemo
    // * Type        : CICS COBOL Program
    // * Function    : List all users from USRSEC file
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // *      OCCURS 1 TO 32767 TIMES DEPENDING ON EIBCALEN.
    // *----------------------------------------------------------------*
    // *                       PROCEDURE DIVISION
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR00C.cbl:98] MAIN-PARA Paragraph</p>
     */
    void mainPara(OpenFrameContext context) {
        Cousr00cVariableContainer container = (Cousr00cVariableContainer) context
                .getProgramVariableContainer("Cousr00c");
        // [T-Up#INFO][COUSR00C.cbl:100] SET statement
        container.getWsVariables().setWsErrFlg(ERR_FLG_OFF);
        // [T-Up#INFO][COUSR00C.cbl:101] SET statement
        container.getWsVariables().setWsUserSecEof(USER_SEC_NOT_EOF);
        // [T-Up#INFO][COUSR00C.cbl:102] SET statement
        container.getCarddemoCommarea().getCdemoCu00Info()
                .setCdemoCu00NextPageFlg(NEXT_PAGE_NO);
        // [T-Up#INFO][COUSR00C.cbl:103] SET statement
        container.getWsVariables().setWsSendEraseFlg(SEND_ERASE_YES);
        // [T-Up#INFO][COUSR00C.cbl:105] MOVE statement
        container.getWsVariables().setWsMessage(StringUtils.repeat(' ', 80));
        container.setErrmsgo(StringUtils.repeat(' ', 78));
        // [T-Up#INFO][COUSR00C.cbl:108] MOVE statement
        container.getCousr0ai().setUsridinl(-1);
        // [T-Up#INFO][COUSR00C.cbl:110] IF statement
        if (task.hasCommarea() == 0) {
            // [T-Up#INFO][COUSR00C.cbl:111] MOVE statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoToProgram("COSGN00C");
            // [T-Up#INFO][COUSR00C.cbl:112] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromTranid(
                            container.getWsVariables().getWsTranid());
            // [T-Up#INFO][COUSR00C.cbl:113] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromProgram(
                            container.getWsVariables().getWsPgmname());
            // [T-Up#INFO][COUSR00C.cbl:114] MOVE statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(0);
            // [T-Up#INFO][COUSR00C.cbl:115] EXEC_CICS statement
            /*
                               EXEC CICS
                               XCTL PROGRAM('COSGN00C')
                               COMMAREA(CARDDEMO-COMMAREA)
                               END-EXEC
             */
            Cosgn00cInputDto cosgn00cInputDto = new Cosgn00cInputDto();
            cosgn00cInputDto
                    .setDfhcommarea(Cousr00cCarddemoCommareaToCosgn00cDfhcommarea.INSTANCE
                            .toTarget(container.getCarddemoCommarea()));
            programControl.forward("CC00", cosgn00cInputDto);
            context.setReturnFlag(true);
            // [T-Up#INFO][COUSR00C.cbl:119] PERFORM statement
            controlManager.run(context, returnToPrevScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][COUSR00C.cbl:121] MOVE statement
            container.getCarddemoCommarea().set(
                    StringUtils.overlay(container.getCarddemoCommarea().get(),
                            container.getDfhcommarea().get().substring(0, 194),
                            0, 194));
            // [T-Up#INFO][COUSR00C.cbl:122] IF statement
            if (!(container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .getCdemoPgmContext() == CDEMO_PGM_REENTER)) {
                // [T-Up#INFO][COUSR00C.cbl:123] SET statement
                container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .setCdemoPgmContext(CDEMO_PGM_REENTER);
                // [T-Up#INFO][COUSR00C.cbl:124] MOVE statement
                container.setCousr0ao(Cousr0ai.createDefaultValueInstance()
                        .get());
                // [T-Up#INFO][COUSR00C.cbl:125] PERFORM statement
                controlManager.run(context, processEnterKey);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][COUSR00C.cbl:126] PERFORM statement
                controlManager.run(context, sendUsrlstScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else {
                // [T-Up#INFO][COUSR00C.cbl:128] PERFORM statement
                controlManager.run(context, receiveUsrlstScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][COUSR00C.cbl:129] EVALUATE statement
                if (CobStringUtils.compare(task.getPressedKey(), container
                        .getDfhaid().getDfhenter()) == 0) {
                    // [T-Up#INFO][COUSR00C.cbl:131] PERFORM statement
                    controlManager.run(context, processEnterKey);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                } else if (CobStringUtils.compare(task.getPressedKey(),
                        container.getDfhaid().getDfhpf3()) == 0) {
                    // [T-Up#INFO][COUSR00C.cbl:133] MOVE statement
                    container.getCarddemoCommarea().getCdemoGeneralInfo()
                            .setCdemoToProgram("COADM01C");
                    // [T-Up#INFO][COUSR00C.cbl:134] MOVE statement
                    container
                            .getCarddemoCommarea()
                            .getCdemoGeneralInfo()
                            .setCdemoFromTranid(
                                    container.getWsVariables().getWsTranid());
                    // [T-Up#INFO][COUSR00C.cbl:135] MOVE statement
                    container
                            .getCarddemoCommarea()
                            .getCdemoGeneralInfo()
                            .setCdemoFromProgram(
                                    container.getWsVariables().getWsPgmname());
                    // [T-Up#INFO][COUSR00C.cbl:136] MOVE statement
                    container.getCarddemoCommarea().getCdemoGeneralInfo()
                            .setCdemoPgmContext(0);
                    // [T-Up#INFO][COUSR00C.cbl:137] EXEC_CICS statement
                    /*
                                                   EXEC CICS
                                                   XCTL PROGRAM('COADM01C')
                                                   COMMAREA(CARDDEMO-COMMAREA)
                                                   END-EXEC
                     */
                    Coadm01cInputDto coadm01cInputDto = new Coadm01cInputDto();
                    coadm01cInputDto
                            .setDfhcommarea(Cousr00cCarddemoCommareaToCoadm01cDfhcommarea.INSTANCE
                                    .toTarget(container.getCarddemoCommarea()));
                    programControl.forward("CA00", coadm01cInputDto);
                    context.setReturnFlag(true);
                    // [T-Up#INFO][COUSR00C.cbl:141] PERFORM statement
                    controlManager.run(context, returnToPrevScreen);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                } else if (CobStringUtils.compare(task.getPressedKey(),
                        container.getDfhaid().getDfhpf7()) == 0) {
                    // [T-Up#INFO][COUSR00C.cbl:143] PERFORM statement
                    controlManager.run(context, processPf7Key);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                } else if (CobStringUtils.compare(task.getPressedKey(),
                        container.getDfhaid().getDfhpf8()) == 0) {
                    // [T-Up#INFO][COUSR00C.cbl:145] PERFORM statement
                    controlManager.run(context, processPf8Key);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                } else {
                    // [T-Up#INFO][COUSR00C.cbl:147] MOVE statement
                    container.getWsVariables().setWsErrFlg("Y");
                    // [T-Up#INFO][COUSR00C.cbl:148] MOVE statement
                    container.getCousr0ai().setUsridinl(-1);
                    // [T-Up#INFO][COUSR00C.cbl:149] MOVE statement
                    container.getWsVariables().setWsMessage(
                            container.getCcdaCommonMessages()
                                    .getCcdaMsgInvalidKey());
                    // [T-Up#INFO][COUSR00C.cbl:150] PERFORM statement
                    controlManager.run(context, sendUsrlstScreen);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                }
            }
        }
        // [T-Up#INFO][COUSR00C.cbl:155] EXEC_CICS statement
        /*
                       EXEC CICS RETURN
                                 TRANSID (WS-TRANID)
                                 COMMAREA (CARDDEMO-COMMAREA)
                       END-EXEC
         */
        TaskDto taskDto = TaskDto
                .builder()
                .destination("CU00")
                .data(Data
                        .session(Cousr00cCarddemoCommareaToCousr00cDfhcommarea.INSTANCE
                                .toTarget(container.getCarddemoCommarea())))
                .build();
        taskInvoker.setNextTask(taskDto);
        context.setReturnFlag(true);
    }

    // *----------------------------------------------------------------*
    // *                      PROCESS-ENTER-KEY
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR00C.cbl:163] PROCESS-ENTER-KEY Paragraph</p>
     */
    void processEnterKey(OpenFrameContext context) {
        Cousr00cVariableContainer container = (Cousr00cVariableContainer) context
                .getProgramVariableContainer("Cousr00c");
        // [T-Up#INFO][COUSR00C.cbl:165] EVALUATE statement
        if (CobStringUtils.compare(container.getCousr0ai().getSel0001i(), " ") != 0
                && CobStringUtils.compare(
                        container.getCousr0ai().getSel0001i(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][COUSR00C.cbl:167] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCu00Info()
                    .setCdemoCu00UsrSelFlg(
                            container.getCousr0ai().getSel0001i());
            // [T-Up#INFO][COUSR00C.cbl:168] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCu00Info()
                    .setCdemoCu00UsrSelected(
                            container.getCousr0ai().getUsrid01i());
        } else if (CobStringUtils.compare(
                container.getCousr0ai().getSel0002i(), " ") != 0
                && CobStringUtils.compare(
                        container.getCousr0ai().getSel0002i(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][COUSR00C.cbl:170] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCu00Info()
                    .setCdemoCu00UsrSelFlg(
                            container.getCousr0ai().getSel0002i());
            // [T-Up#INFO][COUSR00C.cbl:171] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCu00Info()
                    .setCdemoCu00UsrSelected(
                            container.getCousr0ai().getUsrid02i());
        } else if (CobStringUtils.compare(
                container.getCousr0ai().getSel0003i(), " ") != 0
                && CobStringUtils.compare(
                        container.getCousr0ai().getSel0003i(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][COUSR00C.cbl:173] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCu00Info()
                    .setCdemoCu00UsrSelFlg(
                            container.getCousr0ai().getSel0003i());
            // [T-Up#INFO][COUSR00C.cbl:174] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCu00Info()
                    .setCdemoCu00UsrSelected(
                            container.getCousr0ai().getUsrid03i());
        } else if (CobStringUtils.compare(
                container.getCousr0ai().getSel0004i(), " ") != 0
                && CobStringUtils.compare(
                        container.getCousr0ai().getSel0004i(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][COUSR00C.cbl:176] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCu00Info()
                    .setCdemoCu00UsrSelFlg(
                            container.getCousr0ai().getSel0004i());
            // [T-Up#INFO][COUSR00C.cbl:177] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCu00Info()
                    .setCdemoCu00UsrSelected(
                            container.getCousr0ai().getUsrid04i());
        } else if (CobStringUtils.compare(
                container.getCousr0ai().getSel0005i(), " ") != 0
                && CobStringUtils.compare(
                        container.getCousr0ai().getSel0005i(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][COUSR00C.cbl:179] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCu00Info()
                    .setCdemoCu00UsrSelFlg(
                            container.getCousr0ai().getSel0005i());
            // [T-Up#INFO][COUSR00C.cbl:180] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCu00Info()
                    .setCdemoCu00UsrSelected(
                            container.getCousr0ai().getUsrid05i());
        } else if (CobStringUtils.compare(
                container.getCousr0ai().getSel0006i(), " ") != 0
                && CobStringUtils.compare(
                        container.getCousr0ai().getSel0006i(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][COUSR00C.cbl:182] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCu00Info()
                    .setCdemoCu00UsrSelFlg(
                            container.getCousr0ai().getSel0006i());
            // [T-Up#INFO][COUSR00C.cbl:183] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCu00Info()
                    .setCdemoCu00UsrSelected(
                            container.getCousr0ai().getUsrid06i());
        } else if (CobStringUtils.compare(
                container.getCousr0ai().getSel0007i(), " ") != 0
                && CobStringUtils.compare(
                        container.getCousr0ai().getSel0007i(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][COUSR00C.cbl:185] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCu00Info()
                    .setCdemoCu00UsrSelFlg(
                            container.getCousr0ai().getSel0007i());
            // [T-Up#INFO][COUSR00C.cbl:186] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCu00Info()
                    .setCdemoCu00UsrSelected(
                            container.getCousr0ai().getUsrid07i());
        } else if (CobStringUtils.compare(
                container.getCousr0ai().getSel0008i(), " ") != 0
                && CobStringUtils.compare(
                        container.getCousr0ai().getSel0008i(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][COUSR00C.cbl:188] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCu00Info()
                    .setCdemoCu00UsrSelFlg(
                            container.getCousr0ai().getSel0008i());
            // [T-Up#INFO][COUSR00C.cbl:189] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCu00Info()
                    .setCdemoCu00UsrSelected(
                            container.getCousr0ai().getUsrid08i());
        } else if (CobStringUtils.compare(
                container.getCousr0ai().getSel0009i(), " ") != 0
                && CobStringUtils.compare(
                        container.getCousr0ai().getSel0009i(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][COUSR00C.cbl:191] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCu00Info()
                    .setCdemoCu00UsrSelFlg(
                            container.getCousr0ai().getSel0009i());
            // [T-Up#INFO][COUSR00C.cbl:192] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCu00Info()
                    .setCdemoCu00UsrSelected(
                            container.getCousr0ai().getUsrid09i());
        } else if (CobStringUtils.compare(
                container.getCousr0ai().getSel0010i(), " ") != 0
                && CobStringUtils.compare(
                        container.getCousr0ai().getSel0010i(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][COUSR00C.cbl:194] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCu00Info()
                    .setCdemoCu00UsrSelFlg(
                            container.getCousr0ai().getSel0010i());
            // [T-Up#INFO][COUSR00C.cbl:195] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCu00Info()
                    .setCdemoCu00UsrSelected(
                            container.getCousr0ai().getUsrid10i());
        } else {
            // [T-Up#INFO][COUSR00C.cbl:197] MOVE statement
            container.getCarddemoCommarea().getCdemoCu00Info()
                    .setCdemoCu00UsrSelFlg(" ");
            // [T-Up#INFO][COUSR00C.cbl:198] MOVE statement
            container.getCarddemoCommarea().getCdemoCu00Info()
                    .setCdemoCu00UsrSelected(StringUtils.repeat(' ', 8));
        }
        // [T-Up#INFO][COUSR00C.cbl:201] IF statement
        if (CobStringUtils.compare(container.getCarddemoCommarea()
                .getCdemoCu00Info().getCdemoCu00UsrSelFlg(), " ") != 0
                && CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoCu00Info().getCdemoCu00UsrSelFlg(),
                        StringUtils.repeat((char) 0x00, 1)) != 0
                && CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoCu00Info().getCdemoCu00UsrSelected(),
                        StringUtils.repeat(' ', 8)) != 0
                && CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoCu00Info().getCdemoCu00UsrSelected(),
                        StringUtils.repeat((char) 0x00, 8)) != 0) {
            // [T-Up#INFO][COUSR00C.cbl:203] EVALUATE statement
            switch (container.getCarddemoCommarea().getCdemoCu00Info()
                    .getCdemoCu00UsrSelFlg()) {
            case "U":
            case "u": {
                // [T-Up#INFO][COUSR00C.cbl:206] MOVE statement
                container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .setCdemoToProgram("COUSR02C");
                // [T-Up#INFO][COUSR00C.cbl:207] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoFromTranid(
                                container.getWsVariables().getWsTranid());
                // [T-Up#INFO][COUSR00C.cbl:208] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoFromProgram(
                                container.getWsVariables().getWsPgmname());
                // [T-Up#INFO][COUSR00C.cbl:209] MOVE statement
                container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .setCdemoPgmContext(0);
                // [T-Up#INFO][COUSR00C.cbl:210] EXEC_CICS statement
                /*
                                            EXEC CICS
                                                XCTL PROGRAM('COUSR02C')
                                                COMMAREA(CARDDEMO-COMMAREA)
                                            END-EXEC
                 */
                Cousr02cInputDto cousr02cInputDto = new Cousr02cInputDto();
                cousr02cInputDto
                        .setDfhcommarea(Cousr00cCarddemoCommareaToCousr02cDfhcommarea.INSTANCE
                                .toTarget(container.getCarddemoCommarea()));
                programControl.forward("CU02", cousr02cInputDto);
                context.setReturnFlag(true);
                break;
            }
            case "D":
            case "d": {
                // [T-Up#INFO][COUSR00C.cbl:216] MOVE statement
                container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .setCdemoToProgram("COUSR03C");
                // [T-Up#INFO][COUSR00C.cbl:217] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoFromTranid(
                                container.getWsVariables().getWsTranid());
                // [T-Up#INFO][COUSR00C.cbl:218] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoFromProgram(
                                container.getWsVariables().getWsPgmname());
                // [T-Up#INFO][COUSR00C.cbl:219] MOVE statement
                container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .setCdemoPgmContext(0);
                // [T-Up#INFO][COUSR00C.cbl:220] EXEC_CICS statement
                /*
                                            EXEC CICS
                                                XCTL PROGRAM('COUSR03C')
                                                COMMAREA(CARDDEMO-COMMAREA)
                                            END-EXEC
                 */
                Cousr03cInputDto cousr03cInputDto = new Cousr03cInputDto();
                cousr03cInputDto
                        .setDfhcommarea(Cousr00cCarddemoCommareaToCousr03cDfhcommarea.INSTANCE
                                .toTarget(container.getCarddemoCommarea()));
                programControl.forward("CU03", cousr03cInputDto);
                context.setReturnFlag(true);
                break;
            }
            default: {
                // [T-Up#INFO][COUSR00C.cbl:225] MOVE statement
                container.getWsVariables().setWsMessage(
                        "Invalid selection. Valid values are U and D");
                // [T-Up#INFO][COUSR00C.cbl:228] MOVE statement
                container.getCousr0ai().setUsridinl(-1);
                break;
            }
            }
        }
        // [T-Up#INFO][COUSR00C.cbl:232] IF statement
        if (CobStringUtils.compare(container.getCousr0ai().getUsridini(),
                StringUtils.repeat(' ', 8)) == 0
                || CobStringUtils.compare(
                        container.getCousr0ai().getUsridini(),
                        StringUtils.repeat((char) 0x00, 8)) == 0) {
            // [T-Up#INFO][COUSR00C.cbl:233] MOVE statement
            container.getSecUserData().setSecUsrId(
                    StringUtils.repeat((char) 0x00, 8));
        } else {
            // [T-Up#INFO][COUSR00C.cbl:235] MOVE statement
            container.getSecUserData().setSecUsrId(
                    container.getCousr0ai().getUsridini());
        }
        // [T-Up#INFO][COUSR00C.cbl:238] MOVE statement
        container.getCousr0ai().setUsridinl(-1);
        // [T-Up#INFO][COUSR00C.cbl:241] MOVE statement
        container.getCarddemoCommarea().getCdemoCu00Info()
                .setCdemoCu00PageNum(0);
        // [T-Up#INFO][COUSR00C.cbl:242] PERFORM statement
        controlManager.run(context, processPageForward);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COUSR00C.cbl:244] IF statement
        if (!(CobStringUtils.compare(container.getWsVariables().getWsErrFlg(),
                ERR_FLG_ON) == 0)) {
            // [T-Up#INFO][COUSR00C.cbl:245] MOVE statement
            container.setUsridino(StringUtils.repeat(' ', 8));
        }
    }

    // *----------------------------------------------------------------*
    // *                      PROCESS-PF7-KEY
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR00C.cbl:251] PROCESS-PF7-KEY Paragraph</p>
     */
    void processPf7Key(OpenFrameContext context) {
        Cousr00cVariableContainer container = (Cousr00cVariableContainer) context
                .getProgramVariableContainer("Cousr00c");
        // [T-Up#INFO][COUSR00C.cbl:253] IF statement
        if (CobStringUtils.compare(container.getCarddemoCommarea()
                .getCdemoCu00Info().getCdemoCu00UsridFirst(),
                StringUtils.repeat(' ', 8)) == 0
                || CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoCu00Info().getCdemoCu00UsridFirst(),
                        StringUtils.repeat((char) 0x00, 8)) == 0) {
            // [T-Up#INFO][COUSR00C.cbl:254] MOVE statement
            container.getSecUserData().setSecUsrId(
                    StringUtils.repeat((char) 0x00, 8));
        } else {
            // [T-Up#INFO][COUSR00C.cbl:256] MOVE statement
            container.getSecUserData().setSecUsrId(
                    container.getCarddemoCommarea().getCdemoCu00Info()
                            .getCdemoCu00UsridFirst());
        }
        // [T-Up#INFO][COUSR00C.cbl:259] SET statement
        container.getCarddemoCommarea().getCdemoCu00Info()
                .setCdemoCu00NextPageFlg(NEXT_PAGE_YES);
        // [T-Up#INFO][COUSR00C.cbl:260] MOVE statement
        container.getCousr0ai().setUsridinl(-1);
        // [T-Up#INFO][COUSR00C.cbl:262] IF statement
        if (container.getCarddemoCommarea().getCdemoCu00Info()
                .getCdemoCu00PageNum() > 1) {
            // [T-Up#INFO][COUSR00C.cbl:263] PERFORM statement
            controlManager.run(context, processPageBackward);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][COUSR00C.cbl:265] MOVE statement
            container.getWsVariables().setWsMessage(
                    "You are already at the top of the page...");
            // [T-Up#INFO][COUSR00C.cbl:267] SET statement
            container.getWsVariables().setWsSendEraseFlg(SEND_ERASE_NO);
            // [T-Up#INFO][COUSR00C.cbl:268] PERFORM statement
            controlManager.run(context, sendUsrlstScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      PROCESS-PF8-KEY
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR00C.cbl:274] PROCESS-PF8-KEY Paragraph</p>
     */
    void processPf8Key(OpenFrameContext context) {
        Cousr00cVariableContainer container = (Cousr00cVariableContainer) context
                .getProgramVariableContainer("Cousr00c");
        // [T-Up#INFO][COUSR00C.cbl:276] IF statement
        if (CobStringUtils.compare(container.getCarddemoCommarea()
                .getCdemoCu00Info().getCdemoCu00UsridLast(),
                StringUtils.repeat(' ', 8)) == 0
                || CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoCu00Info().getCdemoCu00UsridLast(),
                        StringUtils.repeat((char) 0x00, 8)) == 0) {
            // [T-Up#INFO][COUSR00C.cbl:277] MOVE statement
            container.getSecUserData().setSecUsrId(
                    StringUtils.repeat((char) 0xFF, 8));
        } else {
            // [T-Up#INFO][COUSR00C.cbl:279] MOVE statement
            container.getSecUserData().setSecUsrId(
                    container.getCarddemoCommarea().getCdemoCu00Info()
                            .getCdemoCu00UsridLast());
        }
        // [T-Up#INFO][COUSR00C.cbl:282] MOVE statement
        container.getCousr0ai().setUsridinl(-1);
        // [T-Up#INFO][COUSR00C.cbl:284] IF statement
        if (CobStringUtils.compare(container.getCarddemoCommarea()
                .getCdemoCu00Info().getCdemoCu00NextPageFlg(), NEXT_PAGE_YES) == 0) {
            // [T-Up#INFO][COUSR00C.cbl:285] PERFORM statement
            controlManager.run(context, processPageForward);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][COUSR00C.cbl:287] MOVE statement
            container.getWsVariables().setWsMessage(
                    "You are already at the bottom of the page...");
            // [T-Up#INFO][COUSR00C.cbl:289] SET statement
            container.getWsVariables().setWsSendEraseFlg(SEND_ERASE_NO);
            // [T-Up#INFO][COUSR00C.cbl:290] PERFORM statement
            controlManager.run(context, sendUsrlstScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      PROCESS-PAGE-FORWARD
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR00C.cbl:296] PROCESS-PAGE-FORWARD Paragraph</p>
     */
    void processPageForward(OpenFrameContext context) {
        Cousr00cVariableContainer container = (Cousr00cVariableContainer) context
                .getProgramVariableContainer("Cousr00c");
        // [T-Up#INFO][COUSR00C.cbl:298] PERFORM statement
        controlManager.run(context, startbrUserSecFile);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COUSR00C.cbl:300] IF statement
        if (!(CobStringUtils.compare(container.getWsVariables().getWsErrFlg(),
                ERR_FLG_ON) == 0)) {
            // [T-Up#INFO][COUSR00C.cbl:302] IF statement
            if (CobStringUtils.compare(task.getPressedKey(), container
                    .getDfhaid().getDfhenter()) != 0
                    && CobStringUtils.compare(task.getPressedKey(), container
                            .getDfhaid().getDfhpf7()) != 0
                    && CobStringUtils.compare(task.getPressedKey(), container
                            .getDfhaid().getDfhpf3()) != 0) {
                // [T-Up#INFO][COUSR00C.cbl:303] PERFORM statement
                controlManager.run(context, readnextUserSecFile);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
            // [T-Up#INFO][COUSR00C.cbl:306] IF statement
            if (CobStringUtils.compare(container.getWsVariables()
                    .getWsUserSecEof(), USER_SEC_NOT_EOF) == 0
                    && CobStringUtils.compare(container.getWsVariables()
                            .getWsErrFlg(), ERR_FLG_OFF) == 0) {
                // [T-Up#INFO][COUSR00C.cbl:307] PERFORM statement
                container.getWsVariables().setWsIdx(1);
                while (!(container.getWsVariables().getWsIdx() > 10)) {
                    // [T-Up#INFO][COUSR00C.cbl:308] PERFORM statement
                    controlManager.run(context, initializeUserData);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                    container.getWsVariables().setWsIdx(
                            container.getWsVariables().getWsIdx() + 1);
                }
            }
            // [T-Up#INFO][COUSR00C.cbl:312] MOVE statement
            container.getWsVariables().setWsIdx(1);
            // [T-Up#INFO][COUSR00C.cbl:314] PERFORM statement
            while (!(container.getWsVariables().getWsIdx() >= 11
                    || CobStringUtils.compare(container.getWsVariables()
                            .getWsUserSecEof(), USER_SEC_EOF) == 0 || CobStringUtils
                        .compare(container.getWsVariables().getWsErrFlg(),
                                ERR_FLG_ON) == 0)) {
                // [T-Up#INFO][COUSR00C.cbl:315] PERFORM statement
                controlManager.run(context, readnextUserSecFile);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][COUSR00C.cbl:316] IF statement
                if (CobStringUtils.compare(container.getWsVariables()
                        .getWsUserSecEof(), USER_SEC_NOT_EOF) == 0
                        && CobStringUtils.compare(container.getWsVariables()
                                .getWsErrFlg(), ERR_FLG_OFF) == 0) {
                    // [T-Up#INFO][COUSR00C.cbl:317] PERFORM statement
                    controlManager.run(context, populateUserData);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                    // [T-Up#INFO][COUSR00C.cbl:318] COMPUTE statement
                    container.getWsVariables().setWsIdx(
                            container.getWsVariables().getWsIdx() + 1);
                }
            }
            // [T-Up#INFO][COUSR00C.cbl:322] IF statement
            if (CobStringUtils.compare(container.getWsVariables()
                    .getWsUserSecEof(), USER_SEC_NOT_EOF) == 0
                    && CobStringUtils.compare(container.getWsVariables()
                            .getWsErrFlg(), ERR_FLG_OFF) == 0) {
                // [T-Up#INFO][COUSR00C.cbl:323] COMPUTE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoCu00Info()
                        .setCdemoCu00PageNum(
                                container.getCarddemoCommarea()
                                        .getCdemoCu00Info()
                                        .getCdemoCu00PageNum() + 1);
                // [T-Up#INFO][COUSR00C.cbl:325] PERFORM statement
                controlManager.run(context, readnextUserSecFile);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][COUSR00C.cbl:326] IF statement
                if (CobStringUtils.compare(container.getWsVariables()
                        .getWsUserSecEof(), USER_SEC_NOT_EOF) == 0
                        && CobStringUtils.compare(container.getWsVariables()
                                .getWsErrFlg(), ERR_FLG_OFF) == 0) {
                    // [T-Up#INFO][COUSR00C.cbl:327] SET statement
                    container.getCarddemoCommarea().getCdemoCu00Info()
                            .setCdemoCu00NextPageFlg(NEXT_PAGE_YES);
                } else {
                    // [T-Up#INFO][COUSR00C.cbl:329] SET statement
                    container.getCarddemoCommarea().getCdemoCu00Info()
                            .setCdemoCu00NextPageFlg(NEXT_PAGE_NO);
                }
            } else {
                // [T-Up#INFO][COUSR00C.cbl:332] SET statement
                container.getCarddemoCommarea().getCdemoCu00Info()
                        .setCdemoCu00NextPageFlg(NEXT_PAGE_NO);
                // [T-Up#INFO][COUSR00C.cbl:333] IF statement
                if (container.getWsVariables().getWsIdx() > 1) {
                    // [T-Up#INFO][COUSR00C.cbl:334] COMPUTE statement
                    container
                            .getCarddemoCommarea()
                            .getCdemoCu00Info()
                            .setCdemoCu00PageNum(
                                    container.getCarddemoCommarea()
                                            .getCdemoCu00Info()
                                            .getCdemoCu00PageNum() + 1);
                }
            }
            // [T-Up#INFO][COUSR00C.cbl:339] PERFORM statement
            controlManager.run(context, endbrUserSecFile);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COUSR00C.cbl:341] MOVE statement
            container.getCousr0ai().setPagenumi(
                    StringUtils.leftPad(
                            String.valueOf(Math.abs(container
                                    .getCarddemoCommarea().getCdemoCu00Info()
                                    .getCdemoCu00PageNum())), 8, '0'));
            // [T-Up#INFO][COUSR00C.cbl:342] MOVE statement
            container.setUsridino(StringUtils.repeat(' ', 8));
            // [T-Up#INFO][COUSR00C.cbl:343] PERFORM statement
            controlManager.run(context, sendUsrlstScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      PROCESS-PAGE-BACKWARD
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR00C.cbl:350] PROCESS-PAGE-BACKWARD Paragraph</p>
     */
    void processPageBackward(OpenFrameContext context) {
        Cousr00cVariableContainer container = (Cousr00cVariableContainer) context
                .getProgramVariableContainer("Cousr00c");
        // [T-Up#INFO][COUSR00C.cbl:352] PERFORM statement
        controlManager.run(context, startbrUserSecFile);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COUSR00C.cbl:354] IF statement
        if (!(CobStringUtils.compare(container.getWsVariables().getWsErrFlg(),
                ERR_FLG_ON) == 0)) {
            // [T-Up#INFO][COUSR00C.cbl:356] IF statement
            if (CobStringUtils.compare(task.getPressedKey(), container
                    .getDfhaid().getDfhenter()) != 0
                    && CobStringUtils.compare(task.getPressedKey(), container
                            .getDfhaid().getDfhpf8()) != 0) {
                // [T-Up#INFO][COUSR00C.cbl:357] PERFORM statement
                controlManager.run(context, readprevUserSecFile);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
            // [T-Up#INFO][COUSR00C.cbl:360] IF statement
            if (CobStringUtils.compare(container.getWsVariables()
                    .getWsUserSecEof(), USER_SEC_NOT_EOF) == 0
                    && CobStringUtils.compare(container.getWsVariables()
                            .getWsErrFlg(), ERR_FLG_OFF) == 0) {
                // [T-Up#INFO][COUSR00C.cbl:361] PERFORM statement
                container.getWsVariables().setWsIdx(1);
                while (!(container.getWsVariables().getWsIdx() > 10)) {
                    // [T-Up#INFO][COUSR00C.cbl:362] PERFORM statement
                    controlManager.run(context, initializeUserData);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                    container.getWsVariables().setWsIdx(
                            container.getWsVariables().getWsIdx() + 1);
                }
            }
            // [T-Up#INFO][COUSR00C.cbl:366] MOVE statement
            container.getWsVariables().setWsIdx(10);
            // [T-Up#INFO][COUSR00C.cbl:368] PERFORM statement
            while (!(container.getWsVariables().getWsIdx() <= 0
                    || CobStringUtils.compare(container.getWsVariables()
                            .getWsUserSecEof(), USER_SEC_EOF) == 0 || CobStringUtils
                        .compare(container.getWsVariables().getWsErrFlg(),
                                ERR_FLG_ON) == 0)) {
                // [T-Up#INFO][COUSR00C.cbl:369] PERFORM statement
                controlManager.run(context, readprevUserSecFile);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][COUSR00C.cbl:370] IF statement
                if (CobStringUtils.compare(container.getWsVariables()
                        .getWsUserSecEof(), USER_SEC_NOT_EOF) == 0
                        && CobStringUtils.compare(container.getWsVariables()
                                .getWsErrFlg(), ERR_FLG_OFF) == 0) {
                    // [T-Up#INFO][COUSR00C.cbl:371] PERFORM statement
                    controlManager.run(context, populateUserData);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                    // [T-Up#INFO][COUSR00C.cbl:372] COMPUTE statement
                    container.getWsVariables().setWsIdx(
                            container.getWsVariables().getWsIdx() - 1);
                }
            }
            // [T-Up#INFO][COUSR00C.cbl:376] IF statement
            if (CobStringUtils.compare(container.getWsVariables()
                    .getWsUserSecEof(), USER_SEC_NOT_EOF) == 0
                    && CobStringUtils.compare(container.getWsVariables()
                            .getWsErrFlg(), ERR_FLG_OFF) == 0) {
                // [T-Up#INFO][COUSR00C.cbl:377] PERFORM statement
                controlManager.run(context, readprevUserSecFile);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][COUSR00C.cbl:378] IF statement
                if (CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoCu00Info().getCdemoCu00NextPageFlg(),
                        NEXT_PAGE_YES) == 0) {
                    // [T-Up#INFO][COUSR00C.cbl:379] IF statement
                    if (CobStringUtils.compare(container.getWsVariables()
                            .getWsUserSecEof(), USER_SEC_NOT_EOF) == 0
                            && CobStringUtils.compare(container
                                    .getWsVariables().getWsErrFlg(),
                                    ERR_FLG_OFF) == 0
                            && container.getCarddemoCommarea()
                                    .getCdemoCu00Info().getCdemoCu00PageNum() > 1) {
                        // [T-Up#INFO][COUSR00C.cbl:381] SUBTRACT statement
                        container
                                .getCarddemoCommarea()
                                .getCdemoCu00Info()
                                .setCdemoCu00PageNum(
                                        container.getCarddemoCommarea()
                                                .getCdemoCu00Info()
                                                .getCdemoCu00PageNum() - 1);
                    } else {
                        // [T-Up#INFO][COUSR00C.cbl:383] MOVE statement
                        container.getCarddemoCommarea().getCdemoCu00Info()
                                .setCdemoCu00PageNum(1);
                    }
                }
            }
            // [T-Up#INFO][COUSR00C.cbl:388] PERFORM statement
            controlManager.run(context, endbrUserSecFile);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COUSR00C.cbl:390] MOVE statement
            container.getCousr0ai().setPagenumi(
                    StringUtils.leftPad(
                            String.valueOf(Math.abs(container
                                    .getCarddemoCommarea().getCdemoCu00Info()
                                    .getCdemoCu00PageNum())), 8, '0'));
            // [T-Up#INFO][COUSR00C.cbl:391] PERFORM statement
            controlManager.run(context, sendUsrlstScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      POPULATE-USER-DATA
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR00C.cbl:398] POPULATE-USER-DATA Paragraph</p>
     */
    void populateUserData(OpenFrameContext context) {
        Cousr00cVariableContainer container = (Cousr00cVariableContainer) context
                .getProgramVariableContainer("Cousr00c");
        // [T-Up#INFO][COUSR00C.cbl:400] EVALUATE statement
        switch (container.getWsVariables().getWsIdx()) {
        case 1: {
            // [T-Up#INFO][COUSR00C.cbl:402] MOVE statement
            container.getCousr0ai().setUsrid01i(
                    container.getSecUserData().getSecUsrId());
            container
                    .getCarddemoCommarea()
                    .getCdemoCu00Info()
                    .setCdemoCu00UsridFirst(
                            container.getSecUserData().getSecUsrId());
            // [T-Up#INFO][COUSR00C.cbl:404] MOVE statement
            container.getCousr0ai().setFname01i(
                    container.getSecUserData().getSecUsrFname());
            // [T-Up#INFO][COUSR00C.cbl:405] MOVE statement
            container.getCousr0ai().setLname01i(
                    container.getSecUserData().getSecUsrLname());
            // [T-Up#INFO][COUSR00C.cbl:406] MOVE statement
            container.getCousr0ai().setUtype01i(
                    container.getSecUserData().getSecUsrType());
            break;
        }
        case 2: {
            // [T-Up#INFO][COUSR00C.cbl:408] MOVE statement
            container.getCousr0ai().setUsrid02i(
                    container.getSecUserData().getSecUsrId());
            // [T-Up#INFO][COUSR00C.cbl:409] MOVE statement
            container.getCousr0ai().setFname02i(
                    container.getSecUserData().getSecUsrFname());
            // [T-Up#INFO][COUSR00C.cbl:410] MOVE statement
            container.getCousr0ai().setLname02i(
                    container.getSecUserData().getSecUsrLname());
            // [T-Up#INFO][COUSR00C.cbl:411] MOVE statement
            container.getCousr0ai().setUtype02i(
                    container.getSecUserData().getSecUsrType());
            break;
        }
        case 3: {
            // [T-Up#INFO][COUSR00C.cbl:413] MOVE statement
            container.getCousr0ai().setUsrid03i(
                    container.getSecUserData().getSecUsrId());
            // [T-Up#INFO][COUSR00C.cbl:414] MOVE statement
            container.getCousr0ai().setFname03i(
                    container.getSecUserData().getSecUsrFname());
            // [T-Up#INFO][COUSR00C.cbl:415] MOVE statement
            container.getCousr0ai().setLname03i(
                    container.getSecUserData().getSecUsrLname());
            // [T-Up#INFO][COUSR00C.cbl:416] MOVE statement
            container.getCousr0ai().setUtype03i(
                    container.getSecUserData().getSecUsrType());
            break;
        }
        case 4: {
            // [T-Up#INFO][COUSR00C.cbl:418] MOVE statement
            container.getCousr0ai().setUsrid04i(
                    container.getSecUserData().getSecUsrId());
            // [T-Up#INFO][COUSR00C.cbl:419] MOVE statement
            container.getCousr0ai().setFname04i(
                    container.getSecUserData().getSecUsrFname());
            // [T-Up#INFO][COUSR00C.cbl:420] MOVE statement
            container.getCousr0ai().setLname04i(
                    container.getSecUserData().getSecUsrLname());
            // [T-Up#INFO][COUSR00C.cbl:421] MOVE statement
            container.getCousr0ai().setUtype04i(
                    container.getSecUserData().getSecUsrType());
            break;
        }
        case 5: {
            // [T-Up#INFO][COUSR00C.cbl:423] MOVE statement
            container.getCousr0ai().setUsrid05i(
                    container.getSecUserData().getSecUsrId());
            // [T-Up#INFO][COUSR00C.cbl:424] MOVE statement
            container.getCousr0ai().setFname05i(
                    container.getSecUserData().getSecUsrFname());
            // [T-Up#INFO][COUSR00C.cbl:425] MOVE statement
            container.getCousr0ai().setLname05i(
                    container.getSecUserData().getSecUsrLname());
            // [T-Up#INFO][COUSR00C.cbl:426] MOVE statement
            container.getCousr0ai().setUtype05i(
                    container.getSecUserData().getSecUsrType());
            break;
        }
        case 6: {
            // [T-Up#INFO][COUSR00C.cbl:428] MOVE statement
            container.getCousr0ai().setUsrid06i(
                    container.getSecUserData().getSecUsrId());
            // [T-Up#INFO][COUSR00C.cbl:429] MOVE statement
            container.getCousr0ai().setFname06i(
                    container.getSecUserData().getSecUsrFname());
            // [T-Up#INFO][COUSR00C.cbl:430] MOVE statement
            container.getCousr0ai().setLname06i(
                    container.getSecUserData().getSecUsrLname());
            // [T-Up#INFO][COUSR00C.cbl:431] MOVE statement
            container.getCousr0ai().setUtype06i(
                    container.getSecUserData().getSecUsrType());
            break;
        }
        case 7: {
            // [T-Up#INFO][COUSR00C.cbl:433] MOVE statement
            container.getCousr0ai().setUsrid07i(
                    container.getSecUserData().getSecUsrId());
            // [T-Up#INFO][COUSR00C.cbl:434] MOVE statement
            container.getCousr0ai().setFname07i(
                    container.getSecUserData().getSecUsrFname());
            // [T-Up#INFO][COUSR00C.cbl:435] MOVE statement
            container.getCousr0ai().setLname07i(
                    container.getSecUserData().getSecUsrLname());
            // [T-Up#INFO][COUSR00C.cbl:436] MOVE statement
            container.getCousr0ai().setUtype07i(
                    container.getSecUserData().getSecUsrType());
            break;
        }
        case 8: {
            // [T-Up#INFO][COUSR00C.cbl:438] MOVE statement
            container.getCousr0ai().setUsrid08i(
                    container.getSecUserData().getSecUsrId());
            // [T-Up#INFO][COUSR00C.cbl:439] MOVE statement
            container.getCousr0ai().setFname08i(
                    container.getSecUserData().getSecUsrFname());
            // [T-Up#INFO][COUSR00C.cbl:440] MOVE statement
            container.getCousr0ai().setLname08i(
                    container.getSecUserData().getSecUsrLname());
            // [T-Up#INFO][COUSR00C.cbl:441] MOVE statement
            container.getCousr0ai().setUtype08i(
                    container.getSecUserData().getSecUsrType());
            break;
        }
        case 9: {
            // [T-Up#INFO][COUSR00C.cbl:443] MOVE statement
            container.getCousr0ai().setUsrid09i(
                    container.getSecUserData().getSecUsrId());
            // [T-Up#INFO][COUSR00C.cbl:444] MOVE statement
            container.getCousr0ai().setFname09i(
                    container.getSecUserData().getSecUsrFname());
            // [T-Up#INFO][COUSR00C.cbl:445] MOVE statement
            container.getCousr0ai().setLname09i(
                    container.getSecUserData().getSecUsrLname());
            // [T-Up#INFO][COUSR00C.cbl:446] MOVE statement
            container.getCousr0ai().setUtype09i(
                    container.getSecUserData().getSecUsrType());
            break;
        }
        case 10: {
            // [T-Up#INFO][COUSR00C.cbl:448] MOVE statement
            container.getCousr0ai().setUsrid10i(
                    container.getSecUserData().getSecUsrId());
            container
                    .getCarddemoCommarea()
                    .getCdemoCu00Info()
                    .setCdemoCu00UsridLast(
                            container.getSecUserData().getSecUsrId());
            // [T-Up#INFO][COUSR00C.cbl:450] MOVE statement
            container.getCousr0ai().setFname10i(
                    container.getSecUserData().getSecUsrFname());
            // [T-Up#INFO][COUSR00C.cbl:451] MOVE statement
            container.getCousr0ai().setLname10i(
                    container.getSecUserData().getSecUsrLname());
            // [T-Up#INFO][COUSR00C.cbl:452] MOVE statement
            container.getCousr0ai().setUtype10i(
                    container.getSecUserData().getSecUsrType());
            break;
        }
        default: {
            // [T-Up#INFO][COUSR00C.cbl:454] CONTINUE statement
            break;
        }
        }
    }

    // *----------------------------------------------------------------*
    // *                      INITIALIZE-USER-DATA
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR00C.cbl:460] INITIALIZE-USER-DATA Paragraph</p>
     */
    void initializeUserData(OpenFrameContext context) {
        Cousr00cVariableContainer container = (Cousr00cVariableContainer) context
                .getProgramVariableContainer("Cousr00c");
        // [T-Up#INFO][COUSR00C.cbl:462] EVALUATE statement
        switch (container.getWsVariables().getWsIdx()) {
        case 1: {
            // [T-Up#INFO][COUSR00C.cbl:464] MOVE statement
            container.getCousr0ai().setUsrid01i(StringUtils.repeat(' ', 8));
            // [T-Up#INFO][COUSR00C.cbl:465] MOVE statement
            container.getCousr0ai().setFname01i(StringUtils.repeat(' ', 20));
            // [T-Up#INFO][COUSR00C.cbl:466] MOVE statement
            container.getCousr0ai().setLname01i(StringUtils.repeat(' ', 20));
            // [T-Up#INFO][COUSR00C.cbl:467] MOVE statement
            container.getCousr0ai().setUtype01i(" ");
            break;
        }
        case 2: {
            // [T-Up#INFO][COUSR00C.cbl:469] MOVE statement
            container.getCousr0ai().setUsrid02i(StringUtils.repeat(' ', 8));
            // [T-Up#INFO][COUSR00C.cbl:470] MOVE statement
            container.getCousr0ai().setFname02i(StringUtils.repeat(' ', 20));
            // [T-Up#INFO][COUSR00C.cbl:471] MOVE statement
            container.getCousr0ai().setLname02i(StringUtils.repeat(' ', 20));
            // [T-Up#INFO][COUSR00C.cbl:472] MOVE statement
            container.getCousr0ai().setUtype02i(" ");
            break;
        }
        case 3: {
            // [T-Up#INFO][COUSR00C.cbl:474] MOVE statement
            container.getCousr0ai().setUsrid03i(StringUtils.repeat(' ', 8));
            // [T-Up#INFO][COUSR00C.cbl:475] MOVE statement
            container.getCousr0ai().setFname03i(StringUtils.repeat(' ', 20));
            // [T-Up#INFO][COUSR00C.cbl:476] MOVE statement
            container.getCousr0ai().setLname03i(StringUtils.repeat(' ', 20));
            // [T-Up#INFO][COUSR00C.cbl:477] MOVE statement
            container.getCousr0ai().setUtype03i(" ");
            break;
        }
        case 4: {
            // [T-Up#INFO][COUSR00C.cbl:479] MOVE statement
            container.getCousr0ai().setUsrid04i(StringUtils.repeat(' ', 8));
            // [T-Up#INFO][COUSR00C.cbl:480] MOVE statement
            container.getCousr0ai().setFname04i(StringUtils.repeat(' ', 20));
            // [T-Up#INFO][COUSR00C.cbl:481] MOVE statement
            container.getCousr0ai().setLname04i(StringUtils.repeat(' ', 20));
            // [T-Up#INFO][COUSR00C.cbl:482] MOVE statement
            container.getCousr0ai().setUtype04i(" ");
            break;
        }
        case 5: {
            // [T-Up#INFO][COUSR00C.cbl:484] MOVE statement
            container.getCousr0ai().setUsrid05i(StringUtils.repeat(' ', 8));
            // [T-Up#INFO][COUSR00C.cbl:485] MOVE statement
            container.getCousr0ai().setFname05i(StringUtils.repeat(' ', 20));
            // [T-Up#INFO][COUSR00C.cbl:486] MOVE statement
            container.getCousr0ai().setLname05i(StringUtils.repeat(' ', 20));
            // [T-Up#INFO][COUSR00C.cbl:487] MOVE statement
            container.getCousr0ai().setUtype05i(" ");
            break;
        }
        case 6: {
            // [T-Up#INFO][COUSR00C.cbl:489] MOVE statement
            container.getCousr0ai().setUsrid06i(StringUtils.repeat(' ', 8));
            // [T-Up#INFO][COUSR00C.cbl:490] MOVE statement
            container.getCousr0ai().setFname06i(StringUtils.repeat(' ', 20));
            // [T-Up#INFO][COUSR00C.cbl:491] MOVE statement
            container.getCousr0ai().setLname06i(StringUtils.repeat(' ', 20));
            // [T-Up#INFO][COUSR00C.cbl:492] MOVE statement
            container.getCousr0ai().setUtype06i(" ");
            break;
        }
        case 7: {
            // [T-Up#INFO][COUSR00C.cbl:494] MOVE statement
            container.getCousr0ai().setUsrid07i(StringUtils.repeat(' ', 8));
            // [T-Up#INFO][COUSR00C.cbl:495] MOVE statement
            container.getCousr0ai().setFname07i(StringUtils.repeat(' ', 20));
            // [T-Up#INFO][COUSR00C.cbl:496] MOVE statement
            container.getCousr0ai().setLname07i(StringUtils.repeat(' ', 20));
            // [T-Up#INFO][COUSR00C.cbl:497] MOVE statement
            container.getCousr0ai().setUtype07i(" ");
            break;
        }
        case 8: {
            // [T-Up#INFO][COUSR00C.cbl:499] MOVE statement
            container.getCousr0ai().setUsrid08i(StringUtils.repeat(' ', 8));
            // [T-Up#INFO][COUSR00C.cbl:500] MOVE statement
            container.getCousr0ai().setFname08i(StringUtils.repeat(' ', 20));
            // [T-Up#INFO][COUSR00C.cbl:501] MOVE statement
            container.getCousr0ai().setLname08i(StringUtils.repeat(' ', 20));
            // [T-Up#INFO][COUSR00C.cbl:502] MOVE statement
            container.getCousr0ai().setUtype08i(" ");
            break;
        }
        case 9: {
            // [T-Up#INFO][COUSR00C.cbl:504] MOVE statement
            container.getCousr0ai().setUsrid09i(StringUtils.repeat(' ', 8));
            // [T-Up#INFO][COUSR00C.cbl:505] MOVE statement
            container.getCousr0ai().setFname09i(StringUtils.repeat(' ', 20));
            // [T-Up#INFO][COUSR00C.cbl:506] MOVE statement
            container.getCousr0ai().setLname09i(StringUtils.repeat(' ', 20));
            // [T-Up#INFO][COUSR00C.cbl:507] MOVE statement
            container.getCousr0ai().setUtype09i(" ");
            break;
        }
        case 10: {
            // [T-Up#INFO][COUSR00C.cbl:509] MOVE statement
            container.getCousr0ai().setUsrid10i(StringUtils.repeat(' ', 8));
            // [T-Up#INFO][COUSR00C.cbl:510] MOVE statement
            container.getCousr0ai().setFname10i(StringUtils.repeat(' ', 20));
            // [T-Up#INFO][COUSR00C.cbl:511] MOVE statement
            container.getCousr0ai().setLname10i(StringUtils.repeat(' ', 20));
            // [T-Up#INFO][COUSR00C.cbl:512] MOVE statement
            container.getCousr0ai().setUtype10i(" ");
            break;
        }
        default: {
            // [T-Up#INFO][COUSR00C.cbl:514] CONTINUE statement
            break;
        }
        }
    }

    // *----------------------------------------------------------------*
    // *                      RETURN-TO-PREV-SCREEN
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR00C.cbl:520] RETURN-TO-PREV-SCREEN Paragraph</p>
     */
    void returnToPrevScreen(OpenFrameContext context) {
    }

    // *     IF CDEMO-TO-PROGRAM = LOW-VALUES OR SPACES
    // *         MOVE 'COSGN00C' TO CDEMO-TO-PROGRAM
    // *     END-IF
    // *     MOVE WS-TRANID    TO CDEMO-FROM-TRANID
    // *     MOVE WS-PGMNAME   TO CDEMO-FROM-PROGRAM
    // *     MOVE ZEROS        TO CDEMO-PGM-CONTEXT
    // *     EXEC CICS
    // *         XCTL PROGRAM(CDEMO-TO-PROGRAM)
    // *         COMMAREA(CARDDEMO-COMMAREA)
    // *     END-EXEC.
    // *----------------------------------------------------------------*
    // *                      SEND-USRLST-SCREEN
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR00C.cbl:536] SEND-USRLST-SCREEN Paragraph</p>
     */
    void sendUsrlstScreen(OpenFrameContext context) {
        Cousr00cVariableContainer container = (Cousr00cVariableContainer) context
                .getProgramVariableContainer("Cousr00c");
        // [T-Up#INFO][COUSR00C.cbl:538] PERFORM statement
        controlManager.run(context, populateHeaderInfo);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COUSR00C.cbl:540] MOVE statement
        container.setErrmsgo(container.getWsVariables().getWsMessage());
        // [T-Up#INFO][COUSR00C.cbl:542] IF statement
        if (CobStringUtils.compare(container.getWsVariables()
                .getWsSendEraseFlg(), SEND_ERASE_YES) == 0) {
            // [T-Up#INFO][COUSR00C.cbl:543] EXEC_CICS statement
            /*
                               EXEC CICS SEND
                                         MAP('COUSR0A')
                                         MAPSET('COUSR00')
                                         FROM(COUSR0AO)
                                         ERASE
                                         CURSOR
                               END-EXEC
             */
            ((Cousr00cOutputDto) task.getOutputDto())
                    .setPageName("COUSR00_COUSR0A");
            ((Cousr00cOutputDto) task.getOutputDto()).setCousr0ao(container
                    .getCousr0ao());
        } else {
            // [T-Up#INFO][COUSR00C.cbl:551] EXEC_CICS statement
            /*
                               EXEC CICS SEND
                                         MAP('COUSR0A')
                                         MAPSET('COUSR00')
                                         FROM(COUSR0AO)
                                         CURSOR
                               END-EXEC
             */
            ((Cousr00cOutputDto) task.getOutputDto())
                    .setPageName("COUSR00_COUSR0A");
            ((Cousr00cOutputDto) task.getOutputDto()).setCousr0ao(container
                    .getCousr0ao());
        }
    }

    // *                  ERASE
    // *----------------------------------------------------------------*
    // *                      RECEIVE-USRLST-SCREEN
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR00C.cbl:563] RECEIVE-USRLST-SCREEN Paragraph</p>
     */
    void receiveUsrlstScreen(OpenFrameContext context) {
        Cousr00cVariableContainer container = (Cousr00cVariableContainer) context
                .getProgramVariableContainer("Cousr00c");
        // [T-Up#INFO][COUSR00C.cbl:565] EXEC_CICS statement
        /*
                       EXEC CICS RECEIVE
                                 MAP('COUSR0A')
                                 MAPSET('COUSR00')
                                 INTO(COUSR0AI)
                                 RESP(WS-RESP-CD)
                                 RESP2(WS-REAS-CD)
                       END-EXEC
         */
        try {
            container.setCousr0ai(((Cousr00cInputDto) task.getInputDto())
                    .getCousr0ai());
        } catch (ConditionException e) {
        } finally {
            container.getWsVariables().setWsRespCd(task.getLastResp());
            container.getWsVariables().setWsReasCd(task.getLastResp2());
        }
    }

    // *----------------------------------------------------------------*
    // *                      POPULATE-HEADER-INFO
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR00C.cbl:576] POPULATE-HEADER-INFO Paragraph</p>
     */
    void populateHeaderInfo(OpenFrameContext context) {
        Cousr00cVariableContainer container = (Cousr00cVariableContainer) context
                .getProgramVariableContainer("Cousr00c");
        // [T-Up#INFO][COUSR00C.cbl:578] MOVE statement
        container.getWsDateTime().getWsCurdateData()
                .set(IntrinsicFunction.functionCurrentDate());
        // [T-Up#INFO][COUSR00C.cbl:580] MOVE statement
        container.setTitle01o(container.getCcdaScreenTitle().getCcdaTitle01());
        // [T-Up#INFO][COUSR00C.cbl:581] MOVE statement
        container.setTitle02o(container.getCcdaScreenTitle().getCcdaTitle02());
        // [T-Up#INFO][COUSR00C.cbl:582] MOVE statement
        container.setTrnnameo(container.getWsVariables().getWsTranid());
        // [T-Up#INFO][COUSR00C.cbl:583] MOVE statement
        container.setPgmnameo(container.getWsVariables().getWsPgmname());
        // [T-Up#INFO][COUSR00C.cbl:585] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateMonth());
        // [T-Up#INFO][COUSR00C.cbl:586] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateDd(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateDay());
        // [T-Up#INFO][COUSR00C.cbl:587] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateYy(
                        Integer.parseInt(CobStream
                                .convZonedIntToString(
                                        container.getWsDateTime()
                                                .getWsCurdateData()
                                                .getWsCurdate()
                                                .getWsCurdateYear(), 4)
                                .substring(2, 4).trim()));
        // [T-Up#INFO][COUSR00C.cbl:589] MOVE statement
        container.setCurdateo(container.getWsDateTime().getWsCurdateMmDdYy()
                .get());
        // [T-Up#INFO][COUSR00C.cbl:591] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeHh(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeHours());
        // [T-Up#INFO][COUSR00C.cbl:592] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeMinute());
        // [T-Up#INFO][COUSR00C.cbl:593] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeSs(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeSecond());
        // [T-Up#INFO][COUSR00C.cbl:595] MOVE statement
        container.setCurtimeo(container.getWsDateTime().getWsCurtimeHhMmSs()
                .get());
    }

    // *----------------------------------------------------------------*
    // *                      STARTBR-USER-SEC-FILE
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR00C.cbl:600] STARTBR-USER-SEC-FILE Paragraph</p>
     */
    void startbrUserSecFile(OpenFrameContext context) {
        Cousr00cVariableContainer container = (Cousr00cVariableContainer) context
                .getProgramVariableContainer("Cousr00c");
        // [T-Up#INFO][COUSR00C.cbl:602] EXEC_CICS statement
        /*
                       EXEC CICS STARTBR
                            DATASET   (WS-USRSEC-FILE)
                            RIDFLD    (SEC-USR-ID)
                            KEYLENGTH (LENGTH OF SEC-USR-ID)
                            RESP      (WS-RESP-CD)
                            RESP2     (WS-REAS-CD)
                       END-EXEC
         */
        try {
            ReadPoint readPoint = readPointManager
                    .declare(
                            "awsM2CarddemoUsrsecVsamKsdsDao",
                            0,
                            (AwsM2CarddemoUsrsecVsamKsdsDto awsM2CarddemoUsrsecVsamKsdsDto) -> {
                                return awsM2CarddemoUsrsecVsamKsdsDto
                                        .getSecUsrId();
                            });
            AwsM2CarddemoUsrsecVsamKsdsDto awsM2CarddemoUsrsecVsamKsdsDto = readPointAccessor
                    .open(readPoint, container.getSecUserData().getSecUsrId());
            container.getSecUserData().setSecUsrId(
                    awsM2CarddemoUsrsecVsamKsdsDto.getSecUsrId());
        } catch (ConditionException e) {
        } finally {
            container.getWsVariables().setWsRespCd(task.getLastResp());
            container.getWsVariables().setWsReasCd(task.getLastResp2());
        }
        // *         GTEQ
        // [T-Up#INFO][COUSR00C.cbl:611] EVALUATE statement
        if (container.getWsVariables().getWsRespCd() == 0) {
            // [T-Up#INFO][COUSR00C.cbl:613] CONTINUE statement
        } else if (container.getWsVariables().getWsRespCd() == 13) {
            // [T-Up#INFO][COUSR00C.cbl:615] CONTINUE statement
            // [T-Up#INFO][COUSR00C.cbl:616] SET statement
            container.getWsVariables().setWsUserSecEof(USER_SEC_EOF);
            // [T-Up#INFO][COUSR00C.cbl:617] MOVE statement
            container.getWsVariables().setWsMessage(
                    "You are at the top of the page...");
            // [T-Up#INFO][COUSR00C.cbl:619] MOVE statement
            container.getCousr0ai().setUsridinl(-1);
            // [T-Up#INFO][COUSR00C.cbl:620] PERFORM statement
            controlManager.run(context, sendUsrlstScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][COUSR00C.cbl:622] DISPLAY statement
            System.out.print("RESP:");
            System.out.print(container.getWsVariables().getWsRespCd());
            System.out.print("REAS:");
            System.out.println(container.getWsVariables().getWsReasCd());
            // [T-Up#INFO][COUSR00C.cbl:623] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][COUSR00C.cbl:624] MOVE statement
            container.getWsVariables().setWsMessage("Unable to lookup User...");
            // [T-Up#INFO][COUSR00C.cbl:626] MOVE statement
            container.getCousr0ai().setUsridinl(-1);
            // [T-Up#INFO][COUSR00C.cbl:627] PERFORM statement
            controlManager.run(context, sendUsrlstScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      READNEXT-USER-SEC-FILE
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR00C.cbl:633] READNEXT-USER-SEC-FILE Paragraph</p>
     */
    void readnextUserSecFile(OpenFrameContext context) {
        Cousr00cVariableContainer container = (Cousr00cVariableContainer) context
                .getProgramVariableContainer("Cousr00c");
        // [T-Up#INFO][COUSR00C.cbl:635] EXEC_CICS statement
        /*
                       EXEC CICS READNEXT
                            DATASET   (WS-USRSEC-FILE)
                            INTO      (SEC-USER-DATA)
                            LENGTH    (LENGTH OF SEC-USER-DATA)
                            RIDFLD    (SEC-USR-ID)
                            KEYLENGTH (LENGTH OF SEC-USR-ID)
                            RESP      (WS-RESP-CD)
                            RESP2     (WS-REAS-CD)
                       END-EXEC
         */
        try {
            ReadPoint readPoint = readPointManager.find(0);
            AwsM2CarddemoUsrsecVsamKsdsDto awsM2CarddemoUsrsecVsamKsdsDto = readPointAccessor
                    .readNext(readPoint, container.getSecUserData()
                            .getSecUsrId());
            container.getSecUserData().setSecUsrId(
                    awsM2CarddemoUsrsecVsamKsdsDto.getSecUsrId());
            container
                    .setSecUserData(SecUserDataToAwsM2CarddemoUsrsecVsamKsdsDto.INSTANCE
                            .toSource(awsM2CarddemoUsrsecVsamKsdsDto));
        } catch (ConditionException e) {
        } finally {
            container.getWsVariables().setWsRespCd(task.getLastResp());
            container.getWsVariables().setWsReasCd(task.getLastResp2());
        }
        // [T-Up#INFO][COUSR00C.cbl:645] EVALUATE statement
        if (container.getWsVariables().getWsRespCd() == 0) {
            // [T-Up#INFO][COUSR00C.cbl:647] CONTINUE statement
        } else if (container.getWsVariables().getWsRespCd() == 20) {
            // [T-Up#INFO][COUSR00C.cbl:649] CONTINUE statement
            // [T-Up#INFO][COUSR00C.cbl:650] SET statement
            container.getWsVariables().setWsUserSecEof(USER_SEC_EOF);
            // [T-Up#INFO][COUSR00C.cbl:651] MOVE statement
            container.getWsVariables().setWsMessage(
                    "You have reached the bottom of the page...");
            // [T-Up#INFO][COUSR00C.cbl:653] MOVE statement
            container.getCousr0ai().setUsridinl(-1);
            // [T-Up#INFO][COUSR00C.cbl:654] PERFORM statement
            controlManager.run(context, sendUsrlstScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][COUSR00C.cbl:656] DISPLAY statement
            System.out.print("RESP:");
            System.out.print(container.getWsVariables().getWsRespCd());
            System.out.print("REAS:");
            System.out.println(container.getWsVariables().getWsReasCd());
            // [T-Up#INFO][COUSR00C.cbl:657] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][COUSR00C.cbl:658] MOVE statement
            container.getWsVariables().setWsMessage("Unable to lookup User...");
            // [T-Up#INFO][COUSR00C.cbl:660] MOVE statement
            container.getCousr0ai().setUsridinl(-1);
            // [T-Up#INFO][COUSR00C.cbl:661] PERFORM statement
            controlManager.run(context, sendUsrlstScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      READPREV-USER-SEC-FILE
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR00C.cbl:667] READPREV-USER-SEC-FILE Paragraph</p>
     */
    void readprevUserSecFile(OpenFrameContext context) {
        Cousr00cVariableContainer container = (Cousr00cVariableContainer) context
                .getProgramVariableContainer("Cousr00c");
        // [T-Up#INFO][COUSR00C.cbl:669] EXEC_CICS statement
        /*
                       EXEC CICS READPREV
                            DATASET   (WS-USRSEC-FILE)
                            INTO      (SEC-USER-DATA)
                            LENGTH    (LENGTH OF SEC-USER-DATA)
                            RIDFLD    (SEC-USR-ID)
                            KEYLENGTH (LENGTH OF SEC-USR-ID)
                            RESP      (WS-RESP-CD)
                            RESP2     (WS-REAS-CD)
                       END-EXEC
         */
        try {
            ReadPoint readPoint = readPointManager.find(0);
            AwsM2CarddemoUsrsecVsamKsdsDto awsM2CarddemoUsrsecVsamKsdsDto = readPointAccessor
                    .readPrev(readPoint, container.getSecUserData()
                            .getSecUsrId());
            container.getSecUserData().setSecUsrId(
                    awsM2CarddemoUsrsecVsamKsdsDto.getSecUsrId());
            container
                    .setSecUserData(SecUserDataToAwsM2CarddemoUsrsecVsamKsdsDto.INSTANCE
                            .toSource(awsM2CarddemoUsrsecVsamKsdsDto));
        } catch (ConditionException e) {
        } finally {
            container.getWsVariables().setWsRespCd(task.getLastResp());
            container.getWsVariables().setWsReasCd(task.getLastResp2());
        }
        // [T-Up#INFO][COUSR00C.cbl:679] EVALUATE statement
        if (container.getWsVariables().getWsRespCd() == 0) {
            // [T-Up#INFO][COUSR00C.cbl:681] CONTINUE statement
        } else if (container.getWsVariables().getWsRespCd() == 20) {
            // [T-Up#INFO][COUSR00C.cbl:683] CONTINUE statement
            // [T-Up#INFO][COUSR00C.cbl:684] SET statement
            container.getWsVariables().setWsUserSecEof(USER_SEC_EOF);
            // [T-Up#INFO][COUSR00C.cbl:685] MOVE statement
            container.getWsVariables().setWsMessage(
                    "You have reached the top of the page...");
            // [T-Up#INFO][COUSR00C.cbl:687] MOVE statement
            container.getCousr0ai().setUsridinl(-1);
            // [T-Up#INFO][COUSR00C.cbl:688] PERFORM statement
            controlManager.run(context, sendUsrlstScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][COUSR00C.cbl:690] DISPLAY statement
            System.out.print("RESP:");
            System.out.print(container.getWsVariables().getWsRespCd());
            System.out.print("REAS:");
            System.out.println(container.getWsVariables().getWsReasCd());
            // [T-Up#INFO][COUSR00C.cbl:691] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][COUSR00C.cbl:692] MOVE statement
            container.getWsVariables().setWsMessage("Unable to lookup User...");
            // [T-Up#INFO][COUSR00C.cbl:694] MOVE statement
            container.getCousr0ai().setUsridinl(-1);
            // [T-Up#INFO][COUSR00C.cbl:695] PERFORM statement
            controlManager.run(context, sendUsrlstScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      ENDBR-USER-SEC-FILE
    // *----------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][COUSR00C.cbl:701] ENDBR-USER-SEC-FILE Paragraph</p>
     */
    void endbrUserSecFile(OpenFrameContext context) {
        Cousr00cVariableContainer container = (Cousr00cVariableContainer) context
                .getProgramVariableContainer("Cousr00c");
        // [T-Up#INFO][COUSR00C.cbl:703] EXEC_CICS statement
        /*
                       EXEC CICS ENDBR
                            DATASET   (WS-USRSEC-FILE)
                       END-EXEC
         */
        ReadPoint readPoint = readPointManager.find(0);
        readPointAccessor.close(readPoint);
    }

    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:12:34 CDT
    // *
}
