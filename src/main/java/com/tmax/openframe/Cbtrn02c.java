package com.tmax.openframe;

import static com.tmax.openframe.variable.Cbtrn02cVariableContainer.*;
import com.tmax.openframe.file.*;
import com.tmax.openframe.mapper.Cbtrn02cMapperInterface;
import com.tmax.openframe.runtime.cobol.CobStringUtils;
import com.tmax.openframe.runtime.cobol.IntrinsicFunction;
import com.tmax.openframe.runtime.context.OpenFrameContext;
import com.tmax.openframe.runtime.file.FileStatus;
import com.tmax.openframe.runtime.flow.ControlManager;
import com.tmax.openframe.variable.Cbtrn02cVariableContainer;
import com.tmax.openframe.variable.group.Cbtrn02cFdAcctfileRec;
import com.tmax.openframe.variable.group.Cbtrn02cFdRejsRecord;
import com.tmax.openframe.variable.group.Cbtrn02cFdTranCatBalRecord;
import com.tmax.openframe.variable.group.Cbtrn02cFdTranRecord;
import com.tmax.openframe.variable.group.Cbtrn02cFdTranfileRec;
import com.tmax.openframe.variable.group.Cbtrn02cFdXreffileRec;
import com.tmax.openframe.variable.group.TranCatBalRecord;
import java.math.*;
import java.util.*;
import java.util.function.Consumer;
import lombok.*;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Primary;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:10 KST</p>
 * <hr>
 * <p>Java class for defining logics of COBOL program</p>
 * <ul>
 * <li>The name of COBOL program: CBTRN02C.cbl</li>
 * <li>Variable container class: {@link Cbtrn02cVariableContainer}</li>
 * <li>The list of files used in the program</li>
 * <ul>
 * <li>DALYTRAN-FILE: FD class {@code ->} {@link Cbtrn02cFdDalytranFile}, record class {@code -> } {@link Cbtrn02cFdTranRecord}</li>
 * <li>TRANSACT-FILE: FD class {@code ->} {@link Cbtrn02cFdTransactFile}, record class {@code -> } {@link Cbtrn02cFdTranfileRec}</li>
 * <li>XREF-FILE: FD class {@code ->} {@link Cbtrn02cFdXrefFile}, record class {@code -> } {@link Cbtrn02cFdXreffileRec}</li>
 * <li>DALYREJS-FILE: FD class {@code ->} {@link Cbtrn02cFdDalyrejsFile}, record class {@code -> } {@link Cbtrn02cFdRejsRecord}</li>
 * <li>ACCOUNT-FILE: FD class {@code ->} {@link Cbtrn02cFdAccountFile}, record class {@code -> } {@link Cbtrn02cFdAcctfileRec}</li>
 * <li>TCATBAL-FILE: FD class {@code ->} {@link Cbtrn02cFdTcatbalFile}, record class {@code -> } {@link Cbtrn02cFdTranCatBalRecord}</li>
 * </ul>
 * </ul>
 */
@Service
@RequiredArgsConstructor
@Transactional
@Primary
public class Cbtrn02c {
    // *
    /** 
     * <p>Class that manages an execution flow of the program</p>
     */
    protected final ControlManager controlManager;
    Consumer<OpenFrameContext> unnamedSentence = this::unnamedSentence;
    Consumer<OpenFrameContext> _0000DalytranOpen = this::_0000DalytranOpen;
    Consumer<OpenFrameContext> _0100TranfileOpen = this::_0100TranfileOpen;
    Consumer<OpenFrameContext> _0200XreffileOpen = this::_0200XreffileOpen;
    Consumer<OpenFrameContext> _0300DalyrejsOpen = this::_0300DalyrejsOpen;
    Consumer<OpenFrameContext> _0400AcctfileOpen = this::_0400AcctfileOpen;
    Consumer<OpenFrameContext> _0500TcatbalfOpen = this::_0500TcatbalfOpen;
    Consumer<OpenFrameContext> _1000DalytranGetNext = this::_1000DalytranGetNext;
    Consumer<OpenFrameContext> _1500ValidateTran = this::_1500ValidateTran;
    Consumer<OpenFrameContext> _1500ALookupXref = this::_1500ALookupXref;
    Consumer<OpenFrameContext> _1500BLookupAcct = this::_1500BLookupAcct;
    Consumer<OpenFrameContext> _2000PostTransaction = this::_2000PostTransaction;
    Consumer<OpenFrameContext> _2500WriteRejectRec = this::_2500WriteRejectRec;
    Consumer<OpenFrameContext> _2700UpdateTcatbal = this::_2700UpdateTcatbal;
    Consumer<OpenFrameContext> _2700ACreateTcatbalRec = this::_2700ACreateTcatbalRec;
    Consumer<OpenFrameContext> _2700BUpdateTcatbalRec = this::_2700BUpdateTcatbalRec;
    Consumer<OpenFrameContext> _2800UpdateAccountRec = this::_2800UpdateAccountRec;
    Consumer<OpenFrameContext> _2900WriteTransactionFile = this::_2900WriteTransactionFile;
    Consumer<OpenFrameContext> _9000DalytranClose = this::_9000DalytranClose;
    Consumer<OpenFrameContext> _9100TranfileClose = this::_9100TranfileClose;
    Consumer<OpenFrameContext> _9200XreffileClose = this::_9200XreffileClose;
    Consumer<OpenFrameContext> _9300DalyrejsClose = this::_9300DalyrejsClose;
    Consumer<OpenFrameContext> _9400AcctfileClose = this::_9400AcctfileClose;
    Consumer<OpenFrameContext> _9500TcatbalfClose = this::_9500TcatbalfClose;
    Consumer<OpenFrameContext> zGetDb2FormatTimestamp = this::zGetDb2FormatTimestamp;
    Consumer<OpenFrameContext> _9999AbendProgram = this::_9999AbendProgram;
    Consumer<OpenFrameContext> _9910DisplayIoStatus = this::_9910DisplayIoStatus;
    /** 
     * <p>Execution flow of COBOL program that defined in the procedure division</p>
     */
    ArrayList<Consumer> methodList = new ArrayList<>();
    {
        methodList.add(unnamedSentence);
        methodList.add(_0000DalytranOpen);
        methodList.add(_0100TranfileOpen);
        methodList.add(_0200XreffileOpen);
        methodList.add(_0300DalyrejsOpen);
        methodList.add(_0400AcctfileOpen);
        methodList.add(_0500TcatbalfOpen);
        methodList.add(_1000DalytranGetNext);
        methodList.add(_1500ValidateTran);
        methodList.add(_1500ALookupXref);
        methodList.add(_1500BLookupAcct);
        methodList.add(_2000PostTransaction);
        methodList.add(_2500WriteRejectRec);
        methodList.add(_2700UpdateTcatbal);
        methodList.add(_2700ACreateTcatbalRec);
        methodList.add(_2700BUpdateTcatbalRec);
        methodList.add(_2800UpdateAccountRec);
        methodList.add(_2900WriteTransactionFile);
        methodList.add(_9000DalytranClose);
        methodList.add(_9100TranfileClose);
        methodList.add(_9200XreffileClose);
        methodList.add(_9300DalyrejsClose);
        methodList.add(_9400AcctfileClose);
        methodList.add(_9500TcatbalfClose);
        methodList.add(zGetDb2FormatTimestamp);
        methodList.add(_9999AbendProgram);
        methodList.add(_9910DisplayIoStatus);
    }
    @Autowired
    private Cbtrn02cFileOpDalytranFile fdDalytranFile;
    @Autowired
    private Cbtrn02cFileOpTransactFile fdTransactFile;
    @Autowired
    private Cbtrn02cFileOpXrefFile fdXrefFile;
    @Autowired
    private Cbtrn02cFileOpDalyrejsFile fdDalyrejsFile;
    @Autowired
    private Cbtrn02cFileOpAccountFile fdAccountFile;
    @Autowired
    private Cbtrn02cFileOpTcatbalFile fdTcatbalFile;

    /** 
     * <p>Method for executing a program logic that defined in the procedure division</p>
     * @param generalContext context that is necessary for executing program
     * @return return value of program
     */
    public int run(Map<String, Object> generalContext) {
        OpenFrameContext context = new OpenFrameContext(generalContext,
                methodList);
        if (context.getProgramVariableContainer("Cbtrn02c") == null) {
            Cbtrn02cVariableContainer container = new Cbtrn02cVariableContainer();
            context.setProgramVariableContainer("Cbtrn02c", container);
        }
        controlManager.run(context);
        return context.getReturnValue();
    }

    // ******************************************************************
    // * Program     : CBTRN02C.CBL
    // * Application : CardDemo
    // * Type        : BATCH COBOL Program
    // * Function    : Post the records from daily transaction file.
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // *****************************************************************

    void unnamedSentence(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl:217] DISPLAY statement
        System.out.println("START OF EXECUTION OF PROGRAM CBTRN02C");
        // [T-Up#INFO][CBTRN02C.cbl:218] PERFORM statement
        controlManager.run(context, _0000DalytranOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl:219] PERFORM statement
        controlManager.run(context, _0100TranfileOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl:220] PERFORM statement
        controlManager.run(context, _0200XreffileOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl:221] PERFORM statement
        controlManager.run(context, _0300DalyrejsOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl:222] PERFORM statement
        controlManager.run(context, _0400AcctfileOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl:223] PERFORM statement
        controlManager.run(context, _0500TcatbalfOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl:225] PERFORM statement
        while (!(CobStringUtils.compare(container.getEndOfFile(), "Y") == 0)) {
            // [T-Up#INFO][CBTRN02C.cbl:226] IF statement
            if (CobStringUtils.compare(container.getEndOfFile(), "N") == 0) {
                // [T-Up#INFO][CBTRN02C.cbl:227] PERFORM statement
                controlManager.run(context, _1000DalytranGetNext);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][CBTRN02C.cbl:228] IF statement
                if (CobStringUtils.compare(container.getEndOfFile(), "N") == 0) {
                    // [T-Up#INFO][CBTRN02C.cbl:229] ADD statement
                    container.getWsCounters()
                            .setWsTransactionCount(
                                    container.getWsCounters()
                                            .getWsTransactionCount() + 1);
                    // *              DISPLAY DALYTRAN-RECORD
                    // [T-Up#INFO][CBTRN02C.cbl:231] MOVE statement
                    container.getWsValidationTrailer()
                            .setWsValidationFailReason(0);
                    // [T-Up#INFO][CBTRN02C.cbl:232] MOVE statement
                    container.getWsValidationTrailer()
                            .setWsValidationFailReasonDesc(
                                    StringUtils.repeat(' ', 76));
                    // [T-Up#INFO][CBTRN02C.cbl:233] PERFORM statement
                    controlManager.run(context, _1500ValidateTran);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                    // [T-Up#INFO][CBTRN02C.cbl:234] IF statement
                    if (container.getWsValidationTrailer()
                            .getWsValidationFailReason() == 0) {
                        // [T-Up#INFO][CBTRN02C.cbl:235] PERFORM statement
                        controlManager.run(context, _2000PostTransaction);
                        if (controlManager.isTerminate(context)) {
                            return;
                        }
                    } else {
                        // [T-Up#INFO][CBTRN02C.cbl:237] ADD statement
                        container.getWsCounters()
                                .setWsRejectCount(
                                        container.getWsCounters()
                                                .getWsRejectCount() + 1);
                        // [T-Up#INFO][CBTRN02C.cbl:238] PERFORM statement
                        controlManager.run(context, _2500WriteRejectRec);
                        if (controlManager.isTerminate(context)) {
                            return;
                        }
                    }
                }
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl:244] PERFORM statement
        controlManager.run(context, _9000DalytranClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl:245] PERFORM statement
        controlManager.run(context, _9100TranfileClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl:246] PERFORM statement
        controlManager.run(context, _9200XreffileClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl:247] PERFORM statement
        controlManager.run(context, _9300DalyrejsClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl:248] PERFORM statement
        controlManager.run(context, _9400AcctfileClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl:249] PERFORM statement
        controlManager.run(context, _9500TcatbalfClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl:250] DISPLAY statement
        System.out.print("TRANSACTIONS PROCESSED :");
        System.out.println(container.getWsCounters().getWsTransactionCount());
        // [T-Up#INFO][CBTRN02C.cbl:251] DISPLAY statement
        System.out.print("TRANSACTIONS REJECTED  :");
        System.out.println(container.getWsCounters().getWsRejectCount());
        // [T-Up#INFO][CBTRN02C.cbl:252] IF statement
        if (container.getWsCounters().getWsRejectCount() > 0) {
            // [T-Up#INFO][CBTRN02C.cbl:253] MOVE statement
            context.setReturnValue(4);
        }
        // [T-Up#INFO][CBTRN02C.cbl:255] DISPLAY statement
        System.out.println("END OF EXECUTION OF PROGRAM CBTRN02C");
        // [T-Up#INFO][CBTRN02C.cbl:257] GOBACK statement
        context.setReturnFlag(true);
        return;
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:259] 0000-DALYTRAN-OPEN Paragraph</p>
     */
    void _0000DalytranOpen(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl:260] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl:261] OPEN statement
        fdDalytranFile.open(context);
        // [T-Up#INFO][CBTRN02C.cbl:262] IF statement
        if (CobStringUtils.compare(container.getDalytranStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl:263] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:265] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl:267] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl:268] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:270] DISPLAY statement
            System.out.println("ERROR OPENING DALYTRAN");
            // [T-Up#INFO][CBTRN02C.cbl:271] MOVE statement
            Cbtrn02cMapperInterface.Cbtrn02cDalytranStatusToCbtrn02cIoStatus
                    .set(container.getDalytranStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN02C.cbl:272] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl:273] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl:275] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:277] 0100-TRANFILE-OPEN Paragraph</p>
     */
    void _0100TranfileOpen(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl:278] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl:279] OPEN statement
        fdTransactFile.open(context);
        // [T-Up#INFO][CBTRN02C.cbl:280] IF statement
        if (CobStringUtils.compare(container.getTranfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl:281] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:283] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl:285] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl:286] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:288] DISPLAY statement
            System.out.println("ERROR OPENING TRANSACTION FILE");
            // [T-Up#INFO][CBTRN02C.cbl:289] MOVE statement
            Cbtrn02cMapperInterface.Cbtrn02cTranfileStatusToCbtrn02cIoStatus
                    .set(container.getTranfileStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN02C.cbl:290] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl:291] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl:293] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:296] 0200-XREFFILE-OPEN Paragraph</p>
     */
    void _0200XreffileOpen(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl:297] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl:298] OPEN statement
        fdXrefFile.open(context);
        // [T-Up#INFO][CBTRN02C.cbl:299] IF statement
        if (CobStringUtils.compare(container.getXreffileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl:300] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:302] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl:304] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl:305] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:307] DISPLAY statement
            System.out.println("ERROR OPENING CROSS REF FILE");
            // [T-Up#INFO][CBTRN02C.cbl:308] MOVE statement
            Cbtrn02cMapperInterface.Cbtrn02cXreffileStatusToCbtrn02cIoStatus
                    .set(container.getXreffileStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN02C.cbl:309] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl:310] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl:312] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:314] 0300-DALYREJS-OPEN Paragraph</p>
     */
    void _0300DalyrejsOpen(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl:315] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl:316] OPEN statement
        fdDalyrejsFile.open(context);
        // [T-Up#INFO][CBTRN02C.cbl:317] IF statement
        if (CobStringUtils.compare(container.getDalyrejsStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl:318] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:320] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl:322] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl:323] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:325] DISPLAY statement
            System.out.println("ERROR OPENING DALY REJECTS FILE");
            // [T-Up#INFO][CBTRN02C.cbl:326] MOVE statement
            Cbtrn02cMapperInterface.Cbtrn02cDalyrejsStatusToCbtrn02cIoStatus
                    .set(container.getDalyrejsStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN02C.cbl:327] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl:328] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl:330] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:332] 0400-ACCTFILE-OPEN Paragraph</p>
     */
    void _0400AcctfileOpen(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl:333] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl:334] OPEN statement
        fdAccountFile.open(context);
        // [T-Up#INFO][CBTRN02C.cbl:335] IF statement
        if (CobStringUtils.compare(container.getAcctfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl:336] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:338] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl:340] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl:341] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:343] DISPLAY statement
            System.out.println("ERROR OPENING ACCOUNT MASTER FILE");
            // [T-Up#INFO][CBTRN02C.cbl:344] MOVE statement
            Cbtrn02cMapperInterface.Cbtrn02cAcctfileStatusToCbtrn02cIoStatus
                    .set(container.getAcctfileStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN02C.cbl:345] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl:346] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl:348] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:350] 0500-TCATBALF-OPEN Paragraph</p>
     */
    void _0500TcatbalfOpen(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl:351] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl:352] OPEN statement
        fdTcatbalFile.open(context);
        // [T-Up#INFO][CBTRN02C.cbl:353] IF statement
        if (CobStringUtils.compare(container.getTcatbalfStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl:354] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:356] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl:358] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl:359] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:361] DISPLAY statement
            System.out.println("ERROR OPENING TRANSACTION BALANCE FILE");
            // [T-Up#INFO][CBTRN02C.cbl:362] MOVE statement
            Cbtrn02cMapperInterface.Cbtrn02cTcatbalfStatusToCbtrn02cIoStatus
                    .set(container.getTcatbalfStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN02C.cbl:363] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl:364] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl:366] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:368] 1000-DALYTRAN-GET-NEXT Paragraph</p>
     */
    void _1000DalytranGetNext(OpenFrameContext context) {
        Cbtrn02cFdTranRecord tempCbtrn02cFdTranRecord1;
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        tempCbtrn02cFdTranRecord1 = fdDalytranFile.readNext(context);
        if (tempCbtrn02cFdTranRecord1 != null) {
            container.setFdTranRecord(tempCbtrn02cFdTranRecord1);
            Cbtrn02cMapperInterface.Cbtrn02cFdTranRecordToDalytranRecord.set(
                    container.getFdTranRecord(), container.getDalytranRecord());
        }
        // [T-Up#INFO][CBTRN02C.cbl:370] IF statement
        if (CobStringUtils.compare(container.getDalytranStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl:371] MOVE statement
            container.setApplResult(0);
        } else {
            // *        DISPLAY DALYTRAN-RECORD
            // [T-Up#INFO][CBTRN02C.cbl:374] IF statement
            if (CobStringUtils.compare(container.getDalytranStatus().get(),
                    "10") == 0) {
                // [T-Up#INFO][CBTRN02C.cbl:375] MOVE statement
                container.setApplResult(16);
            } else {
                // [T-Up#INFO][CBTRN02C.cbl:377] MOVE statement
                container.setApplResult(12);
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl:380] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl:381] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:383] IF statement
            if (container.getApplResult() == APPL_EOF) {
                // [T-Up#INFO][CBTRN02C.cbl:384] MOVE statement
                container.setEndOfFile("Y");
            } else {
                // [T-Up#INFO][CBTRN02C.cbl:386] DISPLAY statement
                System.out.println("ERROR READING DALYTRAN FILE");
                // [T-Up#INFO][CBTRN02C.cbl:387] MOVE statement
                Cbtrn02cMapperInterface.Cbtrn02cDalytranStatusToCbtrn02cIoStatus
                        .set(container.getDalytranStatus(),
                                container.getIoStatus());
                // [T-Up#INFO][CBTRN02C.cbl:388] PERFORM statement
                controlManager.run(context, _9910DisplayIoStatus);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][CBTRN02C.cbl:389] PERFORM statement
                controlManager.run(context, _9999AbendProgram);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl:392] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:393] 1500-VALIDATE-TRAN Paragraph</p>
     */
    void _1500ValidateTran(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl:394] PERFORM statement
        controlManager.run(context, _1500ALookupXref);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl:395] IF statement
        if (container.getWsValidationTrailer().getWsValidationFailReason() == 0) {
            // [T-Up#INFO][CBTRN02C.cbl:396] PERFORM statement
            controlManager.run(context, _1500BLookupAcct);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:398] CONTINUE statement
        }
        // * ADD MORE VALIDATIONS HERE
        // [T-Up#INFO][CBTRN02C.cbl:401] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:403] 1500-A-LOOKUP-XREF Paragraph</p>
     */
    void _1500ALookupXref(OpenFrameContext context) {
        Cbtrn02cFdXreffileRec tempCbtrn02cFdXreffileRec1;
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // *    DISPLAY 'CARD NUMBER: ' DALYTRAN-CARD-NUM
        // [T-Up#INFO][CBTRN02C.cbl:405] MOVE statement
        container.getFdXreffileRec().setFdXrefCardNum(
                container.getDalytranRecord().getDalytranCardNum());
        tempCbtrn02cFdXreffileRec1 = fdXrefFile.readKey(context, container
                .getFdXreffileRec().getFdXrefCardNum());
        if (tempCbtrn02cFdXreffileRec1 != null) {
            container.setFdXreffileRec(tempCbtrn02cFdXreffileRec1);
            // *           DISPLAY 'ACCOUNT RECORD FOUND'
            // [T-Up#INFO][CBTRN02C.cbl:413] CONTINUE statement
        } else if (fdXrefFile.getFileStatus(context) == FileStatus.INVALID_KEY_READ) {
            // [T-Up#INFO][CBTRN02C.cbl:408] MOVE statement
            container.getWsValidationTrailer().setWsValidationFailReason(100);
            // [T-Up#INFO][CBTRN02C.cbl:409] MOVE statement
            container.getWsValidationTrailer().setWsValidationFailReasonDesc(
                    "INVALID CARD NUMBER FOUND");
        }
        Cbtrn02cMapperInterface.Cbtrn02cFdXreffileRecToCardXrefRecord.set(
                container.getFdXreffileRec(), container.getCardXrefRecord());
        // [T-Up#INFO][CBTRN02C.cbl:415] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:416] 1500-B-LOOKUP-ACCT Paragraph</p>
     */
    void _1500BLookupAcct(OpenFrameContext context) {
        Cbtrn02cFdAcctfileRec tempCbtrn02cFdAcctfileRec1;
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl:417] MOVE statement
        container.getFdAcctfileRec().setFdAcctId(
                container.getCardXrefRecord().getXrefAcctId());
        tempCbtrn02cFdAcctfileRec1 = fdAccountFile.readKey(context, container
                .getFdAcctfileRec().getFdAcctId());
        if (tempCbtrn02cFdAcctfileRec1 != null) {
            container.setFdAcctfileRec(tempCbtrn02cFdAcctfileRec1);
            // *         DISPLAY 'ACCT-CREDIT-LIMIT:' ACCT-CREDIT-LIMIT
            // *         DISPLAY 'TRAN-AMT         :' DALYTRAN-AMT
            // [T-Up#INFO][CBTRN02C.cbl:426] COMPUTE statement
            container.getWsCounters()
                    .setWsTempBal(
                            container
                                    .getAccountRecord()
                                    .getAcctCurrCycCredit()
                                    .subtract(
                                            container.getAccountRecord()
                                                    .getAcctCurrCycDebit())
                                    .add(container.getDalytranRecord()
                                            .getDalytranAmt()));
            // [T-Up#INFO][CBTRN02C.cbl:430] IF statement
            if (container.getAccountRecord().getAcctCreditLimit()
                    .compareTo(container.getWsCounters().getWsTempBal()) >= 0) {
                // [T-Up#INFO][CBTRN02C.cbl:431] CONTINUE statement
            } else {
                // [T-Up#INFO][CBTRN02C.cbl:433] MOVE statement
                container.getWsValidationTrailer().setWsValidationFailReason(
                        102);
                // [T-Up#INFO][CBTRN02C.cbl:434] MOVE statement
                container.getWsValidationTrailer()
                        .setWsValidationFailReasonDesc("OVERLIMIT TRANSACTION");
            }
            // [T-Up#INFO][CBTRN02C.cbl:437] IF statement
            if (CobStringUtils.compare(container.getAccountRecord()
                    .getAcctExpiraionDate(), container.getDalytranRecord()
                    .getDalytranOrigTs().substring(0, 10)) >= 0) {
                // [T-Up#INFO][CBTRN02C.cbl:438] CONTINUE statement
            } else {
                // [T-Up#INFO][CBTRN02C.cbl:440] MOVE statement
                container.getWsValidationTrailer().setWsValidationFailReason(
                        103);
                // [T-Up#INFO][CBTRN02C.cbl:441] MOVE statement
                container.getWsValidationTrailer()
                        .setWsValidationFailReasonDesc(
                                "TRANSACTION RECEIVED AFTER ACCT EXPIRATION");
            }
        } else if (fdAccountFile.getFileStatus(context) == FileStatus.INVALID_KEY_READ) {
            // [T-Up#INFO][CBTRN02C.cbl:420] MOVE statement
            container.getWsValidationTrailer().setWsValidationFailReason(101);
            // [T-Up#INFO][CBTRN02C.cbl:421] MOVE statement
            container.getWsValidationTrailer().setWsValidationFailReasonDesc(
                    "ACCOUNT RECORD NOT FOUND");
        }
        Cbtrn02cMapperInterface.Cbtrn02cFdAcctfileRecToAccountRecord.set(
                container.getFdAcctfileRec(), container.getAccountRecord());
        // [T-Up#INFO][CBTRN02C.cbl:445] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:447] 2000-POST-TRANSACTION Paragraph</p>
     */
    void _2000PostTransaction(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl:448] MOVE statement
        container.getTranRecord().setTranId(
                container.getDalytranRecord().getDalytranId());
        // [T-Up#INFO][CBTRN02C.cbl:449] MOVE statement
        container.getTranRecord().setTranTypeCd(
                container.getDalytranRecord().getDalytranTypeCd());
        // [T-Up#INFO][CBTRN02C.cbl:450] MOVE statement
        container.getTranRecord().setTranCatCd(
                container.getDalytranRecord().getDalytranCatCd());
        // [T-Up#INFO][CBTRN02C.cbl:451] MOVE statement
        container.getTranRecord().setTranSource(
                container.getDalytranRecord().getDalytranSource());
        // [T-Up#INFO][CBTRN02C.cbl:452] MOVE statement
        container.getTranRecord().setTranDesc(
                container.getDalytranRecord().getDalytranDesc());
        // [T-Up#INFO][CBTRN02C.cbl:453] MOVE statement
        container.getTranRecord().setTranAmt(
                container.getDalytranRecord().getDalytranAmt());
        // [T-Up#INFO][CBTRN02C.cbl:454] MOVE statement
        container.getTranRecord().setTranMerchantId(
                container.getDalytranRecord().getDalytranMerchantId());
        // [T-Up#INFO][CBTRN02C.cbl:455] MOVE statement
        container.getTranRecord().setTranMerchantName(
                container.getDalytranRecord().getDalytranMerchantName());
        // [T-Up#INFO][CBTRN02C.cbl:456] MOVE statement
        container.getTranRecord().setTranMerchantCity(
                container.getDalytranRecord().getDalytranMerchantCity());
        // [T-Up#INFO][CBTRN02C.cbl:457] MOVE statement
        container.getTranRecord().setTranMerchantZip(
                container.getDalytranRecord().getDalytranMerchantZip());
        // [T-Up#INFO][CBTRN02C.cbl:458] MOVE statement
        container.getTranRecord().setTranCardNum(
                container.getDalytranRecord().getDalytranCardNum());
        // [T-Up#INFO][CBTRN02C.cbl:459] MOVE statement
        container.getTranRecord().setTranOrigTs(
                container.getDalytranRecord().getDalytranOrigTs());
        // [T-Up#INFO][CBTRN02C.cbl:460] PERFORM statement
        controlManager.run(context, zGetDb2FormatTimestamp);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl:461] MOVE statement
        container.getTranRecord().setTranProcTs(container.getDb2FormatTs());
        // [T-Up#INFO][CBTRN02C.cbl:463] PERFORM statement
        controlManager.run(context, _2700UpdateTcatbal);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl:464] PERFORM statement
        controlManager.run(context, _2800UpdateAccountRec);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl:465] PERFORM statement
        controlManager.run(context, _2900WriteTransactionFile);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl:467] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:469] 2500-WRITE-REJECT-REC Paragraph</p>
     */
    void _2500WriteRejectRec(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl:470] MOVE statement
        container.getRejectRecord().setRejectTranData(
                container.getDalytranRecord().get());
        // [T-Up#INFO][CBTRN02C.cbl:471] MOVE statement
        container.getRejectRecord().setValidationTrailer(
                container.getWsValidationTrailer().get());
        // *     DISPLAY '***' REJECT-RECORD
        // [T-Up#INFO][CBTRN02C.cbl:473] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl:474] WRITE statement
        Cbtrn02cMapperInterface.Cbtrn02cRejectRecordToCbtrn02cFdRejsRecord.set(
                container.getRejectRecord(), container.getFdRejsRecord());
        fdDalyrejsFile.write(context, container.getFdRejsRecord());
        // [T-Up#INFO][CBTRN02C.cbl:475] IF statement
        if (CobStringUtils.compare(container.getDalyrejsStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl:476] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:478] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl:480] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl:481] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:483] DISPLAY statement
            System.out.println("ERROR WRITING TO REJECTS FILE");
            // [T-Up#INFO][CBTRN02C.cbl:484] MOVE statement
            Cbtrn02cMapperInterface.Cbtrn02cDalyrejsStatusToCbtrn02cIoStatus
                    .set(container.getDalyrejsStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN02C.cbl:485] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl:486] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl:488] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:490] 2700-UPDATE-TCATBAL Paragraph</p>
     */
    void _2700UpdateTcatbal(OpenFrameContext context) {
        Cbtrn02cFdTranCatBalRecord tempCbtrn02cFdTranCatBalRecord1;
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // * Update the balances in transaction balance file.
        // [T-Up#INFO][CBTRN02C.cbl:492] MOVE statement
        container
                .getFdTranCatBalRecord()
                .getFdTranCatKey()
                .setFdTrancatAcctId(
                        container.getCardXrefRecord().getXrefAcctId());
        // [T-Up#INFO][CBTRN02C.cbl:493] MOVE statement
        container
                .getFdTranCatBalRecord()
                .getFdTranCatKey()
                .setFdTrancatTypeCd(
                        container.getDalytranRecord().getDalytranTypeCd());
        // [T-Up#INFO][CBTRN02C.cbl:494] MOVE statement
        container
                .getFdTranCatBalRecord()
                .getFdTranCatKey()
                .setFdTrancatCd(
                        container.getDalytranRecord().getDalytranCatCd());
        // [T-Up#INFO][CBTRN02C.cbl:496] MOVE statement
        container.getWsFlags().setWsCreateTrancatRec("N");
        tempCbtrn02cFdTranCatBalRecord1 = fdTcatbalFile.readKey(context,
                container.getFdTranCatBalRecord().getFdTranCatKey());
        if (tempCbtrn02cFdTranCatBalRecord1 != null) {
            container.setFdTranCatBalRecord(tempCbtrn02cFdTranCatBalRecord1);
            Cbtrn02cMapperInterface.Cbtrn02cFdTranCatBalRecordToTranCatBalRecord
                    .set(container.getFdTranCatBalRecord(),
                            container.getTranCatBalRecord());
        } else if (fdTcatbalFile.getFileStatus(context) == FileStatus.INVALID_KEY_READ) {
            // [T-Up#INFO][CBTRN02C.cbl:499] DISPLAY statement
            System.out.print("TCATBAL record not found for key : ");
            System.out.print(container.getFdTranCatBalRecord()
                    .getFdTranCatKey());
            System.out.println(".. Creating.");
            // [T-Up#INFO][CBTRN02C.cbl:501] MOVE statement
            container.getWsFlags().setWsCreateTrancatRec("Y");
        }
        // [T-Up#INFO][CBTRN02C.cbl:504] IF statement
        if (CobStringUtils.compare(container.getTcatbalfStatus().get(), "00") == 0
                || CobStringUtils.compare(container.getTcatbalfStatus().get(),
                        "23") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl:505] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:507] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl:509] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl:510] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:512] DISPLAY statement
            System.out.println("ERROR READING TRANSACTION BALANCE FILE");
            // [T-Up#INFO][CBTRN02C.cbl:513] MOVE statement
            Cbtrn02cMapperInterface.Cbtrn02cTcatbalfStatusToCbtrn02cIoStatus
                    .set(container.getTcatbalfStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN02C.cbl:514] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl:515] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl:518] IF statement
        if (CobStringUtils.compare(container.getWsFlags()
                .getWsCreateTrancatRec(), "Y") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl:519] PERFORM statement
            controlManager.run(context, _2700ACreateTcatbalRec);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:521] PERFORM statement
            controlManager.run(context, _2700BUpdateTcatbalRec);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl:524] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:526] 2700-A-CREATE-TCATBAL-REC Paragraph</p>
     */
    void _2700ACreateTcatbalRec(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl:527] INITIALIZE statement
        container.setTranCatBalRecord(TranCatBalRecord
                .createDefaultValueInstance());
        // [T-Up#INFO][CBTRN02C.cbl:528] MOVE statement
        container
                .getTranCatBalRecord()
                .getTranCatKey()
                .setTrancatAcctId(container.getCardXrefRecord().getXrefAcctId());
        // [T-Up#INFO][CBTRN02C.cbl:529] MOVE statement
        container
                .getTranCatBalRecord()
                .getTranCatKey()
                .setTrancatTypeCd(
                        container.getDalytranRecord().getDalytranTypeCd());
        // [T-Up#INFO][CBTRN02C.cbl:530] MOVE statement
        container.getTranCatBalRecord().getTranCatKey()
                .setTrancatCd(container.getDalytranRecord().getDalytranCatCd());
        // [T-Up#INFO][CBTRN02C.cbl:531] ADD statement
        container.getTranCatBalRecord().setTranCatBal(
                container.getTranCatBalRecord().getTranCatBal()
                        .add(container.getDalytranRecord().getDalytranAmt()));
        // [T-Up#INFO][CBTRN02C.cbl:533] WRITE statement
        Cbtrn02cMapperInterface.TranCatBalRecordToCbtrn02cFdTranCatBalRecord
                .set(container.getTranCatBalRecord(),
                        container.getFdTranCatBalRecord());
        fdTcatbalFile.write(context, container.getFdTranCatBalRecord());
        // [T-Up#INFO][CBTRN02C.cbl:535] IF statement
        if (CobStringUtils.compare(container.getTcatbalfStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl:536] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:538] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl:540] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl:541] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:543] DISPLAY statement
            System.out.println("ERROR WRITING TRANSACTION BALANCE FILE");
            // [T-Up#INFO][CBTRN02C.cbl:544] MOVE statement
            Cbtrn02cMapperInterface.Cbtrn02cTcatbalfStatusToCbtrn02cIoStatus
                    .set(container.getTcatbalfStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN02C.cbl:545] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl:546] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:549] 2700-B-UPDATE-TCATBAL-REC Paragraph</p>
     */
    void _2700BUpdateTcatbalRec(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl:550] ADD statement
        container.getTranCatBalRecord().setTranCatBal(
                container.getTranCatBalRecord().getTranCatBal()
                        .add(container.getDalytranRecord().getDalytranAmt()));
        // [T-Up#INFO][CBTRN02C.cbl:551] REWRITE statement
        Cbtrn02cMapperInterface.TranCatBalRecordToCbtrn02cFdTranCatBalRecord
                .set(container.getTranCatBalRecord(),
                        container.getFdTranCatBalRecord());
        fdTcatbalFile.rewrite(context, container.getFdTranCatBalRecord(),
                container.getFdTranCatBalRecord().getFdTranCatKey());
        // [T-Up#INFO][CBTRN02C.cbl:553] IF statement
        if (CobStringUtils.compare(container.getTcatbalfStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl:554] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:556] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl:558] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl:559] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:561] DISPLAY statement
            System.out.println("ERROR REWRITING TRANSACTION BALANCE FILE");
            // [T-Up#INFO][CBTRN02C.cbl:562] MOVE statement
            Cbtrn02cMapperInterface.Cbtrn02cTcatbalfStatusToCbtrn02cIoStatus
                    .set(container.getTcatbalfStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN02C.cbl:563] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl:564] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:568] 2800-UPDATE-ACCOUNT-REC Paragraph</p>
     */
    void _2800UpdateAccountRec(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // * Update the balances in account record to reflect posted trans.
        // [T-Up#INFO][CBTRN02C.cbl:570] ADD statement
        container.getAccountRecord().setAcctCurrBal(
                container.getAccountRecord().getAcctCurrBal()
                        .add(container.getDalytranRecord().getDalytranAmt()));
        // [T-Up#INFO][CBTRN02C.cbl:571] IF statement
        if (container.getDalytranRecord().getDalytranAmt()
                .compareTo(BigDecimal.valueOf(0)) >= 0) {
            // [T-Up#INFO][CBTRN02C.cbl:572] ADD statement
            container.getAccountRecord()
                    .setAcctCurrCycCredit(
                            container
                                    .getAccountRecord()
                                    .getAcctCurrCycCredit()
                                    .add(container.getDalytranRecord()
                                            .getDalytranAmt()));
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:574] ADD statement
            container.getAccountRecord()
                    .setAcctCurrCycDebit(
                            container
                                    .getAccountRecord()
                                    .getAcctCurrCycDebit()
                                    .add(container.getDalytranRecord()
                                            .getDalytranAmt()));
        }
        // [T-Up#INFO][CBTRN02C.cbl:577] REWRITE statement
        Cbtrn02cMapperInterface.AccountRecordToCbtrn02cFdAcctfileRec.set(
                container.getAccountRecord(), container.getFdAcctfileRec());
        fdAccountFile.rewrite(context, container.getFdAcctfileRec(), container
                .getFdAcctfileRec().getFdAcctId());
        if (fdAccountFile.getFileStatus(context) == FileStatus.INVALID_KEY_CREATE) {
            // [T-Up#INFO][CBTRN02C.cbl:579] MOVE statement
            container.getWsValidationTrailer().setWsValidationFailReason(109);
            // [T-Up#INFO][CBTRN02C.cbl:580] MOVE statement
            container.getWsValidationTrailer().setWsValidationFailReasonDesc(
                    "ACCOUNT RECORD NOT FOUND");
        }
        // [T-Up#INFO][CBTRN02C.cbl:583] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:585] 2900-WRITE-TRANSACTION-FILE Paragraph</p>
     */
    void _2900WriteTransactionFile(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl:586] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl:587] WRITE statement
        Cbtrn02cMapperInterface.TranRecordToCbtrn02cFdTranfileRec.set(
                container.getTranRecord(), container.getFdTranfileRec());
        fdTransactFile.write(context, container.getFdTranfileRec());
        // [T-Up#INFO][CBTRN02C.cbl:589] IF statement
        if (CobStringUtils.compare(container.getTranfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl:590] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:592] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl:594] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl:595] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:597] DISPLAY statement
            System.out.println("ERROR WRITING TO TRANSACTION FILE");
            // [T-Up#INFO][CBTRN02C.cbl:598] MOVE statement
            Cbtrn02cMapperInterface.Cbtrn02cTranfileStatusToCbtrn02cIoStatus
                    .set(container.getTranfileStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN02C.cbl:599] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl:600] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl:602] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:605] 9000-DALYTRAN-CLOSE Paragraph</p>
     */
    void _9000DalytranClose(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl:606] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl:607] CLOSE statement
        fdDalytranFile.close(context);
        // [T-Up#INFO][CBTRN02C.cbl:608] IF statement
        if (CobStringUtils.compare(container.getDalytranStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl:609] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:611] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl:613] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl:614] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:616] DISPLAY statement
            System.out.println("ERROR CLOSING DALYTRAN FILE");
            // [T-Up#INFO][CBTRN02C.cbl:617] MOVE statement
            Cbtrn02cMapperInterface.Cbtrn02cDalytranStatusToCbtrn02cIoStatus
                    .set(container.getDalytranStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN02C.cbl:618] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl:619] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl:621] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:623] 9100-TRANFILE-CLOSE Paragraph</p>
     */
    void _9100TranfileClose(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl:624] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl:625] CLOSE statement
        fdTransactFile.close(context);
        // [T-Up#INFO][CBTRN02C.cbl:626] IF statement
        if (CobStringUtils.compare(container.getTranfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl:627] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:629] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl:631] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl:632] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:634] DISPLAY statement
            System.out.println("ERROR CLOSING TRANSACTION FILE");
            // [T-Up#INFO][CBTRN02C.cbl:635] MOVE statement
            Cbtrn02cMapperInterface.Cbtrn02cTranfileStatusToCbtrn02cIoStatus
                    .set(container.getTranfileStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN02C.cbl:636] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl:637] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl:639] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:642] 9200-XREFFILE-CLOSE Paragraph</p>
     */
    void _9200XreffileClose(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl:643] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl:644] CLOSE statement
        fdXrefFile.close(context);
        // [T-Up#INFO][CBTRN02C.cbl:645] IF statement
        if (CobStringUtils.compare(container.getXreffileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl:646] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:648] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl:650] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl:651] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:653] DISPLAY statement
            System.out.println("ERROR CLOSING CROSS REF FILE");
            // [T-Up#INFO][CBTRN02C.cbl:654] MOVE statement
            Cbtrn02cMapperInterface.Cbtrn02cXreffileStatusToCbtrn02cIoStatus
                    .set(container.getXreffileStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN02C.cbl:655] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl:656] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl:658] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:660] 9300-DALYREJS-CLOSE Paragraph</p>
     */
    void _9300DalyrejsClose(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl:661] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl:662] CLOSE statement
        fdDalyrejsFile.close(context);
        // [T-Up#INFO][CBTRN02C.cbl:663] IF statement
        if (CobStringUtils.compare(container.getDalyrejsStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl:664] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:666] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl:668] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl:669] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:671] DISPLAY statement
            System.out.println("ERROR CLOSING DAILY REJECTS FILE");
            // [T-Up#INFO][CBTRN02C.cbl:672] MOVE statement
            Cbtrn02cMapperInterface.Cbtrn02cXreffileStatusToCbtrn02cIoStatus
                    .set(container.getXreffileStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN02C.cbl:673] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl:674] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl:676] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:678] 9400-ACCTFILE-CLOSE Paragraph</p>
     */
    void _9400AcctfileClose(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl:679] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl:680] CLOSE statement
        fdAccountFile.close(context);
        // [T-Up#INFO][CBTRN02C.cbl:681] IF statement
        if (CobStringUtils.compare(container.getAcctfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl:682] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:684] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl:686] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl:687] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:689] DISPLAY statement
            System.out.println("ERROR CLOSING ACCOUNT FILE");
            // [T-Up#INFO][CBTRN02C.cbl:690] MOVE statement
            Cbtrn02cMapperInterface.Cbtrn02cAcctfileStatusToCbtrn02cIoStatus
                    .set(container.getAcctfileStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN02C.cbl:691] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl:692] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl:694] EXIT statement
    }

    // *---------------------------------------------------------------*

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:697] 9500-TCATBALF-CLOSE Paragraph</p>
     */
    void _9500TcatbalfClose(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl:698] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl:699] CLOSE statement
        fdTcatbalFile.close(context);
        // [T-Up#INFO][CBTRN02C.cbl:700] IF statement
        if (CobStringUtils.compare(container.getTcatbalfStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl:701] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:703] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl:705] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl:706] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:708] DISPLAY statement
            System.out.println("ERROR CLOSING TRANSACTION BALANCE FILE");
            // [T-Up#INFO][CBTRN02C.cbl:709] MOVE statement
            Cbtrn02cMapperInterface.Cbtrn02cTcatbalfStatusToCbtrn02cIoStatus
                    .set(container.getTcatbalfStatus(), container.getIoStatus());
            // [T-Up#INFO][CBTRN02C.cbl:710] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl:711] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl:713] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:715] Z-GET-DB2-FORMAT-TIMESTAMP Paragraph</p>
     */
    void zGetDb2FormatTimestamp(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl:716] MOVE statement
        container.getCobolTs().set(IntrinsicFunction.functionCurrentDate());
        // [T-Up#INFO][CBTRN02C.cbl:717] MOVE statement
        container.setDb2Yyyy(container.getCobolTs().getCobYyyy());
        // [T-Up#INFO][CBTRN02C.cbl:718] MOVE statement
        container.setDb2Mm(container.getCobolTs().getCobMm());
        // [T-Up#INFO][CBTRN02C.cbl:719] MOVE statement
        container.setDb2Dd(container.getCobolTs().getCobDd());
        // [T-Up#INFO][CBTRN02C.cbl:720] MOVE statement
        container.setDb2Hh(container.getCobolTs().getCobHh());
        // [T-Up#INFO][CBTRN02C.cbl:721] MOVE statement
        container.setDb2Min(container.getCobolTs().getCobMin());
        // [T-Up#INFO][CBTRN02C.cbl:722] MOVE statement
        container.setDb2Ss(container.getCobolTs().getCobSs());
        // [T-Up#INFO][CBTRN02C.cbl:723] MOVE statement
        container.setDb2Mil(Integer
                .parseInt(container.getCobolTs().getCobMil()));
        // [T-Up#INFO][CBTRN02C.cbl:724] MOVE statement
        container.setDb2Rest("0000");
        // [T-Up#INFO][CBTRN02C.cbl:725] MOVE statement
        container.setDb2Streep1("-");
        container.setDb2Streep2("-");
        container.setDb2Streep3("-");
        // [T-Up#INFO][CBTRN02C.cbl:726] MOVE statement
        container.setDb2Dot1(".");
        container.setDb2Dot2(".");
        container.setDb2Dot3(".");
        // *    DISPLAY 'DB2-TIMESTAMP = ' DB2-FORMAT-TS
        // [T-Up#INFO][CBTRN02C.cbl:728] EXIT statement
    }

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:730] 9999-ABEND-PROGRAM Paragraph</p>
     */
    void _9999AbendProgram(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl:731] DISPLAY statement
        System.out.println("ABENDING PROGRAM");
        // [T-Up#INFO][CBTRN02C.cbl:732] MOVE statement
        container.setTiming(0);
        // [T-Up#INFO][CBTRN02C.cbl:733] MOVE statement
        container.setAbcode(999);
        // [T-Up#INFO][CBTRN02C.cbl:734] CALL statement
        throw new RuntimeException();
    }

    // *****************************************************************

    /** 
     * <p>[T-Up#INFO][CBTRN02C.cbl:737] 9910-DISPLAY-IO-STATUS Paragraph</p>
     */
    void _9910DisplayIoStatus(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl:738] IF statement
        if (!StringUtils.isNumeric(container.getIoStatus().toString())
                || CobStringUtils.compare(container.getIoStatus().getIoStat1(),
                        "9") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl:740] MOVE statement
            container.getIoStatus04().set(
                    StringUtils.overlay(container.getIoStatus04().get(),
                            container.getIoStatus().getIoStat1(), 0, 1));
            // [T-Up#INFO][CBTRN02C.cbl:741] MOVE statement
            container.setTwoBytesBinary(0);
            // [T-Up#INFO][CBTRN02C.cbl:742] MOVE statement
            container.setTwoBytesRight(container.getIoStatus().getIoStat2());
            // [T-Up#INFO][CBTRN02C.cbl:743] MOVE statement
            container.getIoStatus04().setIoStatus0403(
                    container.getTwoBytesBinary());
            // [T-Up#INFO][CBTRN02C.cbl:744] DISPLAY statement
            System.out.print("FILE STATUS IS: NNNN");
            System.out.println(container.getIoStatus04());
        } else {
            // [T-Up#INFO][CBTRN02C.cbl:746] MOVE statement
            container.getIoStatus04().set("0000");
            // [T-Up#INFO][CBTRN02C.cbl:747] MOVE statement
            container.getIoStatus04().set(
                    StringUtils.overlay(container.getIoStatus04().get(),
                            container.getIoStatus().get(), 2, 4));
            // [T-Up#INFO][CBTRN02C.cbl:748] DISPLAY statement
            System.out.print("FILE STATUS IS: NNNN");
            System.out.println(container.getIoStatus04());
        }
        // [T-Up#INFO][CBTRN02C.cbl:750] EXIT statement
    }

    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:12:32 CDT
    // *
}
