package com.tmax.openframe.variable;

import com.tmax.openframe.runtime.cobol.CobStream;
import com.tmax.openframe.variable.group.*;
import java.math.*;
import java.util.*;
import lombok.*;
import org.apache.commons.lang3.StringUtils;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:11 KST</p>
 * <hr>
 * <p>Class that defines variables that defined in the data division of COBOL program</p>
 */
public class Cbtrn03cVariableContainer {
    // *****************************************************************
    //       *COPY CVTRA05Y.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CVTRA05Y.cpy)
    // *****************************************************************
    // *    Data-structure for TRANsaction record (RECLN = 350)
    // *****************************************************************
    // [T-Up#INFO][CVTRA05Y.cpy:5] TRAN-RECORD (level: 1)
    private @Getter @Setter TranRecord tranRecord = new TranRecord();
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:16:01 CDT
    // *
    // [T-Up#INFO][CBTRN03C.cbl:94] TRANFILE-STATUS (level: 1)
    private @Getter @Setter Cbtrn03cTranfileStatus tranfileStatus = new Cbtrn03cTranfileStatus();
    //       *COPY CVACT03Y.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CVACT03Y.cpy)
    // *****************************************************************
    // *    Data-structure for card xref (RECLN 50)
    // *****************************************************************
    // [T-Up#INFO][CVACT03Y.cpy:5] CARD-XREF-RECORD (level: 1)
    private @Getter @Setter CardXrefRecord cardXrefRecord = new CardXrefRecord();
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:16:00 CDT
    // *
    // [T-Up#INFO][CBTRN03C.cbl:99] CARDXREF-STATUS (level: 1)
    private @Getter @Setter Cbtrn03cCardxrefStatus cardxrefStatus = new Cbtrn03cCardxrefStatus();
    //       *COPY CVTRA03Y.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CVTRA03Y.cpy)
    // *****************************************************************
    // *    Data-structure for transaction type (RECLN = 60)
    // *****************************************************************
    // [T-Up#INFO][CVTRA03Y.cpy:5] TRAN-TYPE-RECORD (level: 1)
    private @Getter @Setter TranTypeRecord tranTypeRecord = new TranTypeRecord();
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:16:00 CDT
    // *
    // [T-Up#INFO][CBTRN03C.cbl:104] TRANTYPE-STATUS (level: 1)
    private @Getter @Setter Cbtrn03cTrantypeStatus trantypeStatus = new Cbtrn03cTrantypeStatus();
    //       *COPY CVTRA04Y.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CVTRA04Y.cpy)
    // *****************************************************************
    // *    Data-structure for transaction category type (RECLN = 60)
    // *****************************************************************
    // [T-Up#INFO][CVTRA04Y.cpy:5] TRAN-CAT-RECORD (level: 1)
    private @Getter @Setter TranCatRecord tranCatRecord = new TranCatRecord();
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:16:01 CDT
    // *
    // [T-Up#INFO][CBTRN03C.cbl:109] TRANCATG-STATUS (level: 1)
    private @Getter @Setter Cbtrn03cTrancatgStatus trancatgStatus = new Cbtrn03cTrancatgStatus();
    //       *COPY CVTRA07Y.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CVTRA07Y.cpy)
    // *****************************************************************
    // *    Reporting data structure for transaction report
    // *****************************************************************
    // [T-Up#INFO][CVTRA07Y.cpy:5] REPORT-NAME-HEADER (level: 1)
    private @Getter @Setter ReportNameHeader reportNameHeader = new ReportNameHeader();
    // [T-Up#INFO][CVTRA07Y.cpy:16] TRANSACTION-DETAIL-REPORT (level: 1)
    private @Getter @Setter Cbtrn03cTransactionDetailReport transactionDetailReport = new Cbtrn03cTransactionDetailReport();
    // [T-Up#INFO][CVTRA07Y.cpy:34] TRANSACTION-HEADER-1 (level: 1)
    private @Getter @Setter Cbtrn03cTransactionHeader1 transactionHeader1 = new Cbtrn03cTransactionHeader1();
    // [T-Up#INFO][CVTRA07Y.cpy:49] TRANSACTION-HEADER-2 (level: 1)
    private @Getter String transactionHeader2 = StringUtils.repeat("-", 133);
    // [T-Up#INFO][CVTRA07Y.cpy:51] REPORT-PAGE-TOTALS (level: 1)
    private @Getter @Setter Cbtrn03cReportPageTotals reportPageTotals = new Cbtrn03cReportPageTotals();
    // [T-Up#INFO][CVTRA07Y.cpy:57] REPORT-ACCOUNT-TOTALS (level: 1)
    private @Getter @Setter Cbtrn03cReportAccountTotals reportAccountTotals = new Cbtrn03cReportAccountTotals();
    // [T-Up#INFO][CVTRA07Y.cpy:63] REPORT-GRAND-TOTALS (level: 1)
    private @Getter @Setter Cbtrn03cReportGrandTotals reportGrandTotals = new Cbtrn03cReportGrandTotals();
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:16:01 CDT
    // *
    // [T-Up#INFO][CBTRN03C.cbl:114] TRANREPT-STATUS (level: 1)
    private @Getter @Setter Cbtrn03cTranreptStatus tranreptStatus = new Cbtrn03cTranreptStatus();
    // [T-Up#INFO][CBTRN03C.cbl:118] DATEPARM-STATUS (level: 1)
    private @Getter @Setter Cbtrn03cDateparmStatus dateparmStatus = new Cbtrn03cDateparmStatus();
    // [T-Up#INFO][CBTRN03C.cbl:122] WS-DATEPARM-RECORD (level: 1)
    private @Getter @Setter Cbtrn03cWsDateparmRecord wsDateparmRecord = new Cbtrn03cWsDateparmRecord();
    // [T-Up#INFO][CBTRN03C.cbl:127] WS-REPORT-VARS (level: 1)
    private @Getter @Setter Cbtrn03cWsReportVars wsReportVars = new Cbtrn03cWsReportVars();
    // [T-Up#INFO][CBTRN03C.cbl:139] IO-STATUS (level: 1)
    private @Getter @Setter Cbtrn03cIoStatus ioStatus = new Cbtrn03cIoStatus();
    // [T-Up#INFO][CBTRN03C.cbl:142] TWO-BYTES-BINARY (level: 1)
    private @Getter @Setter int twoBytesBinary;
    // [T-Up#INFO][CBTRN03C.cbl:146] IO-STATUS-04 (level: 1)
    private @Getter @Setter Cbtrn03cIoStatus04 ioStatus04 = new Cbtrn03cIoStatus04();
    // [T-Up#INFO][CBTRN03C.cbl:150] APPL-RESULT (level: 1)
    private @Getter @Setter int applResult;
    // [T-Up#INFO][CBTRN03C.cbl:151] APPL-AOK (level: 88)
    public static final int APPL_AOK = 0;
    // [T-Up#INFO][CBTRN03C.cbl:152] APPL-EOF (level: 88)
    public static final int APPL_EOF = 16;
    // [T-Up#INFO][CBTRN03C.cbl:154] END-OF-FILE (level: 1)
    private @Getter String endOfFile = "N";
    // [T-Up#INFO][CBTRN03C.cbl:155] ABCODE (level: 1)
    private @Getter @Setter int abcode;
    // [T-Up#INFO][CBTRN03C.cbl:156] TIMING (level: 1)
    private @Getter @Setter int timing;
    // [T-Up#INFO][CBTRN03C.cbl:62] FD-TRANFILE-REC (level: 1)
    private @Getter @Setter Cbtrn03cFdTranfileRec fdTranfileRec = new Cbtrn03cFdTranfileRec();
    // [T-Up#INFO][CBTRN03C.cbl:68] FD-CARDXREF-REC (level: 1)
    private @Getter @Setter Cbtrn03cFdCardxrefRec fdCardxrefRec = new Cbtrn03cFdCardxrefRec();
    // [T-Up#INFO][CBTRN03C.cbl:73] FD-TRANTYPE-REC (level: 1)
    private @Getter @Setter Cbtrn03cFdTrantypeRec fdTrantypeRec = new Cbtrn03cFdTrantypeRec();
    // [T-Up#INFO][CBTRN03C.cbl:78] FD-TRAN-CAT-RECORD (level: 1)
    private @Getter @Setter Cbtrn03cFdTranCatRecord fdTranCatRecord = new Cbtrn03cFdTranCatRecord();
    // [T-Up#INFO][CBTRN03C.cbl:85] FD-REPTFILE-REC (level: 1)
    private @Getter String fdReptfileRec = StringUtils.repeat(' ', 133);
    // [T-Up#INFO][CBTRN03C.cbl:88] FD-DATEPARM-REC (level: 1)
    private @Getter String fdDateparmRec = StringUtils.repeat(' ', 80);

    public void setTransactionHeader2(String source) {
        transactionHeader2 = StringUtils.truncate(
                StringUtils.rightPad(source, 133), 133);
    }

    public Cbtrn03cTwoBytesAlpha getTwoBytesAlpha() {
        return Cbtrn03cTwoBytesAlpha.builder().twoBytesLeft(getTwoBytesLeft())
                .twoBytesRight(getTwoBytesRight()).build();
    }

    public void setTwoBytesAlpha(String source) {
        setTwoBytesLeft(source.substring(0, 1));
        setTwoBytesRight(source.substring(1, 2));
    }

    public void setTwoBytesAlpha(Cbtrn03cTwoBytesAlpha source) {
        setTwoBytesAlpha(source.get());
    }

    public String getTwoBytesLeft() {
        return CobStream.convShortToString((short) getTwoBytesBinary())
                .substring(0, 1);
    }

    public void setTwoBytesLeft(String source) {
        try {
            setTwoBytesBinary(CobStream.convStringToShort(StringUtils.overlay(
                    CobStream.convShortToString((short) getTwoBytesBinary()),
                    source, 0, 1)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            setTwoBytesBinary(0);
        }
    }

    public String getTwoBytesRight() {
        return CobStream.convShortToString((short) getTwoBytesBinary())
                .substring(1, 2);
    }

    public void setTwoBytesRight(String source) {
        try {
            setTwoBytesBinary(CobStream.convStringToShort(StringUtils.overlay(
                    CobStream.convShortToString((short) getTwoBytesBinary()),
                    source, 1, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            setTwoBytesBinary(0);
        }
    }

    public void setEndOfFile(String source) {
        endOfFile = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setFdReptfileRec(String source) {
        fdReptfileRec = StringUtils.truncate(StringUtils.rightPad(source, 133),
                133);
    }

    public void setFdDateparmRec(String source) {
        fdDateparmRec = StringUtils.truncate(StringUtils.rightPad(source, 80),
                80);
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class Cbtrn03cTwoBytesAlpha {
        // [T-Up#INFO][CBTRN03C.cbl:144] TWO-BYTES-LEFT (level: 5)
        private @Getter String twoBytesLeft = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][CBTRN03C.cbl:145] TWO-BYTES-RIGHT (level: 5)
        private @Getter String twoBytesRight = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(twoBytesLeft);
            sb.append(twoBytesRight);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getTwoBytesLeft());
            sb.append(getTwoBytesRight());
            return sb.toString();
        }
    }
}
