package com.tmax.openframe.variable.group;

import com.tmax.openframe.runtime.cobol.CobStream;
import com.tmax.openframe.runtime.cobol.PictureFormatter;
import java.math.*;
import java.util.*;
import lombok.*;
import org.apache.commons.lang3.StringUtils;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:11 KST</p>
 * <hr>
 * <p>Class that defines variables for COBOL group item FD-TRAN-CAT-RECORD</p>
 */
public @AllArgsConstructor @NoArgsConstructor class Cbtrn03cFdTranCatRecord {
    // [T-Up#INFO][CBTRN03C.cbl:79] FD-TRAN-CAT-KEY (level: 5)
    private @Getter @Setter Cbtrn03cFdTranCatKey fdTranCatKey = new Cbtrn03cFdTranCatKey();
    // [T-Up#INFO][CBTRN03C.cbl:82] FD-TRAN-CAT-DATA (level: 5)
    private @Getter String fdTranCatData = StringUtils.repeat(' ', 54);

    public void set(String source) {
        source = StringUtils.truncate(StringUtils.rightPad(source, 60), 60);
        getFdTranCatKey().set(source.substring(0, 6));
        setFdTranCatData(source.substring(6, 60));
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getFdTranCatKey().toString());
        sb.append(getFdTranCatData());
        return sb.toString();
    }

    public void setFdTranCatData(String source) {
        fdTranCatData = StringUtils.truncate(StringUtils.rightPad(source, 54),
                54);
    }

    public static @AllArgsConstructor @NoArgsConstructor class Cbtrn03cFdTranCatKey {
        // [T-Up#INFO][CBTRN03C.cbl:80] FD-TRAN-TYPE-CD (level: 10)
        private @Getter String fdTranTypeCd = StringUtils.repeat(' ', 2);
        // [T-Up#INFO][CBTRN03C.cbl:81] FD-TRAN-CAT-CD (level: 10)
        private @Getter @Setter int fdTranCatCd;

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 6), 6);
            setFdTranTypeCd(source.substring(0, 2));
            try {
                setFdTranCatCd(CobStream.convZonedStringToInt(
                        source.substring(2, 6), 4));
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                setFdTranCatCd(0);
            }
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(getFdTranTypeCd());
            sb.append(CobStream.convZonedIntToString(getFdTranCatCd(), 4));
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getFdTranTypeCd());
            sb.append(PictureFormatter.intFormatWithoutSign(
                    (long) getFdTranCatCd(), "0000"));
            return sb.toString();
        }

        public void setFdTranTypeCd(String source) {
            fdTranTypeCd = StringUtils.truncate(
                    StringUtils.rightPad(source, 2), 2);
        }
    }
}
