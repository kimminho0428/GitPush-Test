package com.tmax.openframe.variable.group;

import com.tmax.openframe.runtime.cobol.CobStream;
import com.tmax.openframe.runtime.cobol.PictureFormatter;
import java.math.*;
import java.util.*;
import java.util.stream.*;
import lombok.*;
import org.apache.commons.lang3.StringUtils;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:16 KST</p>
 * <hr>
 * <p>Class that defines variables for COBOL group item WS-MISC-STORAGE</p>
 */
public @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CocrdslcWsMiscStorage {
    // ******************************************************************
    // * General CICS related
    // ******************************************************************
    // [T-Up#INFO][COCRDSLC.cbl:40] WS-CICS-PROCESSNG-VARS (level: 5)
    private @Getter @Setter @Builder.Default CocrdslcWsCicsProcessngVars wsCicsProcessngVars = new CocrdslcWsCicsProcessngVars();
    // ******************************************************************
    // *      Input edits
    // ******************************************************************
    // [T-Up#INFO][COCRDSLC.cbl:51] WS-INPUT-FLAG (level: 5)
    private @Getter @Builder.Default String wsInputFlag = StringUtils.repeat(
            ' ', 1);
    // [T-Up#INFO][COCRDSLC.cbl:52] INPUT-OK (level: 88)
    public static final String INPUT_OK = "0";
    // [T-Up#INFO][COCRDSLC.cbl:53] INPUT-ERROR (level: 88)
    public static final String INPUT_ERROR = "1";
    // [T-Up#INFO][COCRDSLC.cbl:54] INPUT-PENDING (level: 88)
    public static final String INPUT_PENDING = StringUtils.repeat((char) 0x00,
            1);
    // [T-Up#INFO][COCRDSLC.cbl:55] WS-EDIT-ACCT-FLAG (level: 5)
    private @Getter @Builder.Default String wsEditAcctFlag = StringUtils
            .repeat(' ', 1);
    // [T-Up#INFO][COCRDSLC.cbl:56] FLG-ACCTFILTER-NOT-OK (level: 88)
    public static final String FLG_ACCTFILTER_NOT_OK = "0";
    // [T-Up#INFO][COCRDSLC.cbl:57] FLG-ACCTFILTER-ISVALID (level: 88)
    public static final String FLG_ACCTFILTER_ISVALID = "1";
    // [T-Up#INFO][COCRDSLC.cbl:58] FLG-ACCTFILTER-BLANK (level: 88)
    public static final String FLG_ACCTFILTER_BLANK = " ";
    // [T-Up#INFO][COCRDSLC.cbl:59] WS-EDIT-CARD-FLAG (level: 5)
    private @Getter @Builder.Default String wsEditCardFlag = StringUtils
            .repeat(' ', 1);
    // [T-Up#INFO][COCRDSLC.cbl:60] FLG-CARDFILTER-NOT-OK (level: 88)
    public static final String FLG_CARDFILTER_NOT_OK = "0";
    // [T-Up#INFO][COCRDSLC.cbl:61] FLG-CARDFILTER-ISVALID (level: 88)
    public static final String FLG_CARDFILTER_ISVALID = "1";
    // [T-Up#INFO][COCRDSLC.cbl:62] FLG-CARDFILTER-BLANK (level: 88)
    public static final String FLG_CARDFILTER_BLANK = " ";
    // [T-Up#INFO][COCRDSLC.cbl:63] WS-RETURN-FLAG (level: 5)
    private @Getter @Builder.Default String wsReturnFlag = StringUtils.repeat(
            ' ', 1);
    // [T-Up#INFO][COCRDSLC.cbl:64] WS-RETURN-FLAG-OFF (level: 88)
    public static final String WS_RETURN_FLAG_OFF = StringUtils.repeat(
            (char) 0x00, 1);
    // [T-Up#INFO][COCRDSLC.cbl:65] WS-RETURN-FLAG-ON (level: 88)
    public static final String WS_RETURN_FLAG_ON = "1";
    // [T-Up#INFO][COCRDSLC.cbl:66] WS-PFK-FLAG (level: 5)
    private @Getter @Builder.Default String wsPfkFlag = StringUtils.repeat(' ',
            1);
    // [T-Up#INFO][COCRDSLC.cbl:67] PFK-VALID (level: 88)
    public static final String PFK_VALID = "0";
    // [T-Up#INFO][COCRDSLC.cbl:68] PFK-INVALID (level: 88)
    public static final String PFK_INVALID = "1";
    // ******************************************************************
    // * Output edits
    // ******************************************************************
    // [T-Up#INFO][COCRDSLC.cbl:72] CICS-OUTPUT-EDIT-VARS (level: 5)
    private @Getter @Setter @Builder.Default CocrdslcCicsOutputEditVars cicsOutputEditVars = new CocrdslcCicsOutputEditVars();
    // ******************************************************************
    // *      File and data Handling
    // ******************************************************************
    // [T-Up#INFO][COCRDSLC.cbl:97] WS-CARD-RID (level: 5)
    private @Getter @Setter @Builder.Default CocrdslcWsCardRid wsCardRid = new CocrdslcWsCardRid();
    // [T-Up#INFO][COCRDSLC.cbl:102] WS-FILE-ERROR-MESSAGE (level: 5)
    private @Getter @Setter @Builder.Default CocrdslcWsFileErrorMessage wsFileErrorMessage = new CocrdslcWsFileErrorMessage();
    // ******************************************************************
    // *      Output Message Construction
    // ******************************************************************
    // [T-Up#INFO][COCRDSLC.cbl:125] WS-LONG-MSG (level: 5)
    private @Getter @Builder.Default String wsLongMsg = StringUtils.repeat(' ',
            500);
    // [T-Up#INFO][COCRDSLC.cbl:126] WS-INFO-MSG (level: 5)
    private @Getter @Builder.Default String wsInfoMsg = StringUtils.repeat(' ',
            40);
    // [T-Up#INFO][COCRDSLC.cbl:127] WS-NO-INFO-MESSAGE (level: 88)
    public static final String WS_NO_INFO_MESSAGE_1 = StringUtils.repeat(' ',
            40);
    public static final String WS_NO_INFO_MESSAGE_2 = StringUtils.repeat(
            (char) 0x00, 40);
    // [T-Up#INFO][COCRDSLC.cbl:129] FOUND-CARDS-FOR-ACCOUNT (level: 88)
    public static final String FOUND_CARDS_FOR_ACCOUNT = "   Displaying requested details";
    // [T-Up#INFO][COCRDSLC.cbl:131] WS-PROMPT-FOR-INPUT (level: 88)
    public static final String WS_PROMPT_FOR_INPUT = "Please enter Account and Card Number";
    // [T-Up#INFO][COCRDSLC.cbl:134] WS-RETURN-MSG (level: 5)
    private @Getter @Builder.Default String wsReturnMsg = StringUtils.repeat(
            ' ', 75);
    // [T-Up#INFO][COCRDSLC.cbl:135] WS-RETURN-MSG-OFF (level: 88)
    public static final String WS_RETURN_MSG_OFF = StringUtils.repeat(' ', 75);
    // [T-Up#INFO][COCRDSLC.cbl:136] WS-EXIT-MESSAGE (level: 88)
    public static final String WS_EXIT_MESSAGE = "PF03 pressed.Exiting              ";
    // [T-Up#INFO][COCRDSLC.cbl:138] WS-PROMPT-FOR-ACCT (level: 88)
    public static final String WS_PROMPT_FOR_ACCT = "Account number not provided";
    // [T-Up#INFO][COCRDSLC.cbl:140] WS-PROMPT-FOR-CARD (level: 88)
    public static final String WS_PROMPT_FOR_CARD = "Card number not provided";
    // [T-Up#INFO][COCRDSLC.cbl:142] NO-SEARCH-CRITERIA-RECEIVED (level: 88)
    public static final String NO_SEARCH_CRITERIA_RECEIVED = "No input received";
    // [T-Up#INFO][COCRDSLC.cbl:144] SEARCHED-ACCT-ZEROES (level: 88)
    public static final String SEARCHED_ACCT_ZEROES = "Account number must be a non zero 11 digit number";
    // [T-Up#INFO][COCRDSLC.cbl:146] SEARCHED-ACCT-NOT-NUMERIC (level: 88)
    public static final String SEARCHED_ACCT_NOT_NUMERIC = "Account number must be a non zero 11 digit number";
    // [T-Up#INFO][COCRDSLC.cbl:148] SEARCHED-CARD-NOT-NUMERIC (level: 88)
    public static final String SEARCHED_CARD_NOT_NUMERIC = "Card number if supplied must be a 16 digit number";
    // [T-Up#INFO][COCRDSLC.cbl:151] DID-NOT-FIND-ACCT-IN-CARDXREF (level: 88)
    public static final String DID_NOT_FIND_ACCT_IN_CARDXREF = "Did not find this account in cards database";
    // [T-Up#INFO][COCRDSLC.cbl:153] DID-NOT-FIND-ACCTCARD-COMBO (level: 88)
    public static final String DID_NOT_FIND_ACCTCARD_COMBO = "Did not find cards for this search condition";
    // [T-Up#INFO][COCRDSLC.cbl:155] XREF-READ-ERROR (level: 88)
    public static final String XREF_READ_ERROR = "Error reading Card Data File";
    // [T-Up#INFO][COCRDSLC.cbl:157] CODING-TO-BE-DONE (level: 88)
    public static final String CODING_TO_BE_DONE = "Looks Good.... so far";

    public static CocrdslcWsMiscStorage createDefaultValueInstance() {
        return new CocrdslcWsMiscStorage.builder()
                .wsCicsProcessngVars(
                        CocrdslcWsCicsProcessngVars
                                .createDefaultValueInstance())
                .cicsOutputEditVars(
                        CocrdslcCicsOutputEditVars.createDefaultValueInstance())
                .wsCardRid(CocrdslcWsCardRid.createDefaultValueInstance())
                .wsFileErrorMessage(
                        CocrdslcWsFileErrorMessage.createDefaultValueInstance())
                .build();
    }

    public void set(String source) {
        source = StringUtils.truncate(StringUtils.rightPad(source, 830), 830);
        getWsCicsProcessngVars().set(source.substring(0, 12));
        setWsInputFlag(source.substring(12, 13));
        setWsEditAcctFlag(source.substring(13, 14));
        setWsEditCardFlag(source.substring(14, 15));
        setWsReturnFlag(source.substring(15, 16));
        setWsPfkFlag(source.substring(16, 17));
        getCicsOutputEditVars().set(source.substring(17, 108));
        getWsCardRid().set(source.substring(108, 135));
        getWsFileErrorMessage().set(source.substring(135, 215));
        setWsLongMsg(source.substring(215, 715));
        setWsInfoMsg(source.substring(715, 755));
        setWsReturnMsg(source.substring(755, 830));
    }

    public String get() {
        StringBuilder sb = new StringBuilder();
        sb.append(getWsCicsProcessngVars().get());
        sb.append(getWsInputFlag());
        sb.append(getWsEditAcctFlag());
        sb.append(getWsEditCardFlag());
        sb.append(getWsReturnFlag());
        sb.append(getWsPfkFlag());
        sb.append(getCicsOutputEditVars().get());
        sb.append(getWsCardRid().get());
        sb.append(getWsFileErrorMessage().get());
        sb.append(getWsLongMsg());
        sb.append(getWsInfoMsg());
        sb.append(getWsReturnMsg());
        return sb.toString();
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getWsCicsProcessngVars().toString());
        sb.append(getWsInputFlag());
        sb.append(getWsEditAcctFlag());
        sb.append(getWsEditCardFlag());
        sb.append(getWsReturnFlag());
        sb.append(getWsPfkFlag());
        sb.append(getCicsOutputEditVars().toString());
        sb.append(getWsCardRid().toString());
        sb.append(getWsFileErrorMessage().toString());
        sb.append(getWsLongMsg());
        sb.append(getWsInfoMsg());
        sb.append(getWsReturnMsg());
        return sb.toString();
    }

    public void setWsInputFlag(String source) {
        wsInputFlag = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setWsEditAcctFlag(String source) {
        wsEditAcctFlag = StringUtils.truncate(StringUtils.rightPad(source, 1),
                1);
    }

    public void setWsEditCardFlag(String source) {
        wsEditCardFlag = StringUtils.truncate(StringUtils.rightPad(source, 1),
                1);
    }

    public void setWsReturnFlag(String source) {
        wsReturnFlag = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setWsPfkFlag(String source) {
        wsPfkFlag = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setWsLongMsg(String source) {
        wsLongMsg = StringUtils
                .truncate(StringUtils.rightPad(source, 500), 500);
    }

    public void setWsInfoMsg(String source) {
        wsInfoMsg = StringUtils.truncate(StringUtils.rightPad(source, 40), 40);
    }

    public void setWsReturnMsg(String source) {
        wsReturnMsg = StringUtils
                .truncate(StringUtils.rightPad(source, 75), 75);
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CocrdslcWsCicsProcessngVars {
        // [T-Up#INFO][COCRDSLC.cbl:41] WS-RESP-CD (level: 7)
        private @Getter @Setter @Builder.Default int wsRespCd = 0;
        // [T-Up#INFO][COCRDSLC.cbl:43] WS-REAS-CD (level: 7)
        private @Getter @Setter @Builder.Default int wsReasCd = 0;
        // [T-Up#INFO][COCRDSLC.cbl:45] WS-TRANID (level: 7)
        private @Getter @Builder.Default String wsTranid = StringUtils.repeat(
                ' ', 4);

        public static CocrdslcWsCicsProcessngVars createDefaultValueInstance() {
            return new CocrdslcWsCicsProcessngVars.builder().wsRespCd(0)
                    .wsReasCd(0).wsTranid(StringUtils.repeat(' ', 4)).build();
        }

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 12), 12);
            try {
                setWsRespCd(CobStream.convStringToInt(source.substring(0, 4)));
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                setWsRespCd(0);
            }
            try {
                setWsReasCd(CobStream.convStringToInt(source.substring(4, 8)));
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                setWsReasCd(0);
            }
            setWsTranid(source.substring(8, 12));
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(CobStream.convIntToString(getWsRespCd()));
            sb.append(CobStream.convIntToString(getWsReasCd()));
            sb.append(getWsTranid());
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(String.valueOf(getWsRespCd()));
            sb.append(String.valueOf(getWsReasCd()));
            sb.append(getWsTranid());
            return sb.toString();
        }

        public void setWsTranid(String source) {
            wsTranid = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CocrdslcCicsOutputEditVars {
        // [T-Up#INFO][COCRDSLC.cbl:73] CARD-ACCT-ID-X (level: 10)
        private @Getter @Builder.Default String cardAcctIdX = StringUtils
                .repeat(' ', 11);
        // [T-Up#INFO][COCRDSLC.cbl:76] CARD-CVV-CD-X (level: 10)
        private @Getter @Builder.Default String cardCvvCdX = StringUtils
                .repeat(' ', 3);
        // [T-Up#INFO][COCRDSLC.cbl:79] CARD-CARD-NUM-X (level: 10)
        private @Getter @Builder.Default String cardCardNumX = StringUtils
                .repeat(' ', 16);
        // [T-Up#INFO][COCRDSLC.cbl:82] CARD-NAME-EMBOSSED-X (level: 10)
        private @Getter @Builder.Default String cardNameEmbossedX = StringUtils
                .repeat(' ', 50);
        // [T-Up#INFO][COCRDSLC.cbl:83] CARD-STATUS-X (level: 10)
        private @Getter @Builder.Default String cardStatusX = StringUtils
                .repeat(' ', 1);
        // [T-Up#INFO][COCRDSLC.cbl:84] CARD-EXPIRAION-DATE-X (level: 10)
        private @Getter @Builder.Default String cardExpiraionDateX = StringUtils
                .repeat(' ', 10);

        public static CocrdslcCicsOutputEditVars createDefaultValueInstance() {
            return new CocrdslcCicsOutputEditVars.builder().build();
        }

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 91), 91);
            setCardAcctIdX(source.substring(0, 11));
            setCardCvvCdX(source.substring(11, 14));
            setCardCardNumX(source.substring(14, 30));
            setCardNameEmbossedX(source.substring(30, 80));
            setCardStatusX(source.substring(80, 81));
            setCardExpiraionDateX(source.substring(81, 91));
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(getCardAcctIdX());
            sb.append(getCardCvvCdX());
            sb.append(getCardCardNumX());
            sb.append(getCardNameEmbossedX());
            sb.append(getCardStatusX());
            sb.append(getCardExpiraionDateX());
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getCardAcctIdX());
            sb.append(getCardCvvCdX());
            sb.append(getCardCardNumX());
            sb.append(getCardNameEmbossedX());
            sb.append(getCardStatusX());
            sb.append(getCardExpiraionDateX());
            return sb.toString();
        }

        public void setCardAcctIdX(String source) {
            cardAcctIdX = StringUtils.truncate(
                    StringUtils.rightPad(source, 11), 11);
        }

        public long getCardAcctIdN() {
            try {
                return CobStream.convZonedStringToLong(getCardAcctIdX(), 11);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                return 0;
            }
        }

        public void setCardAcctIdN(long source) {
            setCardAcctIdX(CobStream.convZonedLongToString(source, 11));
        }

        public void setCardCvvCdX(String source) {
            cardCvvCdX = StringUtils.truncate(StringUtils.rightPad(source, 3),
                    3);
        }

        public int getCardCvvCdN() {
            try {
                return CobStream.convZonedStringToInt(getCardCvvCdX(), 3);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                return 0;
            }
        }

        public void setCardCvvCdN(int source) {
            setCardCvvCdX(CobStream.convZonedIntToString(source, 3));
        }

        public void setCardCardNumX(String source) {
            cardCardNumX = StringUtils.truncate(
                    StringUtils.rightPad(source, 16), 16);
        }

        public long getCardCardNumN() {
            try {
                return CobStream.convZonedStringToLong(getCardCardNumX(), 16);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                return 0;
            }
        }

        public void setCardCardNumN(long source) {
            setCardCardNumX(CobStream.convZonedLongToString(source, 16));
        }

        public void setCardNameEmbossedX(String source) {
            cardNameEmbossedX = StringUtils.truncate(
                    StringUtils.rightPad(source, 50), 50);
        }

        public void setCardStatusX(String source) {
            cardStatusX = StringUtils.truncate(StringUtils.rightPad(source, 1),
                    1);
        }

        public void setCardExpiraionDateX(String source) {
            cardExpiraionDateX = StringUtils.truncate(
                    StringUtils.rightPad(source, 10), 10);
        }

        public _FILLER_REDEFINE_1 getFILLER_REDEFINE_1() {
            return _FILLER_REDEFINE_1.builder()
                    .cardExpiryYear(getCardExpiryYear())
                    .FILLER_REDEFINE_2(getFILLER_REDEFINE_2())
                    .cardExpiryMonth(getCardExpiryMonth())
                    .FILLER_REDEFINE_3(getFILLER_REDEFINE_3())
                    .cardExpiryDay(getCardExpiryDay()).build();
        }

        public void setFILLER_REDEFINE_1(String source) {
            setCardExpiryYear(source.substring(0, 4));
            setFILLER_REDEFINE_2(source.substring(4, 5));
            setCardExpiryMonth(source.substring(5, 7));
            setFILLER_REDEFINE_3(source.substring(7, 8));
            setCardExpiryDay(source.substring(8, 10));
        }

        public void setFILLER_REDEFINE_1(_FILLER_REDEFINE_1 source) {
            setFILLER_REDEFINE_1(source.get());
        }

        public String getCardExpiryYear() {
            return getCardExpiraionDateX().substring(0, 4);
        }

        public void setCardExpiryYear(String source) {
            setCardExpiraionDateX(StringUtils.overlay(getCardExpiraionDateX(),
                    source, 0, 4));
        }

        public String getFILLER_REDEFINE_2() {
            return getCardExpiraionDateX().substring(4, 5);
        }

        public void setFILLER_REDEFINE_2(String source) {
            setCardExpiraionDateX(StringUtils.overlay(getCardExpiraionDateX(),
                    source, 4, 5));
        }

        public String getCardExpiryMonth() {
            return getCardExpiraionDateX().substring(5, 7);
        }

        public void setCardExpiryMonth(String source) {
            setCardExpiraionDateX(StringUtils.overlay(getCardExpiraionDateX(),
                    source, 5, 7));
        }

        public String getFILLER_REDEFINE_3() {
            return getCardExpiraionDateX().substring(7, 8);
        }

        public void setFILLER_REDEFINE_3(String source) {
            setCardExpiraionDateX(StringUtils.overlay(getCardExpiraionDateX(),
                    source, 7, 8));
        }

        public String getCardExpiryDay() {
            return getCardExpiraionDateX().substring(8, 10);
        }

        public void setCardExpiryDay(String source) {
            setCardExpiraionDateX(StringUtils.overlay(getCardExpiraionDateX(),
                    source, 8, 10));
        }

        public long getCardExpiraionDateN() {
            try {
                return CobStream.convZonedStringToLong(getCardExpiraionDateX(),
                        10);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                return 0;
            }
        }

        public void setCardExpiraionDateN(long source) {
            setCardExpiraionDateX(CobStream.convZonedLongToString(source, 10));
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _FILLER_REDEFINE_1 {
        // [T-Up#INFO][COCRDSLC.cbl:86] CARD-EXPIRY-YEAR (level: 20)
        private @Getter @Builder.Default String cardExpiryYear = StringUtils
                .repeat(' ', 4);
        // [T-Up#INFO][COCRDSLC.cbl:87] FILLER (level: 20)
        private @Getter @Builder.Default String FILLER_REDEFINE_2 = StringUtils
                .repeat(' ', 1);
        // [T-Up#INFO][COCRDSLC.cbl:88] CARD-EXPIRY-MONTH (level: 20)
        private @Getter @Builder.Default String cardExpiryMonth = StringUtils
                .repeat(' ', 2);
        // [T-Up#INFO][COCRDSLC.cbl:89] FILLER (level: 20)
        private @Getter @Builder.Default String FILLER_REDEFINE_3 = StringUtils
                .repeat(' ', 1);
        // [T-Up#INFO][COCRDSLC.cbl:90] CARD-EXPIRY-DAY (level: 20)
        private @Getter @Builder.Default String cardExpiryDay = StringUtils
                .repeat(' ', 2);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(cardExpiryYear);
            sb.append(FILLER_REDEFINE_2);
            sb.append(cardExpiryMonth);
            sb.append(FILLER_REDEFINE_3);
            sb.append(cardExpiryDay);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getCardExpiryYear());
            sb.append(FILLER_REDEFINE_2);
            sb.append(getCardExpiryMonth());
            sb.append(FILLER_REDEFINE_3);
            sb.append(getCardExpiryDay());
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CocrdslcWsCardRid {
        // [T-Up#INFO][COCRDSLC.cbl:98] WS-CARD-RID-CARDNUM (level: 10)
        private @Getter @Builder.Default String wsCardRidCardnum = StringUtils
                .repeat(' ', 16);
        // [T-Up#INFO][COCRDSLC.cbl:99] WS-CARD-RID-ACCT-ID (level: 10)
        private @Getter @Setter long wsCardRidAcctId;

        public static CocrdslcWsCardRid createDefaultValueInstance() {
            return new CocrdslcWsCardRid.builder().build();
        }

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 27), 27);
            setWsCardRidCardnum(source.substring(0, 16));
            try {
                setWsCardRidAcctId(CobStream.convZonedStringToLong(
                        source.substring(16, 27), 11));
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                setWsCardRidAcctId(0);
            }
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(getWsCardRidCardnum());
            sb.append(CobStream.convZonedLongToString(getWsCardRidAcctId(), 11));
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getWsCardRidCardnum());
            sb.append(PictureFormatter.intFormatWithoutSign(
                    getWsCardRidAcctId(), "00000000000"));
            return sb.toString();
        }

        public void setWsCardRidCardnum(String source) {
            wsCardRidCardnum = StringUtils.truncate(
                    StringUtils.rightPad(source, 16), 16);
        }

        public String getWsCardRidAcctIdX() {
            return CobStream.convZonedLongToString(getWsCardRidAcctId(), 11);
        }

        public void setWsCardRidAcctIdX(String source) {
            try {
                setWsCardRidAcctId(CobStream.convZonedStringToLong(source, 11));
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                setWsCardRidAcctId(0);
            }
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CocrdslcWsFileErrorMessage {
        // [T-Up#INFO][COCRDSLC.cbl:103] FILLER (level: 10)
        private @Getter @Builder.Default String FILLER_1 = "File Error: ";
        // [T-Up#INFO][COCRDSLC.cbl:105] ERROR-OPNAME (level: 10)
        private @Getter @Builder.Default String errorOpname = StringUtils
                .repeat(' ', 8);
        // [T-Up#INFO][COCRDSLC.cbl:107] FILLER (level: 10)
        private @Getter @Builder.Default String FILLER_2 = " on ";
        // [T-Up#INFO][COCRDSLC.cbl:109] ERROR-FILE (level: 10)
        private @Getter @Builder.Default String errorFile = StringUtils.repeat(
                ' ', 9);
        // [T-Up#INFO][COCRDSLC.cbl:111] FILLER (level: 10)
        private @Getter @Builder.Default String FILLER_3 = " returned RESP ";
        // [T-Up#INFO][COCRDSLC.cbl:114] ERROR-RESP (level: 10)
        private @Getter @Builder.Default String errorResp = StringUtils.repeat(
                ' ', 10);
        // [T-Up#INFO][COCRDSLC.cbl:116] FILLER (level: 10)
        private @Getter @Builder.Default String FILLER_4 = ",RESP2 ";
        // [T-Up#INFO][COCRDSLC.cbl:118] ERROR-RESP2 (level: 10)
        private @Getter @Builder.Default String errorResp2 = StringUtils
                .repeat(' ', 10);
        // [T-Up#INFO][COCRDSLC.cbl:120] FILLER (level: 10)
        private @Getter @Builder.Default String FILLER_5 = StringUtils.repeat(
                ' ', 5);

        public static CocrdslcWsFileErrorMessage createDefaultValueInstance() {
            return new CocrdslcWsFileErrorMessage.builder()
                    .errorOpname(StringUtils.repeat(' ', 8))
                    .errorFile(StringUtils.repeat(' ', 9))
                    .errorResp(StringUtils.repeat(' ', 10))
                    .errorResp2(StringUtils.repeat(' ', 10)).build();
        }

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 80), 80);
            setFILLER_1(source.substring(0, 12));
            setErrorOpname(source.substring(12, 20));
            setFILLER_2(source.substring(20, 24));
            setErrorFile(source.substring(24, 33));
            setFILLER_3(source.substring(33, 48));
            setErrorResp(source.substring(48, 58));
            setFILLER_4(source.substring(58, 65));
            setErrorResp2(source.substring(65, 75));
            setFILLER_5(source.substring(75, 80));
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(getFILLER_1());
            sb.append(getErrorOpname());
            sb.append(getFILLER_2());
            sb.append(getErrorFile());
            sb.append(getFILLER_3());
            sb.append(getErrorResp());
            sb.append(getFILLER_4());
            sb.append(getErrorResp2());
            sb.append(getFILLER_5());
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getFILLER_1());
            sb.append(getErrorOpname());
            sb.append(getFILLER_2());
            sb.append(getErrorFile());
            sb.append(getFILLER_3());
            sb.append(getErrorResp());
            sb.append(getFILLER_4());
            sb.append(getErrorResp2());
            sb.append(getFILLER_5());
            return sb.toString();
        }

        public void setFILLER_1(String source) {
            FILLER_1 = StringUtils.truncate(StringUtils.rightPad(source, 12),
                    12);
        }

        public void setErrorOpname(String source) {
            errorOpname = StringUtils.truncate(StringUtils.rightPad(source, 8),
                    8);
        }

        public void setFILLER_2(String source) {
            FILLER_2 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
        }

        public void setErrorFile(String source) {
            errorFile = StringUtils
                    .truncate(StringUtils.rightPad(source, 9), 9);
        }

        public void setFILLER_3(String source) {
            FILLER_3 = StringUtils.truncate(StringUtils.rightPad(source, 15),
                    15);
        }

        public void setErrorResp(String source) {
            errorResp = StringUtils.truncate(StringUtils.rightPad(source, 10),
                    10);
        }

        public void setFILLER_4(String source) {
            FILLER_4 = StringUtils.truncate(StringUtils.rightPad(source, 7), 7);
        }

        public void setErrorResp2(String source) {
            errorResp2 = StringUtils.truncate(StringUtils.rightPad(source, 10),
                    10);
        }

        public void setFILLER_5(String source) {
            FILLER_5 = StringUtils.truncate(StringUtils.rightPad(source, 5), 5);
        }
    }
}
