package com.tmax.openframe.variable.group;

import com.tmax.openframe.runtime.cobol.CobStream;
import java.math.*;
import java.util.*;
import java.util.stream.*;
import lombok.*;
import org.apache.commons.lang3.StringUtils;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:20 KST</p>
 * <hr>
 * <p>Class that defines variables for COPYBOOK item</p>
 */
public @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class Dfhbmsca {
    // [T-Up#INFO][DFHBMSCA.cpy:3] DFHBMPEM (level: 2)
    private @Getter @Builder.Default String dfhbmpem = "";
    // [T-Up#INFO][DFHBMSCA.cpy:4] DFHBMPNL (level: 2)
    private @Getter @Builder.Default String dfhbmpnl = "";
    // [T-Up#INFO][DFHBMSCA.cpy:5] DFHBMPFF (level: 2)
    private @Getter @Builder.Default String dfhbmpff = "\f";
    // [T-Up#INFO][DFHBMSCA.cpy:6] DFHBMPCR (level: 2)
    private @Getter @Builder.Default String dfhbmpcr = "\r";
    // [T-Up#INFO][DFHBMSCA.cpy:7] DFHBMASK (level: 2)
    private @Getter @Builder.Default String dfhbmask = "0";
    // [T-Up#INFO][DFHBMSCA.cpy:8] DFHBMUNP (level: 2)
    private @Getter @Builder.Default String dfhbmunp = " ";
    // [T-Up#INFO][DFHBMSCA.cpy:9] DFHBMUNN (level: 2)
    private @Getter @Builder.Default String dfhbmunn = "&";
    // [T-Up#INFO][DFHBMSCA.cpy:10] DFHBMPRO (level: 2)
    private @Getter @Builder.Default String dfhbmpro = "-";
    // [T-Up#INFO][DFHBMSCA.cpy:11] DFHBMBRY (level: 2)
    private @Getter @Builder.Default String dfhbmbry = "H";
    // [T-Up#INFO][DFHBMSCA.cpy:12] DFHBMDAR (level: 2)
    private @Getter @Builder.Default String dfhbmdar = "<";
    // [T-Up#INFO][DFHBMSCA.cpy:13] DFHBMFSE (level: 2)
    private @Getter @Builder.Default String dfhbmfse = "A";
    // [T-Up#INFO][DFHBMSCA.cpy:14] DFHBMPRF (level: 2)
    private @Getter @Builder.Default String dfhbmprf = "/";
    // [T-Up#INFO][DFHBMSCA.cpy:15] DFHBMASF (level: 2)
    private @Getter @Builder.Default String dfhbmasf = "1";
    // [T-Up#INFO][DFHBMSCA.cpy:16] DFHBMASB (level: 2)
    private @Getter @Builder.Default String dfhbmasb = "8";
    // [T-Up#INFO][DFHBMSCA.cpy:17] DFHBMEOF (level: 2)
    private @Getter @Builder.Default String dfhbmeof = "�";
    // [T-Up#INFO][DFHBMSCA.cpy:18] DFHBMCUR (level: 2)
    private @Getter @Builder.Default String dfhbmcur = "\2";
    // [T-Up#INFO][DFHBMSCA.cpy:19] DFHBMEC (level: 2)
    private @Getter @Builder.Default String dfhbmec = "�";
    // [T-Up#INFO][DFHBMSCA.cpy:20] DFHBMFLG (level: 2)
    private @Getter @Builder.Default String dfhbmflg = StringUtils.repeat(' ',
            1);
    // [T-Up#INFO][DFHBMSCA.cpy:21] DFHERASE (level: 88)
    public static final String DFHERASE_1 = "�";
    public static final String DFHERASE_2 = "�";
    // [T-Up#INFO][DFHBMSCA.cpy:22] DFHCURSR (level: 88)
    public static final String DFHCURSR_1 = "\2";
    public static final String DFHCURSR_2 = "�";
    // [T-Up#INFO][DFHBMSCA.cpy:23] DFHBMDET (level: 2)
    private @Getter @Builder.Default String dfhbmdet = "�";
    // [T-Up#INFO][DFHBMSCA.cpy:24] DFHBMPSO-BIN (level: 2)
    private @Getter @Setter @Builder.Default int dfhbmpsoBin = 3599;
    // [T-Up#INFO][DFHBMSCA.cpy:29] DFHSA (level: 2)
    private @Getter @Builder.Default String dfhsa = "(";
    // [T-Up#INFO][DFHBMSCA.cpy:30] DFHCOLOR (level: 2)
    private @Getter @Builder.Default String dfhcolor = "B";
    // [T-Up#INFO][DFHBMSCA.cpy:31] DFHPS (level: 2)
    private @Getter @Builder.Default String dfhps = "C";
    // [T-Up#INFO][DFHBMSCA.cpy:32] DFHHLT (level: 2)
    private @Getter @Builder.Default String dfhhlt = "A";
    // [T-Up#INFO][DFHBMSCA.cpy:33] DFH3270 (level: 2)
    private @Getter @Builder.Default String dfh3270 = "�";
    // [T-Up#INFO][DFHBMSCA.cpy:34] DFHVAL (level: 2)
    private @Getter @Builder.Default String dfhval = "�";
    // [T-Up#INFO][DFHBMSCA.cpy:35] DFHOUTLN (level: 2)
    private @Getter @Builder.Default String dfhoutln = "�";
    // [T-Up#INFO][DFHBMSCA.cpy:36] DFHBKTRN (level: 2)
    private @Getter @Builder.Default String dfhbktrn = "F";
    // [T-Up#INFO][DFHBMSCA.cpy:37] DFHALL (level: 2)
    private @Getter @Builder.Default String dfhall = "\0";
    // [T-Up#INFO][DFHBMSCA.cpy:38] DFHERROR (level: 2)
    private @Getter @Builder.Default String dfherror = "?";
    // [T-Up#INFO][DFHBMSCA.cpy:39] DFHDFT (level: 2)
    private @Getter @Builder.Default String dfhdft = "�";
    // [T-Up#INFO][DFHBMSCA.cpy:40] DFHDFCOL (level: 2)
    private @Getter @Builder.Default String dfhdfcol = "\0";
    // [T-Up#INFO][DFHBMSCA.cpy:41] DFHBLUE (level: 2)
    private @Getter @Builder.Default String dfhblue = "1";
    // [T-Up#INFO][DFHBMSCA.cpy:42] DFHRED (level: 2)
    private @Getter @Builder.Default String dfhred = "2";
    // [T-Up#INFO][DFHBMSCA.cpy:43] DFHPINK (level: 2)
    private @Getter @Builder.Default String dfhpink = "3";
    // [T-Up#INFO][DFHBMSCA.cpy:44] DFHGREEN (level: 2)
    private @Getter @Builder.Default String dfhgreen = "4";
    // [T-Up#INFO][DFHBMSCA.cpy:45] DFHTURQ (level: 2)
    private @Getter @Builder.Default String dfhturq = "5";
    // [T-Up#INFO][DFHBMSCA.cpy:46] DFHYELLO (level: 2)
    private @Getter @Builder.Default String dfhyello = "6";
    // [T-Up#INFO][DFHBMSCA.cpy:47] DFHNEUTR (level: 2)
    private @Getter @Builder.Default String dfhneutr = "7";
    // [T-Up#INFO][DFHBMSCA.cpy:48] DFHBASE (level: 2)
    private @Getter @Builder.Default String dfhbase = "\0";
    // [T-Up#INFO][DFHBMSCA.cpy:49] DFHDFHI (level: 2)
    private @Getter @Builder.Default String dfhdfhi = "\0";
    // [T-Up#INFO][DFHBMSCA.cpy:50] DFHBLINK (level: 2)
    private @Getter @Builder.Default String dfhblink = "1";
    // [T-Up#INFO][DFHBMSCA.cpy:51] DFHREVRS (level: 2)
    private @Getter @Builder.Default String dfhrevrs = "2";
    // [T-Up#INFO][DFHBMSCA.cpy:52] DFHUNDLN (level: 2)
    private @Getter @Builder.Default String dfhundln = "4";
    // [T-Up#INFO][DFHBMSCA.cpy:53] DFHMFIL (level: 2)
    private @Getter @Builder.Default String dfhmfil = "\4";
    // [T-Up#INFO][DFHBMSCA.cpy:54] DFHMENT (level: 2)
    private @Getter @Builder.Default String dfhment = "\2";
    // [T-Up#INFO][DFHBMSCA.cpy:55] DFHMFE (level: 2)
    private @Getter @Builder.Default String dfhmfe = "\6";
    // [T-Up#INFO][DFHBMSCA.cpy:56] DFHUNNOD (level: 2)
    private @Getter @Builder.Default String dfhunnod = "(";
    // [T-Up#INFO][DFHBMSCA.cpy:57] DFHUNIMD (level: 2)
    private @Getter @Builder.Default String dfhunimd = "I";
    // [T-Up#INFO][DFHBMSCA.cpy:58] DFHUNNUM (level: 2)
    private @Getter @Builder.Default String dfhunnum = "J";
    // [T-Up#INFO][DFHBMSCA.cpy:59] DFHUNNUB (level: 2)
    private @Getter @Builder.Default String dfhunnub = "Q";
    // * ABOVE VALUE DFHUNNUB ADDED BY APAR PN67669
    // [T-Up#INFO][DFHBMSCA.cpy:61] DFHUNINT (level: 2)
    private @Getter @Builder.Default String dfhunint = "R";
    // [T-Up#INFO][DFHBMSCA.cpy:62] DFHUNNON (level: 2)
    private @Getter @Builder.Default String dfhunnon = ")";
    // [T-Up#INFO][DFHBMSCA.cpy:63] DFHPROTI (level: 2)
    private @Getter @Builder.Default String dfhproti = "Y";
    // [T-Up#INFO][DFHBMSCA.cpy:64] DFHPROTN (level: 2)
    private @Getter @Builder.Default String dfhprotn = "%";
    // [T-Up#INFO][DFHBMSCA.cpy:65] DFHMT (level: 2)
    private @Getter @Builder.Default String dfhmt = "\1";
    // [T-Up#INFO][DFHBMSCA.cpy:66] DFHMFT (level: 2)
    private @Getter @Builder.Default String dfhmft = "\5";
    // [T-Up#INFO][DFHBMSCA.cpy:67] DFHMET (level: 2)
    private @Getter @Builder.Default String dfhmet = "\3";
    // [T-Up#INFO][DFHBMSCA.cpy:68] DFHMFET (level: 2)
    private @Getter @Builder.Default String dfhmfet = "\7";
    // [T-Up#INFO][DFHBMSCA.cpy:69] DFHDFFR (level: 2)
    private @Getter @Builder.Default String dfhdffr = "\0";
    // [T-Up#INFO][DFHBMSCA.cpy:70] DFHLEFT (level: 2)
    private @Getter @Builder.Default String dfhleft = "\b";
    // [T-Up#INFO][DFHBMSCA.cpy:71] DFHOVER (level: 2)
    private @Getter @Builder.Default String dfhover = "\4";
    // [T-Up#INFO][DFHBMSCA.cpy:72] DFHRIGHT (level: 2)
    private @Getter @Builder.Default String dfhright = "\2";
    // [T-Up#INFO][DFHBMSCA.cpy:73] DFHUNDER (level: 2)
    private @Getter @Builder.Default String dfhunder = "\1";
    // [T-Up#INFO][DFHBMSCA.cpy:74] DFHBOX-BIN (level: 2)
    private @Getter @Setter @Builder.Default int dfhboxBin = 15;
    // [T-Up#INFO][DFHBMSCA.cpy:79] DFHSOSI (level: 2)
    private @Getter @Builder.Default String dfhsosi = "\1";
    // [T-Up#INFO][DFHBMSCA.cpy:80] DFHTRANS (level: 2)
    private @Getter @Builder.Default String dfhtrans = "0";
    // [T-Up#INFO][DFHBMSCA.cpy:81] DFHOPAQ (level: 2)
    private @Getter @Builder.Default String dfhopaq = "�";

    public static Dfhbmsca createDefaultValueInstance() {
        return new Dfhbmsca.builder().dfhbmpem(StringUtils.repeat(' ', 1))
                .dfhbmpnl(StringUtils.repeat(' ', 1))
                .dfhbmpff(StringUtils.repeat(' ', 1))
                .dfhbmpcr(StringUtils.repeat(' ', 1))
                .dfhbmask(StringUtils.repeat(' ', 1))
                .dfhbmunp(StringUtils.repeat(' ', 1))
                .dfhbmunn(StringUtils.repeat(' ', 1))
                .dfhbmpro(StringUtils.repeat(' ', 1))
                .dfhbmbry(StringUtils.repeat(' ', 1))
                .dfhbmdar(StringUtils.repeat(' ', 1))
                .dfhbmfse(StringUtils.repeat(' ', 1))
                .dfhbmprf(StringUtils.repeat(' ', 1))
                .dfhbmasf(StringUtils.repeat(' ', 1))
                .dfhbmasb(StringUtils.repeat(' ', 1))
                .dfhbmeof(StringUtils.repeat(' ', 1))
                .dfhbmcur(StringUtils.repeat(' ', 1))
                .dfhbmec(StringUtils.repeat(' ', 1))
                .dfhbmdet(StringUtils.repeat(' ', 1)).dfhbmpsoBin(0)
                .dfhsa(StringUtils.repeat(' ', 1))
                .dfhcolor(StringUtils.repeat(' ', 1))
                .dfhps(StringUtils.repeat(' ', 1))
                .dfhhlt(StringUtils.repeat(' ', 1))
                .dfh3270(StringUtils.repeat(' ', 1))
                .dfhval(StringUtils.repeat(' ', 1))
                .dfhoutln(StringUtils.repeat(' ', 1))
                .dfhbktrn(StringUtils.repeat(' ', 1))
                .dfhall(StringUtils.repeat(' ', 1))
                .dfherror(StringUtils.repeat(' ', 1))
                .dfhdft(StringUtils.repeat(' ', 1))
                .dfhdfcol(StringUtils.repeat(' ', 1))
                .dfhblue(StringUtils.repeat(' ', 1))
                .dfhred(StringUtils.repeat(' ', 1))
                .dfhpink(StringUtils.repeat(' ', 1))
                .dfhgreen(StringUtils.repeat(' ', 1))
                .dfhturq(StringUtils.repeat(' ', 1))
                .dfhyello(StringUtils.repeat(' ', 1))
                .dfhneutr(StringUtils.repeat(' ', 1))
                .dfhbase(StringUtils.repeat(' ', 1))
                .dfhdfhi(StringUtils.repeat(' ', 1))
                .dfhblink(StringUtils.repeat(' ', 1))
                .dfhrevrs(StringUtils.repeat(' ', 1))
                .dfhundln(StringUtils.repeat(' ', 1))
                .dfhmfil(StringUtils.repeat(' ', 1))
                .dfhment(StringUtils.repeat(' ', 1))
                .dfhmfe(StringUtils.repeat(' ', 1))
                .dfhunnod(StringUtils.repeat(' ', 1))
                .dfhunimd(StringUtils.repeat(' ', 1))
                .dfhunnum(StringUtils.repeat(' ', 1))
                .dfhunnub(StringUtils.repeat(' ', 1))
                .dfhunint(StringUtils.repeat(' ', 1))
                .dfhunnon(StringUtils.repeat(' ', 1))
                .dfhproti(StringUtils.repeat(' ', 1))
                .dfhprotn(StringUtils.repeat(' ', 1))
                .dfhmt(StringUtils.repeat(' ', 1))
                .dfhmft(StringUtils.repeat(' ', 1))
                .dfhmet(StringUtils.repeat(' ', 1))
                .dfhmfet(StringUtils.repeat(' ', 1))
                .dfhdffr(StringUtils.repeat(' ', 1))
                .dfhleft(StringUtils.repeat(' ', 1))
                .dfhover(StringUtils.repeat(' ', 1))
                .dfhright(StringUtils.repeat(' ', 1))
                .dfhunder(StringUtils.repeat(' ', 1)).dfhboxBin(0)
                .dfhsosi(StringUtils.repeat(' ', 1))
                .dfhtrans(StringUtils.repeat(' ', 1))
                .dfhopaq(StringUtils.repeat(' ', 1)).build();
    }

    public void set(String source) {
        source = StringUtils.truncate(StringUtils.rightPad(source, 70), 70);
        setDfhbmpem(source.substring(0, 1));
        setDfhbmpnl(source.substring(1, 2));
        setDfhbmpff(source.substring(2, 3));
        setDfhbmpcr(source.substring(3, 4));
        setDfhbmask(source.substring(4, 5));
        setDfhbmunp(source.substring(5, 6));
        setDfhbmunn(source.substring(6, 7));
        setDfhbmpro(source.substring(7, 8));
        setDfhbmbry(source.substring(8, 9));
        setDfhbmdar(source.substring(9, 10));
        setDfhbmfse(source.substring(10, 11));
        setDfhbmprf(source.substring(11, 12));
        setDfhbmasf(source.substring(12, 13));
        setDfhbmasb(source.substring(13, 14));
        setDfhbmeof(source.substring(14, 15));
        setDfhbmcur(source.substring(15, 16));
        setDfhbmec(source.substring(16, 17));
        setDfhbmflg(source.substring(17, 18));
        setDfhbmdet(source.substring(18, 19));
        try {
            setDfhbmpsoBin(CobStream
                    .convStringToShort(source.substring(19, 21)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            setDfhbmpsoBin(0);
        }
        setDfhsa(source.substring(21, 22));
        setDfhcolor(source.substring(22, 23));
        setDfhps(source.substring(23, 24));
        setDfhhlt(source.substring(24, 25));
        setDfh3270(source.substring(25, 26));
        setDfhval(source.substring(26, 27));
        setDfhoutln(source.substring(27, 28));
        setDfhbktrn(source.substring(28, 29));
        setDfhall(source.substring(29, 30));
        setDfherror(source.substring(30, 31));
        setDfhdft(source.substring(31, 32));
        setDfhdfcol(source.substring(32, 33));
        setDfhblue(source.substring(33, 34));
        setDfhred(source.substring(34, 35));
        setDfhpink(source.substring(35, 36));
        setDfhgreen(source.substring(36, 37));
        setDfhturq(source.substring(37, 38));
        setDfhyello(source.substring(38, 39));
        setDfhneutr(source.substring(39, 40));
        setDfhbase(source.substring(40, 41));
        setDfhdfhi(source.substring(41, 42));
        setDfhblink(source.substring(42, 43));
        setDfhrevrs(source.substring(43, 44));
        setDfhundln(source.substring(44, 45));
        setDfhmfil(source.substring(45, 46));
        setDfhment(source.substring(46, 47));
        setDfhmfe(source.substring(47, 48));
        setDfhunnod(source.substring(48, 49));
        setDfhunimd(source.substring(49, 50));
        setDfhunnum(source.substring(50, 51));
        setDfhunnub(source.substring(51, 52));
        setDfhunint(source.substring(52, 53));
        setDfhunnon(source.substring(53, 54));
        setDfhproti(source.substring(54, 55));
        setDfhprotn(source.substring(55, 56));
        setDfhmt(source.substring(56, 57));
        setDfhmft(source.substring(57, 58));
        setDfhmet(source.substring(58, 59));
        setDfhmfet(source.substring(59, 60));
        setDfhdffr(source.substring(60, 61));
        setDfhleft(source.substring(61, 62));
        setDfhover(source.substring(62, 63));
        setDfhright(source.substring(63, 64));
        setDfhunder(source.substring(64, 65));
        try {
            setDfhboxBin(CobStream.convStringToShort(source.substring(65, 67)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            setDfhboxBin(0);
        }
        setDfhsosi(source.substring(67, 68));
        setDfhtrans(source.substring(68, 69));
        setDfhopaq(source.substring(69, 70));
    }

    public String get() {
        StringBuilder sb = new StringBuilder();
        sb.append(getDfhbmpem());
        sb.append(getDfhbmpnl());
        sb.append(getDfhbmpff());
        sb.append(getDfhbmpcr());
        sb.append(getDfhbmask());
        sb.append(getDfhbmunp());
        sb.append(getDfhbmunn());
        sb.append(getDfhbmpro());
        sb.append(getDfhbmbry());
        sb.append(getDfhbmdar());
        sb.append(getDfhbmfse());
        sb.append(getDfhbmprf());
        sb.append(getDfhbmasf());
        sb.append(getDfhbmasb());
        sb.append(getDfhbmeof());
        sb.append(getDfhbmcur());
        sb.append(getDfhbmec());
        sb.append(getDfhbmflg());
        sb.append(getDfhbmdet());
        sb.append(CobStream.convShortToString((short) getDfhbmpsoBin()));
        sb.append(getDfhsa());
        sb.append(getDfhcolor());
        sb.append(getDfhps());
        sb.append(getDfhhlt());
        sb.append(getDfh3270());
        sb.append(getDfhval());
        sb.append(getDfhoutln());
        sb.append(getDfhbktrn());
        sb.append(getDfhall());
        sb.append(getDfherror());
        sb.append(getDfhdft());
        sb.append(getDfhdfcol());
        sb.append(getDfhblue());
        sb.append(getDfhred());
        sb.append(getDfhpink());
        sb.append(getDfhgreen());
        sb.append(getDfhturq());
        sb.append(getDfhyello());
        sb.append(getDfhneutr());
        sb.append(getDfhbase());
        sb.append(getDfhdfhi());
        sb.append(getDfhblink());
        sb.append(getDfhrevrs());
        sb.append(getDfhundln());
        sb.append(getDfhmfil());
        sb.append(getDfhment());
        sb.append(getDfhmfe());
        sb.append(getDfhunnod());
        sb.append(getDfhunimd());
        sb.append(getDfhunnum());
        sb.append(getDfhunnub());
        sb.append(getDfhunint());
        sb.append(getDfhunnon());
        sb.append(getDfhproti());
        sb.append(getDfhprotn());
        sb.append(getDfhmt());
        sb.append(getDfhmft());
        sb.append(getDfhmet());
        sb.append(getDfhmfet());
        sb.append(getDfhdffr());
        sb.append(getDfhleft());
        sb.append(getDfhover());
        sb.append(getDfhright());
        sb.append(getDfhunder());
        sb.append(CobStream.convShortToString((short) getDfhboxBin()));
        sb.append(getDfhsosi());
        sb.append(getDfhtrans());
        sb.append(getDfhopaq());
        return sb.toString();
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getDfhbmpem());
        sb.append(getDfhbmpnl());
        sb.append(getDfhbmpff());
        sb.append(getDfhbmpcr());
        sb.append(getDfhbmask());
        sb.append(getDfhbmunp());
        sb.append(getDfhbmunn());
        sb.append(getDfhbmpro());
        sb.append(getDfhbmbry());
        sb.append(getDfhbmdar());
        sb.append(getDfhbmfse());
        sb.append(getDfhbmprf());
        sb.append(getDfhbmasf());
        sb.append(getDfhbmasb());
        sb.append(getDfhbmeof());
        sb.append(getDfhbmcur());
        sb.append(getDfhbmec());
        sb.append(getDfhbmflg());
        sb.append(getDfhbmdet());
        sb.append(String.valueOf(getDfhbmpsoBin()));
        sb.append(getDfhsa());
        sb.append(getDfhcolor());
        sb.append(getDfhps());
        sb.append(getDfhhlt());
        sb.append(getDfh3270());
        sb.append(getDfhval());
        sb.append(getDfhoutln());
        sb.append(getDfhbktrn());
        sb.append(getDfhall());
        sb.append(getDfherror());
        sb.append(getDfhdft());
        sb.append(getDfhdfcol());
        sb.append(getDfhblue());
        sb.append(getDfhred());
        sb.append(getDfhpink());
        sb.append(getDfhgreen());
        sb.append(getDfhturq());
        sb.append(getDfhyello());
        sb.append(getDfhneutr());
        sb.append(getDfhbase());
        sb.append(getDfhdfhi());
        sb.append(getDfhblink());
        sb.append(getDfhrevrs());
        sb.append(getDfhundln());
        sb.append(getDfhmfil());
        sb.append(getDfhment());
        sb.append(getDfhmfe());
        sb.append(getDfhunnod());
        sb.append(getDfhunimd());
        sb.append(getDfhunnum());
        sb.append(getDfhunnub());
        sb.append(getDfhunint());
        sb.append(getDfhunnon());
        sb.append(getDfhproti());
        sb.append(getDfhprotn());
        sb.append(getDfhmt());
        sb.append(getDfhmft());
        sb.append(getDfhmet());
        sb.append(getDfhmfet());
        sb.append(getDfhdffr());
        sb.append(getDfhleft());
        sb.append(getDfhover());
        sb.append(getDfhright());
        sb.append(getDfhunder());
        sb.append(String.valueOf(getDfhboxBin()));
        sb.append(getDfhsosi());
        sb.append(getDfhtrans());
        sb.append(getDfhopaq());
        return sb.toString();
    }

    public void setDfhbmpem(String source) {
        dfhbmpem = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmpnl(String source) {
        dfhbmpnl = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmpff(String source) {
        dfhbmpff = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmpcr(String source) {
        dfhbmpcr = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmask(String source) {
        dfhbmask = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmunp(String source) {
        dfhbmunp = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmunn(String source) {
        dfhbmunn = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmpro(String source) {
        dfhbmpro = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmbry(String source) {
        dfhbmbry = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmdar(String source) {
        dfhbmdar = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmfse(String source) {
        dfhbmfse = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmprf(String source) {
        dfhbmprf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmasf(String source) {
        dfhbmasf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmasb(String source) {
        dfhbmasb = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmeof(String source) {
        dfhbmeof = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmcur(String source) {
        dfhbmcur = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmec(String source) {
        dfhbmec = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmflg(String source) {
        dfhbmflg = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmdet(String source) {
        dfhbmdet = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public _FILLER_REDEFINE_54 getFILLER_REDEFINE_54() {
        return _FILLER_REDEFINE_54.builder().dfhbmpso(getDfhbmpso())
                .dfhbmpsi(getDfhbmpsi()).build();
    }

    public void setFILLER_REDEFINE_54(String source) {
        setDfhbmpso(source.substring(0, 1));
        setDfhbmpsi(source.substring(1, 2));
    }

    public void setFILLER_REDEFINE_54(_FILLER_REDEFINE_54 source) {
        setFILLER_REDEFINE_54(source.get());
    }

    public String getDfhbmpso() {
        return CobStream.convShortToString((short) getDfhbmpsoBin()).substring(
                0, 1);
    }

    public void setDfhbmpso(String source) {
        try {
            setDfhbmpsoBin(CobStream.convStringToShort(StringUtils.overlay(
                    CobStream.convShortToString((short) getDfhbmpsoBin()),
                    source, 0, 1)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            setDfhbmpsoBin(0);
        }
    }

    public String getDfhbmpsi() {
        return CobStream.convShortToString((short) getDfhbmpsoBin()).substring(
                1, 2);
    }

    public void setDfhbmpsi(String source) {
        try {
            setDfhbmpsoBin(CobStream.convStringToShort(StringUtils.overlay(
                    CobStream.convShortToString((short) getDfhbmpsoBin()),
                    source, 1, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            setDfhbmpsoBin(0);
        }
    }

    public void setDfhsa(String source) {
        dfhsa = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhcolor(String source) {
        dfhcolor = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhps(String source) {
        dfhps = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhhlt(String source) {
        dfhhlt = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfh3270(String source) {
        dfh3270 = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhval(String source) {
        dfhval = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhoutln(String source) {
        dfhoutln = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbktrn(String source) {
        dfhbktrn = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhall(String source) {
        dfhall = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfherror(String source) {
        dfherror = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhdft(String source) {
        dfhdft = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhdfcol(String source) {
        dfhdfcol = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhblue(String source) {
        dfhblue = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhred(String source) {
        dfhred = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhpink(String source) {
        dfhpink = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhgreen(String source) {
        dfhgreen = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhturq(String source) {
        dfhturq = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhyello(String source) {
        dfhyello = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhneutr(String source) {
        dfhneutr = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbase(String source) {
        dfhbase = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhdfhi(String source) {
        dfhdfhi = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhblink(String source) {
        dfhblink = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhrevrs(String source) {
        dfhrevrs = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhundln(String source) {
        dfhundln = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhmfil(String source) {
        dfhmfil = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhment(String source) {
        dfhment = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhmfe(String source) {
        dfhmfe = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhunnod(String source) {
        dfhunnod = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhunimd(String source) {
        dfhunimd = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhunnum(String source) {
        dfhunnum = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhunnub(String source) {
        dfhunnub = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhunint(String source) {
        dfhunint = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhunnon(String source) {
        dfhunnon = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhproti(String source) {
        dfhproti = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhprotn(String source) {
        dfhprotn = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhmt(String source) {
        dfhmt = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhmft(String source) {
        dfhmft = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhmet(String source) {
        dfhmet = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhmfet(String source) {
        dfhmfet = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhdffr(String source) {
        dfhdffr = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhleft(String source) {
        dfhleft = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhover(String source) {
        dfhover = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhright(String source) {
        dfhright = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhunder(String source) {
        dfhunder = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public _FILLER_REDEFINE_56 getFILLER_REDEFINE_56() {
        return _FILLER_REDEFINE_56.builder()
                .FILLER_REDEFINE_57(getFILLER_REDEFINE_57())
                .dfhbox(getDfhbox()).build();
    }

    public void setFILLER_REDEFINE_56(String source) {
        setFILLER_REDEFINE_57(source.substring(0, 1));
        setDfhbox(source.substring(1, 2));
    }

    public void setFILLER_REDEFINE_56(_FILLER_REDEFINE_56 source) {
        setFILLER_REDEFINE_56(source.get());
    }

    public String getFILLER_REDEFINE_57() {
        return CobStream.convShortToString((short) getDfhboxBin()).substring(0,
                1);
    }

    public void setFILLER_REDEFINE_57(String source) {
        try {
            setDfhboxBin(CobStream.convStringToShort(StringUtils.overlay(
                    CobStream.convShortToString((short) getDfhboxBin()),
                    source, 0, 1)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            setDfhboxBin(0);
        }
    }

    public String getDfhbox() {
        return CobStream.convShortToString((short) getDfhboxBin()).substring(1,
                2);
    }

    public void setDfhbox(String source) {
        try {
            setDfhboxBin(CobStream.convStringToShort(StringUtils.overlay(
                    CobStream.convShortToString((short) getDfhboxBin()),
                    source, 1, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            setDfhboxBin(0);
        }
    }

    public void setDfhsosi(String source) {
        dfhsosi = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhtrans(String source) {
        dfhtrans = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhopaq(String source) {
        dfhopaq = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _FILLER_REDEFINE_54 {
        // [T-Up#INFO][DFHBMSCA.cpy:27] DFHBMPSO (level: 3)
        private @Getter @Builder.Default String dfhbmpso = StringUtils.repeat(
                ' ', 1);
        // [T-Up#INFO][DFHBMSCA.cpy:28] DFHBMPSI (level: 3)
        private @Getter @Builder.Default String dfhbmpsi = StringUtils.repeat(
                ' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(dfhbmpso);
            sb.append(dfhbmpsi);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getDfhbmpso());
            sb.append(getDfhbmpsi());
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _FILLER_REDEFINE_56 {
        // [T-Up#INFO][DFHBMSCA.cpy:77] FILLER (level: 3)
        private @Getter @Builder.Default String FILLER_REDEFINE_57 = StringUtils
                .repeat(' ', 1);
        // [T-Up#INFO][DFHBMSCA.cpy:78] DFHBOX (level: 3)
        private @Getter @Builder.Default String dfhbox = StringUtils.repeat(
                ' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(FILLER_REDEFINE_57);
            sb.append(dfhbox);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(FILLER_REDEFINE_57);
            sb.append(getDfhbox());
            return sb.toString();
        }
    }
}
