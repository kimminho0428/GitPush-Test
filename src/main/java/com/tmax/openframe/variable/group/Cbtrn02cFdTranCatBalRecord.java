package com.tmax.openframe.variable.group;

import com.tmax.openframe.runtime.cobol.CobStream;
import com.tmax.openframe.runtime.cobol.PictureFormatter;
import java.math.*;
import java.util.*;
import lombok.*;
import org.apache.commons.lang3.StringUtils;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:10 KST</p>
 * <hr>
 * <p>Class that defines variables for COBOL group item FD-TRAN-CAT-BAL-RECORD</p>
 */
public @AllArgsConstructor @NoArgsConstructor class Cbtrn02cFdTranCatBalRecord {
    // [T-Up#INFO][CBTRN02C.cbl:116] FD-TRAN-CAT-KEY (level: 5)
    private @Getter @Setter Cbtrn02cFdTranCatKey fdTranCatKey = new Cbtrn02cFdTranCatKey();
    // [T-Up#INFO][CBTRN02C.cbl:120] FD-FD-TRAN-CAT-DATA (level: 5)
    private @Getter String fdFdTranCatData = StringUtils.repeat(' ', 33);

    public void set(String source) {
        source = StringUtils.truncate(StringUtils.rightPad(source, 50), 50);
        getFdTranCatKey().set(source.substring(0, 17));
        setFdFdTranCatData(source.substring(17, 50));
    }

    public String get() {
        StringBuilder sb = new StringBuilder();
        sb.append(getFdTranCatKey().get());
        sb.append(getFdFdTranCatData());
        return sb.toString();
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getFdTranCatKey().toString());
        sb.append(getFdFdTranCatData());
        return sb.toString();
    }

    public void setFdFdTranCatData(String source) {
        fdFdTranCatData = StringUtils.truncate(
                StringUtils.rightPad(source, 33), 33);
    }

    public static @AllArgsConstructor @NoArgsConstructor class Cbtrn02cFdTranCatKey {
        // [T-Up#INFO][CBTRN02C.cbl:117] FD-TRANCAT-ACCT-ID (level: 10)
        private @Getter @Setter long fdTrancatAcctId;
        // [T-Up#INFO][CBTRN02C.cbl:118] FD-TRANCAT-TYPE-CD (level: 10)
        private @Getter String fdTrancatTypeCd = StringUtils.repeat(' ', 2);
        // [T-Up#INFO][CBTRN02C.cbl:119] FD-TRANCAT-CD (level: 10)
        private @Getter @Setter int fdTrancatCd;

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 17), 17);
            try {
                setFdTrancatAcctId(CobStream.convZonedStringToLong(
                        source.substring(0, 11), 11));
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                setFdTrancatAcctId(0);
            }
            setFdTrancatTypeCd(source.substring(11, 13));
            try {
                setFdTrancatCd(CobStream.convZonedStringToInt(
                        source.substring(13, 17), 4));
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                setFdTrancatCd(0);
            }
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(CobStream.convZonedLongToString(getFdTrancatAcctId(), 11));
            sb.append(getFdTrancatTypeCd());
            sb.append(CobStream.convZonedIntToString(getFdTrancatCd(), 4));
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(PictureFormatter.intFormatWithoutSign(
                    getFdTrancatAcctId(), "00000000000"));
            sb.append(getFdTrancatTypeCd());
            sb.append(PictureFormatter.intFormatWithoutSign(
                    (long) getFdTrancatCd(), "0000"));
            return sb.toString();
        }

        public void setFdTrancatTypeCd(String source) {
            fdTrancatTypeCd = StringUtils.truncate(
                    StringUtils.rightPad(source, 2), 2);
        }
    }
}
