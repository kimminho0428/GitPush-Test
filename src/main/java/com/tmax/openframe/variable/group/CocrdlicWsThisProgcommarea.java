package com.tmax.openframe.variable.group;

import com.tmax.openframe.runtime.cobol.CobStream;
import com.tmax.openframe.runtime.cobol.PictureFormatter;
import java.math.*;
import java.util.*;
import java.util.stream.*;
import lombok.*;
import org.apache.commons.lang3.StringUtils;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:16 KST</p>
 * <hr>
 * <p>Class that defines variables for COBOL group item WS-THIS-PROGCOMMAREA</p>
 */
public @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CocrdlicWsThisProgcommarea {
    // [T-Up#INFO][COCRDLIC.cbl:229] WS-CA-LAST-CARDKEY (level: 10)
    private @Getter @Setter @Builder.Default CocrdlicWsCaLastCardkey wsCaLastCardkey = new CocrdlicWsCaLastCardkey();
    // [T-Up#INFO][COCRDLIC.cbl:232] WS-CA-FIRST-CARDKEY (level: 10)
    private @Getter @Setter @Builder.Default CocrdlicWsCaFirstCardkey wsCaFirstCardkey = new CocrdlicWsCaFirstCardkey();
    // [T-Up#INFO][COCRDLIC.cbl:236] WS-CA-SCREEN-NUM (level: 10)
    private @Getter @Setter int wsCaScreenNum;
    // [T-Up#INFO][COCRDLIC.cbl:237] CA-FIRST-PAGE (level: 88)
    public static final int CA_FIRST_PAGE = 1;
    // [T-Up#INFO][COCRDLIC.cbl:238] WS-CA-LAST-PAGE-DISPLAYED (level: 10)
    private @Getter @Setter int wsCaLastPageDisplayed;
    // [T-Up#INFO][COCRDLIC.cbl:239] CA-LAST-PAGE-SHOWN (level: 88)
    public static final int CA_LAST_PAGE_SHOWN = 0;
    // [T-Up#INFO][COCRDLIC.cbl:240] CA-LAST-PAGE-NOT-SHOWN (level: 88)
    public static final int CA_LAST_PAGE_NOT_SHOWN = 9;
    // [T-Up#INFO][COCRDLIC.cbl:241] WS-CA-NEXT-PAGE-IND (level: 10)
    private @Getter @Builder.Default String wsCaNextPageInd = StringUtils
            .repeat(' ', 1);
    // [T-Up#INFO][COCRDLIC.cbl:242] CA-NEXT-PAGE-NOT-EXISTS (level: 88)
    public static final String CA_NEXT_PAGE_NOT_EXISTS = StringUtils.repeat(
            (char) 0x00, 1);
    // [T-Up#INFO][COCRDLIC.cbl:243] CA-NEXT-PAGE-EXISTS (level: 88)
    public static final String CA_NEXT_PAGE_EXISTS = "Y";
    // [T-Up#INFO][COCRDLIC.cbl:245] WS-RETURN-FLAG (level: 10)
    private @Getter @Builder.Default String wsReturnFlag = StringUtils.repeat(
            ' ', 1);
    // [T-Up#INFO][COCRDLIC.cbl:246] WS-RETURN-FLAG-OFF (level: 88)
    public static final String WS_RETURN_FLAG_OFF = StringUtils.repeat(
            (char) 0x00, 1);
    // [T-Up#INFO][COCRDLIC.cbl:247] WS-RETURN-FLAG-ON (level: 88)
    public static final String WS_RETURN_FLAG_ON = "1";
    // ******************************************************************
    // *  File Data Array         28 CHARS X 7 ROWS = 196
    // ******************************************************************
    // [T-Up#INFO][COCRDLIC.cbl:251] WS-SCREEN-DATA (level: 5)
    private @Getter @Setter @Builder.Default CocrdlicWsScreenData wsScreenData = new CocrdlicWsScreenData();

    public static CocrdlicWsThisProgcommarea createDefaultValueInstance() {
        return new CocrdlicWsThisProgcommarea.builder()
                .wsCaLastCardkey(
                        CocrdlicWsCaLastCardkey.createDefaultValueInstance())
                .wsCaFirstCardkey(
                        CocrdlicWsCaFirstCardkey.createDefaultValueInstance())
                .wsScreenData(CocrdlicWsScreenData.createDefaultValueInstance())
                .build();
    }

    public void set(String source) {
        source = StringUtils.truncate(StringUtils.rightPad(source, 254), 254);
        getWsCaLastCardkey().set(source.substring(0, 27));
        getWsCaFirstCardkey().set(source.substring(27, 54));
        try {
            setWsCaScreenNum(CobStream.convZonedStringToInt(
                    source.substring(54, 55), 1));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            setWsCaScreenNum(0);
        }
        try {
            setWsCaLastPageDisplayed(CobStream.convZonedStringToInt(
                    source.substring(55, 56), 1));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            setWsCaLastPageDisplayed(0);
        }
        setWsCaNextPageInd(source.substring(56, 57));
        setWsReturnFlag(source.substring(57, 58));
        getWsScreenData().set(source.substring(58, 254));
    }

    public String get() {
        StringBuilder sb = new StringBuilder();
        sb.append(getWsCaLastCardkey().get());
        sb.append(getWsCaFirstCardkey().get());
        sb.append(CobStream.convZonedIntToString(getWsCaScreenNum(), 1));
        sb.append(CobStream.convZonedIntToString(getWsCaLastPageDisplayed(), 1));
        sb.append(getWsCaNextPageInd());
        sb.append(getWsReturnFlag());
        sb.append(getWsScreenData().get());
        return sb.toString();
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getWsCaLastCardkey().toString());
        sb.append(getWsCaFirstCardkey().toString());
        sb.append(PictureFormatter.intFormatWithoutSign(
                (long) getWsCaScreenNum(), "0"));
        sb.append(PictureFormatter.intFormatWithoutSign(
                (long) getWsCaLastPageDisplayed(), "0"));
        sb.append(getWsCaNextPageInd());
        sb.append(getWsReturnFlag());
        sb.append(getWsScreenData().toString());
        return sb.toString();
    }

    public void setWsCaNextPageInd(String source) {
        wsCaNextPageInd = StringUtils.truncate(StringUtils.rightPad(source, 1),
                1);
    }

    public void setWsReturnFlag(String source) {
        wsReturnFlag = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CocrdlicWsCaLastCardkey {
        // [T-Up#INFO][COCRDLIC.cbl:230] WS-CA-LAST-CARD-NUM (level: 15)
        private @Getter @Builder.Default String wsCaLastCardNum = StringUtils
                .repeat(' ', 16);
        // [T-Up#INFO][COCRDLIC.cbl:231] WS-CA-LAST-CARD-ACCT-ID (level: 15)
        private @Getter @Setter long wsCaLastCardAcctId;

        public static CocrdlicWsCaLastCardkey createDefaultValueInstance() {
            return new CocrdlicWsCaLastCardkey.builder().build();
        }

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 27), 27);
            setWsCaLastCardNum(source.substring(0, 16));
            try {
                setWsCaLastCardAcctId(CobStream.convZonedStringToLong(
                        source.substring(16, 27), 11));
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                setWsCaLastCardAcctId(0);
            }
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(getWsCaLastCardNum());
            sb.append(CobStream.convZonedLongToString(getWsCaLastCardAcctId(),
                    11));
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getWsCaLastCardNum());
            sb.append(PictureFormatter.intFormatWithoutSign(
                    getWsCaLastCardAcctId(), "00000000000"));
            return sb.toString();
        }

        public void setWsCaLastCardNum(String source) {
            wsCaLastCardNum = StringUtils.truncate(
                    StringUtils.rightPad(source, 16), 16);
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CocrdlicWsCaFirstCardkey {
        // [T-Up#INFO][COCRDLIC.cbl:233] WS-CA-FIRST-CARD-NUM (level: 15)
        private @Getter @Builder.Default String wsCaFirstCardNum = StringUtils
                .repeat(' ', 16);
        // [T-Up#INFO][COCRDLIC.cbl:234] WS-CA-FIRST-CARD-ACCT-ID (level: 15)
        private @Getter @Setter long wsCaFirstCardAcctId;

        public static CocrdlicWsCaFirstCardkey createDefaultValueInstance() {
            return new CocrdlicWsCaFirstCardkey.builder().build();
        }

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 27), 27);
            setWsCaFirstCardNum(source.substring(0, 16));
            try {
                setWsCaFirstCardAcctId(CobStream.convZonedStringToLong(
                        source.substring(16, 27), 11));
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                setWsCaFirstCardAcctId(0);
            }
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(getWsCaFirstCardNum());
            sb.append(CobStream.convZonedLongToString(getWsCaFirstCardAcctId(),
                    11));
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getWsCaFirstCardNum());
            sb.append(PictureFormatter.intFormatWithoutSign(
                    getWsCaFirstCardAcctId(), "00000000000"));
            return sb.toString();
        }

        public void setWsCaFirstCardNum(String source) {
            wsCaFirstCardNum = StringUtils.truncate(
                    StringUtils.rightPad(source, 16), 16);
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CocrdlicWsScreenData {
        // [T-Up#INFO][COCRDLIC.cbl:252] WS-SCREEN-ROWS (level: 15)
        private @Getter @Setter @Builder.Default CocrdlicWsScreenRows[] wsScreenRows = Stream
                .generate(CocrdlicWsScreenRows::new).limit(7)
                .toArray(CocrdlicWsScreenRows[]::new);

        public static CocrdlicWsScreenData createDefaultValueInstance() {
            return new CocrdlicWsScreenData.builder().wsScreenRows(
                    Stream.generate(CocrdlicWsScreenRows::new).limit(7)
                            .toArray(CocrdlicWsScreenRows[]::new)).build();
        }

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 196),
                    196);
            for (int i = 0; i < 7; i++) {
                getWsScreenRows(i).set(
                        source.substring(0 + i * 28, 0 + (i + 1) * 28));
            }
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(Arrays.stream(getWsScreenRows())
                    .map(CocrdlicWsScreenRows::get)
                    .collect(Collectors.joining()));
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getWsScreenRows().toString());
            return sb.toString();
        }

        public CocrdlicWsScreenRows getWsScreenRows(int index) {
            return getWsScreenRows()[index];
        }

        public void setWsScreenRows(int index, CocrdlicWsScreenRows source) {
            getWsScreenRows()[index] = source;
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CocrdlicWsScreenRows {
        // [T-Up#INFO][COCRDLIC.cbl:253] WS-EACH-ROW (level: 20)
        private @Getter @Setter @Builder.Default CocrdlicWsEachRow wsEachRow = new CocrdlicWsEachRow();

        public static CocrdlicWsScreenRows createDefaultValueInstance() {
            return new CocrdlicWsScreenRows.builder().wsEachRow(
                    CocrdlicWsEachRow.createDefaultValueInstance()).build();
        }

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 28), 28);
            getWsEachRow().set(source.substring(0, 28));
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(getWsEachRow().get());
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getWsEachRow().toString());
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CocrdlicWsEachRow {
        // [T-Up#INFO][COCRDLIC.cbl:254] WS-EACH-CARD (level: 25)
        private @Getter @Setter @Builder.Default CocrdlicWsEachCard wsEachCard = new CocrdlicWsEachCard();

        public static CocrdlicWsEachRow createDefaultValueInstance() {
            return new CocrdlicWsEachRow.builder().wsEachCard(
                    CocrdlicWsEachCard.createDefaultValueInstance()).build();
        }

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 28), 28);
            getWsEachCard().set(source.substring(0, 28));
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(getWsEachCard().get());
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getWsEachCard().toString());
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CocrdlicWsEachCard {
        // [T-Up#INFO][COCRDLIC.cbl:255] WS-ROW-ACCTNO (level: 30)
        private @Getter @Builder.Default String wsRowAcctno = StringUtils
                .repeat(' ', 11);
        // [T-Up#INFO][COCRDLIC.cbl:256] WS-ROW-CARD-NUM (level: 30)
        private @Getter @Builder.Default String wsRowCardNum = StringUtils
                .repeat(' ', 16);
        // [T-Up#INFO][COCRDLIC.cbl:257] WS-ROW-CARD-STATUS (level: 30)
        private @Getter @Builder.Default String wsRowCardStatus = StringUtils
                .repeat(' ', 1);

        public static CocrdlicWsEachCard createDefaultValueInstance() {
            return new CocrdlicWsEachCard.builder().build();
        }

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 28), 28);
            setWsRowAcctno(source.substring(0, 11));
            setWsRowCardNum(source.substring(11, 27));
            setWsRowCardStatus(source.substring(27, 28));
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(getWsRowAcctno());
            sb.append(getWsRowCardNum());
            sb.append(getWsRowCardStatus());
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getWsRowAcctno());
            sb.append(getWsRowCardNum());
            sb.append(getWsRowCardStatus());
            return sb.toString();
        }

        public void setWsRowAcctno(String source) {
            wsRowAcctno = StringUtils.truncate(
                    StringUtils.rightPad(source, 11), 11);
        }

        public void setWsRowCardNum(String source) {
            wsRowCardNum = StringUtils.truncate(
                    StringUtils.rightPad(source, 16), 16);
        }

        public void setWsRowCardStatus(String source) {
            wsRowCardStatus = StringUtils.truncate(
                    StringUtils.rightPad(source, 1), 1);
        }
    }
}
