package com.tmax.openframe.variable.group;

import com.tmax.openframe.runtime.cobol.CobStream;
import java.math.*;
import java.util.*;
import lombok.*;
import org.apache.commons.lang3.StringUtils;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:20 KST</p>
 * <hr>
 * <p>Class that defines variables for COBOL group item FEEDBACK-CODE</p>
 */
public @AllArgsConstructor @NoArgsConstructor class CsutldtcFeedbackCode {
    // [T-Up#INFO][CSUTLDTC.cbl:61] FEEDBACK-TOKEN-VALUE (level: 2)
    private @Getter @Setter CsutldtcFeedbackTokenValue feedbackTokenValue = new CsutldtcFeedbackTokenValue();
    // [T-Up#INFO][CSUTLDTC.cbl:80] I-S-INFO (level: 2)
    private @Getter @Setter int iSInfo;

    public void set(String source) {
        source = StringUtils.truncate(StringUtils.rightPad(source, 12), 12);
        getFeedbackTokenValue().set(source.substring(0, 8));
        try {
            setISInfo(CobStream.convStringToInt(source.substring(8, 12)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            setISInfo(0);
        }
    }

    public String get() {
        StringBuilder sb = new StringBuilder();
        sb.append(getFeedbackTokenValue().get());
        sb.append(CobStream.convIntToString(getISInfo()));
        return sb.toString();
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getFeedbackTokenValue().toString());
        sb.append(String.valueOf(getISInfo()));
        return sb.toString();
    }

    public static @AllArgsConstructor @NoArgsConstructor class CsutldtcFeedbackTokenValue {
        // [T-Up#INFO][CSUTLDTC.cbl:62] FC-INVALID-DATE (level: 88)
        public static final String FC_INVALID_DATE = "\0\0\0\0\0\0\0\0";
        // [T-Up#INFO][CSUTLDTC.cbl:63] FC-INSUFFICIENT-DATA (level: 88)
        public static final String FC_INSUFFICIENT_DATA = "\0\3\t�Y���";
        // [T-Up#INFO][CSUTLDTC.cbl:64] FC-BAD-DATE-VALUE (level: 88)
        public static final String FC_BAD_DATE_VALUE = "\0\3\t�Y���";
        // [T-Up#INFO][CSUTLDTC.cbl:65] FC-INVALID-ERA (level: 88)
        public static final String FC_INVALID_ERA = "\0\3\t�Y���";
        // [T-Up#INFO][CSUTLDTC.cbl:66] FC-UNSUPP-RANGE (level: 88)
        public static final String FC_UNSUPP_RANGE = "\0\3\t�Y���";
        // [T-Up#INFO][CSUTLDTC.cbl:67] FC-INVALID-MONTH (level: 88)
        public static final String FC_INVALID_MONTH = "\0\3\t�Y���";
        // [T-Up#INFO][CSUTLDTC.cbl:68] FC-BAD-PIC-STRING (level: 88)
        public static final String FC_BAD_PIC_STRING = "\0\3\t�Y���";
        // [T-Up#INFO][CSUTLDTC.cbl:69] FC-NON-NUMERIC-DATA (level: 88)
        public static final String FC_NON_NUMERIC_DATA = "\0\3\t�Y���";
        // [T-Up#INFO][CSUTLDTC.cbl:70] FC-YEAR-IN-ERA-ZERO (level: 88)
        public static final String FC_YEAR_IN_ERA_ZERO = "\0\3\t�Y���";
        // [T-Up#INFO][CSUTLDTC.cbl:71] CASE-1-CONDITION-ID (level: 3)
        private @Getter @Setter CsutldtcCase1ConditionId case1ConditionId = new CsutldtcCase1ConditionId();
        // [T-Up#INFO][CSUTLDTC.cbl:78] CASE-SEV-CTL (level: 3)
        private @Getter String caseSevCtl = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][CSUTLDTC.cbl:79] FACILITY-ID (level: 3)
        private @Getter String facilityId = StringUtils.repeat(' ', 3);

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 8), 8);
            getCase1ConditionId().set(source.substring(0, 4));
            setCaseSevCtl(source.substring(4, 5));
            setFacilityId(source.substring(5, 8));
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(getCase1ConditionId().get());
            sb.append(getCaseSevCtl());
            sb.append(getFacilityId());
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getCase1ConditionId().toString());
            sb.append(getCaseSevCtl());
            sb.append(getFacilityId());
            return sb.toString();
        }

        public CsutldtcCase2ConditionId getCase2ConditionId() {
            return CsutldtcCase2ConditionId.builder().classCode(getClassCode())
                    .causeCode(getCauseCode()).build();
        }

        public void setCase2ConditionId(String source) {
            try {
                setClassCode(CobStream
                        .convStringToShort(source.substring(0, 2)));
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                setClassCode(0);
            }
            try {
                setCauseCode(CobStream
                        .convStringToShort(source.substring(2, 4)));
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                setCauseCode(0);
            }
        }

        public void setCase2ConditionId(CsutldtcCase2ConditionId source) {
            setCase2ConditionId(source.get());
        }

        public int getClassCode() {
            return getCase1ConditionId().getSeverity();
        }

        public void setClassCode(int source) {
            try {
                getCase1ConditionId().setSeverity(
                        CobStream.convStringToShort(CobStream
                                .convShortToString((short) source)));
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                getCase1ConditionId().setSeverity(0);
            }
        }

        public int getCauseCode() {
            return getCase1ConditionId().getMsgNo();
        }

        public void setCauseCode(int source) {
            try {
                getCase1ConditionId().setMsgNo(
                        CobStream.convStringToShort(CobStream
                                .convShortToString((short) source)));
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                getCase1ConditionId().setMsgNo(0);
            }
        }

        public void setCaseSevCtl(String source) {
            caseSevCtl = StringUtils.truncate(StringUtils.rightPad(source, 1),
                    1);
        }

        public void setFacilityId(String source) {
            facilityId = StringUtils.truncate(StringUtils.rightPad(source, 3),
                    3);
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor class CsutldtcCase1ConditionId {
        // [T-Up#INFO][CSUTLDTC.cbl:72] SEVERITY (level: 4)
        private @Getter @Setter int severity;
        // [T-Up#INFO][CSUTLDTC.cbl:73] MSG-NO (level: 4)
        private @Getter @Setter int msgNo;

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
            try {
                setSeverity(CobStream.convStringToShort(source.substring(0, 2)));
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                setSeverity(0);
            }
            try {
                setMsgNo(CobStream.convStringToShort(source.substring(2, 4)));
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                setMsgNo(0);
            }
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(CobStream.convShortToString((short) getSeverity()));
            sb.append(CobStream.convShortToString((short) getMsgNo()));
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(String.valueOf(getSeverity()));
            sb.append(String.valueOf(getMsgNo()));
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CsutldtcCase2ConditionId {
        // [T-Up#INFO][CSUTLDTC.cbl:76] CLASS-CODE (level: 4)
        private @Getter @Setter int classCode;
        // [T-Up#INFO][CSUTLDTC.cbl:77] CAUSE-CODE (level: 4)
        private @Getter @Setter int causeCode;

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(CobStream.convShortToString((short) classCode));
            sb.append(CobStream.convShortToString((short) causeCode));
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(String.valueOf(getClassCode()));
            sb.append(String.valueOf(getCauseCode()));
            return sb.toString();
        }
    }
}
