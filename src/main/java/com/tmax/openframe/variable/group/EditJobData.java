package com.tmax.openframe.variable.group;

import java.math.*;
import java.util.*;
import java.util.stream.Collectors;
import lombok.*;
import org.apache.commons.lang3.StringUtils;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:20 KST</p>
 * <hr>
 * <p>Class that defines variables for COBOL group item JOB-DATA</p>
 */
public @AllArgsConstructor @NoArgsConstructor class EditJobData {
    // [T-Up#INFO][EDIT2.cbl:82] JOB-DATA-1 (level: 2)
    private @Getter @Setter EditJobData1 jobData1 = new EditJobData1();

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getJobData1().toString());
        return sb.toString();
    }

    public EditJobData2 getJobData2() {
        return EditJobData2.builder().jobLines(getJobLines()).build();
    }

    public void setJobData2(String source) {
        setJobLines(source.substring(0, 1280).split("(?<=\\G.{80})"));
    }

    public void setJobData2(EditJobData2 source) {
        setJobData2(source.get());
    }

    public String[] getJobLines() {
        return (getJobData1().getFILLER_1() + getJobData1().getFILLER_2()
                + getJobData1().getFILLER_3() + getJobData1().getFILLER_4()
                + getJobData1().getFILLER_5() + getJobData1().getFILLER_6()
                + getJobData1().getFILLER_7() + getJobData1().getFILLER_8()
                + getJobData1().getFILLER_9() + getJobData1().getFILLER_10()
                + getJobData1().getFiller1().getFILLER_11()
                + getJobData1().getFiller1().getParmStartDate1()
                + getJobData1().getFiller1().getFILLER_12()
                + getJobData1().getFiller2().getFILLER_13()
                + getJobData1().getFiller2().getParmEndDate1()
                + getJobData1().getFiller2().getFILLER_14()
                + getJobData1().getFILLER_15() + getJobData1().getFILLER_16()
                + getJobData1().getFiller3().getParmStartDate2()
                + getJobData1().getFiller3().getFILLER_17()
                + getJobData1().getFiller3().getParmEndDate2()
                + getJobData1().getFiller3().getFILLER_18() + getJobData1()
                .getFILLER_19()).split("(?<=\\G.{80})");
    }

    public void setJobLines(String[] source) {
        getJobData1().setFILLER_1(
                Arrays.stream(source).collect(Collectors.joining())
                        .substring(0, 80));
        getJobData1().setFILLER_2(
                Arrays.stream(source).collect(Collectors.joining())
                        .substring(80, 160));
        getJobData1().setFILLER_3(
                Arrays.stream(source).collect(Collectors.joining())
                        .substring(160, 240));
        getJobData1().setFILLER_4(
                Arrays.stream(source).collect(Collectors.joining())
                        .substring(240, 320));
        getJobData1().setFILLER_5(
                Arrays.stream(source).collect(Collectors.joining())
                        .substring(320, 400));
        getJobData1().setFILLER_6(
                Arrays.stream(source).collect(Collectors.joining())
                        .substring(400, 480));
        getJobData1().setFILLER_7(
                Arrays.stream(source).collect(Collectors.joining())
                        .substring(480, 560));
        getJobData1().setFILLER_8(
                Arrays.stream(source).collect(Collectors.joining())
                        .substring(560, 640));
        getJobData1().setFILLER_9(
                Arrays.stream(source).collect(Collectors.joining())
                        .substring(640, 720));
        getJobData1().setFILLER_10(
                Arrays.stream(source).collect(Collectors.joining())
                        .substring(720, 800));
        getJobData1().getFiller1().setFILLER_11(
                Arrays.stream(source).collect(Collectors.joining())
                        .substring(800, 818));
        getJobData1().getFiller1().setParmStartDate1(
                Arrays.stream(source).collect(Collectors.joining())
                        .substring(818, 828));
        getJobData1().getFiller1().setFILLER_12(
                Arrays.stream(source).collect(Collectors.joining())
                        .substring(828, 880));
        getJobData1().getFiller2().setFILLER_13(
                Arrays.stream(source).collect(Collectors.joining())
                        .substring(880, 896));
        getJobData1().getFiller2().setParmEndDate1(
                Arrays.stream(source).collect(Collectors.joining())
                        .substring(896, 906));
        getJobData1().getFiller2().setFILLER_14(
                Arrays.stream(source).collect(Collectors.joining())
                        .substring(906, 960));
        getJobData1().setFILLER_15(
                Arrays.stream(source).collect(Collectors.joining())
                        .substring(960, 1040));
        getJobData1().setFILLER_16(
                Arrays.stream(source).collect(Collectors.joining())
                        .substring(1040, 1120));
        getJobData1().getFiller3().setParmStartDate2(
                Arrays.stream(source).collect(Collectors.joining())
                        .substring(1120, 1130));
        getJobData1().getFiller3().setFILLER_17(
                Arrays.stream(source).collect(Collectors.joining())
                        .substring(1130, 1131));
        getJobData1().getFiller3().setParmEndDate2(
                Arrays.stream(source).collect(Collectors.joining())
                        .substring(1131, 1141));
        getJobData1().getFiller3().setFILLER_18(
                Arrays.stream(source).collect(Collectors.joining())
                        .substring(1141, 1200));
        getJobData1().setFILLER_19(
                Arrays.stream(source).collect(Collectors.joining())
                        .substring(1200, 1280));
    }

    public String getJobLines(int index) {
        if (index == 0) {
            return getJobData1().getFILLER_1();
        } else if (index == 1) {
            return getJobData1().getFILLER_2();
        } else if (index == 2) {
            return getJobData1().getFILLER_3();
        } else if (index == 3) {
            return getJobData1().getFILLER_4();
        } else if (index == 4) {
            return getJobData1().getFILLER_5();
        } else if (index == 5) {
            return getJobData1().getFILLER_6();
        } else if (index == 6) {
            return getJobData1().getFILLER_7();
        } else if (index == 7) {
            return getJobData1().getFILLER_8();
        } else if (index == 8) {
            return getJobData1().getFILLER_9();
        } else if (index == 9) {
            return getJobData1().getFILLER_10();
        } else if (index == 10) {
            return getJobData1().getFiller1().getFILLER_11()
                    + getJobData1().getFiller1().getParmStartDate1()
                    + getJobData1().getFiller1().getFILLER_12();
        } else if (index == 11) {
            return getJobData1().getFiller2().getFILLER_13()
                    + getJobData1().getFiller2().getParmEndDate1()
                    + getJobData1().getFiller2().getFILLER_14();
        } else if (index == 12) {
            return getJobData1().getFILLER_15();
        } else if (index == 13) {
            return getJobData1().getFILLER_16();
        } else if (index == 14) {
            return getJobData1().getFiller3().getParmStartDate2()
                    + getJobData1().getFiller3().getFILLER_17()
                    + getJobData1().getFiller3().getParmEndDate2()
                    + getJobData1().getFiller3().getFILLER_18();
        } else if (index == 15) {
            return getJobData1().getFILLER_19();
        } else {
            throw new IllegalArgumentException("invalid index");
        }
    }

    public void setJobLines(int index, String source) {
        if (index == 0) {
            getJobData1().setFILLER_1(source);
        } else if (index == 1) {
            getJobData1().setFILLER_2(source);
        } else if (index == 2) {
            getJobData1().setFILLER_3(source);
        } else if (index == 3) {
            getJobData1().setFILLER_4(source);
        } else if (index == 4) {
            getJobData1().setFILLER_5(source);
        } else if (index == 5) {
            getJobData1().setFILLER_6(source);
        } else if (index == 6) {
            getJobData1().setFILLER_7(source);
        } else if (index == 7) {
            getJobData1().setFILLER_8(source);
        } else if (index == 8) {
            getJobData1().setFILLER_9(source);
        } else if (index == 9) {
            getJobData1().setFILLER_10(source);
        } else if (index == 10) {
            getJobData1().getFiller1().setFILLER_11(source.substring(0, 18));
            getJobData1().getFiller1().setParmStartDate1(
                    source.substring(18, 28));
            getJobData1().getFiller1().setFILLER_12(source.substring(28, 80));
        } else if (index == 11) {
            getJobData1().getFiller2().setFILLER_13(source.substring(0, 16));
            getJobData1().getFiller2()
                    .setParmEndDate1(source.substring(16, 26));
            getJobData1().getFiller2().setFILLER_14(source.substring(26, 80));
        } else if (index == 12) {
            getJobData1().setFILLER_15(source);
        } else if (index == 13) {
            getJobData1().setFILLER_16(source);
        } else if (index == 14) {
            getJobData1().getFiller3().setParmStartDate2(
                    source.substring(0, 10));
            getJobData1().getFiller3().setFILLER_17(source.substring(10, 11));
            getJobData1().getFiller3()
                    .setParmEndDate2(source.substring(11, 21));
            getJobData1().getFiller3().setFILLER_18(source.substring(21, 80));
        } else if (index == 15) {
            getJobData1().setFILLER_19(source);
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor class EditJobData1 {
        // [T-Up#INFO][EDIT2.cbl:83] FILLER (level: 5)
        private @Getter String FILLER_1 = "//TRNRPT00 JOB 'TRAN REPORT',CLASS=A,MSGCLASS=0,"
                + StringUtils.repeat(' ', 32);
        // [T-Up#INFO][EDIT2.cbl:85] FILLER (level: 5)
        private @Getter String FILLER_2 = "// NOTIFY=&SYSUID"
                + StringUtils.repeat(' ', 63);
        // [T-Up#INFO][EDIT2.cbl:87] FILLER (level: 5)
        private @Getter String FILLER_3 = "//*" + StringUtils.repeat(' ', 77);
        // [T-Up#INFO][EDIT2.cbl:89] FILLER (level: 5)
        private @Getter String FILLER_4 = "//JOBLIB JCLLIB ORDER=('AWS.M2.CARDDEMO.PROC')"
                + StringUtils.repeat(' ', 34);
        // [T-Up#INFO][EDIT2.cbl:91] FILLER (level: 5)
        private @Getter String FILLER_5 = "//*" + StringUtils.repeat(' ', 77);
        // [T-Up#INFO][EDIT2.cbl:93] FILLER (level: 5)
        private @Getter String FILLER_6 = "//STEP10 EXEC PROC=TRANREPT"
                + StringUtils.repeat(' ', 53);
        // [T-Up#INFO][EDIT2.cbl:95] FILLER (level: 5)
        private @Getter String FILLER_7 = "//*" + StringUtils.repeat(' ', 77);
        // [T-Up#INFO][EDIT2.cbl:97] FILLER (level: 5)
        private @Getter String FILLER_8 = "//STEP05R.SYMNAMES DD *"
                + StringUtils.repeat(' ', 57);
        // [T-Up#INFO][EDIT2.cbl:99] FILLER (level: 5)
        private @Getter String FILLER_9 = "TRAN-CARD-NUM,263,16,ZD"
                + StringUtils.repeat(' ', 57);
        // [T-Up#INFO][EDIT2.cbl:101] FILLER (level: 5)
        private @Getter String FILLER_10 = "TRAN-PROC-DT,305,10,CH"
                + StringUtils.repeat(' ', 58);
        // [T-Up#INFO][EDIT2.cbl:103] FILLER-1 (level: 5)
        private @Getter @Setter EditFiller1 filler1 = new EditFiller1();
        // [T-Up#INFO][EDIT2.cbl:108] FILLER-2 (level: 5)
        private @Getter @Setter EditFiller2 filler2 = new EditFiller2();
        // [T-Up#INFO][EDIT2.cbl:113] FILLER (level: 5)
        private @Getter String FILLER_15 = "/*" + StringUtils.repeat(' ', 78);
        // [T-Up#INFO][EDIT2.cbl:115] FILLER (level: 5)
        private @Getter String FILLER_16 = "//STEP10R.DATEPARM DD *"
                + StringUtils.repeat(' ', 57);
        // [T-Up#INFO][EDIT2.cbl:117] FILLER-3 (level: 5)
        private @Getter @Setter EditFiller3 filler3 = new EditFiller3();
        // [T-Up#INFO][EDIT2.cbl:122] FILLER (level: 5)
        private @Getter String FILLER_19 = "/*" + StringUtils.repeat(' ', 78);
        // [T-Up#INFO][EDIT2.cbl:124] FILLER (level: 5)
        private @Getter String FILLER_20 = "/*EOF"
                + StringUtils.repeat(' ', 75);

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 1360),
                    1360);
            setFILLER_1(source.substring(0, 80));
            setFILLER_2(source.substring(80, 160));
            setFILLER_3(source.substring(160, 240));
            setFILLER_4(source.substring(240, 320));
            setFILLER_5(source.substring(320, 400));
            setFILLER_6(source.substring(400, 480));
            setFILLER_7(source.substring(480, 560));
            setFILLER_8(source.substring(560, 640));
            setFILLER_9(source.substring(640, 720));
            setFILLER_10(source.substring(720, 800));
            getFiller1().set(source.substring(800, 880));
            getFiller2().set(source.substring(880, 960));
            setFILLER_15(source.substring(960, 1040));
            setFILLER_16(source.substring(1040, 1120));
            getFiller3().set(source.substring(1120, 1200));
            setFILLER_19(source.substring(1200, 1280));
            setFILLER_20(source.substring(1280, 1360));
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(getFILLER_1());
            sb.append(getFILLER_2());
            sb.append(getFILLER_3());
            sb.append(getFILLER_4());
            sb.append(getFILLER_5());
            sb.append(getFILLER_6());
            sb.append(getFILLER_7());
            sb.append(getFILLER_8());
            sb.append(getFILLER_9());
            sb.append(getFILLER_10());
            sb.append(getFiller1().get());
            sb.append(getFiller2().get());
            sb.append(getFILLER_15());
            sb.append(getFILLER_16());
            sb.append(getFiller3().get());
            sb.append(getFILLER_19());
            sb.append(getFILLER_20());
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getFILLER_1());
            sb.append(getFILLER_2());
            sb.append(getFILLER_3());
            sb.append(getFILLER_4());
            sb.append(getFILLER_5());
            sb.append(getFILLER_6());
            sb.append(getFILLER_7());
            sb.append(getFILLER_8());
            sb.append(getFILLER_9());
            sb.append(getFILLER_10());
            sb.append(getFiller1().toString());
            sb.append(getFiller2().toString());
            sb.append(getFILLER_15());
            sb.append(getFILLER_16());
            sb.append(getFiller3().toString());
            sb.append(getFILLER_19());
            sb.append(getFILLER_20());
            return sb.toString();
        }

        public void setFILLER_1(String source) {
            FILLER_1 = StringUtils.truncate(StringUtils.rightPad(source, 80),
                    80);
        }

        public void setFILLER_2(String source) {
            FILLER_2 = StringUtils.truncate(StringUtils.rightPad(source, 80),
                    80);
        }

        public void setFILLER_3(String source) {
            FILLER_3 = StringUtils.truncate(StringUtils.rightPad(source, 80),
                    80);
        }

        public void setFILLER_4(String source) {
            FILLER_4 = StringUtils.truncate(StringUtils.rightPad(source, 80),
                    80);
        }

        public void setFILLER_5(String source) {
            FILLER_5 = StringUtils.truncate(StringUtils.rightPad(source, 80),
                    80);
        }

        public void setFILLER_6(String source) {
            FILLER_6 = StringUtils.truncate(StringUtils.rightPad(source, 80),
                    80);
        }

        public void setFILLER_7(String source) {
            FILLER_7 = StringUtils.truncate(StringUtils.rightPad(source, 80),
                    80);
        }

        public void setFILLER_8(String source) {
            FILLER_8 = StringUtils.truncate(StringUtils.rightPad(source, 80),
                    80);
        }

        public void setFILLER_9(String source) {
            FILLER_9 = StringUtils.truncate(StringUtils.rightPad(source, 80),
                    80);
        }

        public void setFILLER_10(String source) {
            FILLER_10 = StringUtils.truncate(StringUtils.rightPad(source, 80),
                    80);
        }

        public void setFILLER_15(String source) {
            FILLER_15 = StringUtils.truncate(StringUtils.rightPad(source, 80),
                    80);
        }

        public void setFILLER_16(String source) {
            FILLER_16 = StringUtils.truncate(StringUtils.rightPad(source, 80),
                    80);
        }

        public void setFILLER_19(String source) {
            FILLER_19 = StringUtils.truncate(StringUtils.rightPad(source, 80),
                    80);
        }

        public void setFILLER_20(String source) {
            FILLER_20 = StringUtils.truncate(StringUtils.rightPad(source, 80),
                    80);
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor class EditFiller1 {
        // [T-Up#INFO][EDIT2.cbl:104] FILLER (level: 10)
        private @Getter String FILLER_11 = "PARM-START-DATE,C'";
        // [T-Up#INFO][EDIT2.cbl:106] PARM-START-DATE-1 (level: 10)
        private @Getter String parmStartDate1 = StringUtils.repeat(' ', 10);
        // [T-Up#INFO][EDIT2.cbl:107] FILLER (level: 10)
        private @Getter String FILLER_12 = "'" + StringUtils.repeat(' ', 51);

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 80), 80);
            setFILLER_11(source.substring(0, 18));
            setParmStartDate1(source.substring(18, 28));
            setFILLER_12(source.substring(28, 80));
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(getFILLER_11());
            sb.append(getParmStartDate1());
            sb.append(getFILLER_12());
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getFILLER_11());
            sb.append(getParmStartDate1());
            sb.append(getFILLER_12());
            return sb.toString();
        }

        public void setFILLER_11(String source) {
            FILLER_11 = StringUtils.truncate(StringUtils.rightPad(source, 18),
                    18);
        }

        public void setParmStartDate1(String source) {
            parmStartDate1 = StringUtils.truncate(
                    StringUtils.rightPad(source, 10), 10);
        }

        public void setFILLER_12(String source) {
            FILLER_12 = StringUtils.truncate(StringUtils.rightPad(source, 52),
                    52);
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor class EditFiller2 {
        // [T-Up#INFO][EDIT2.cbl:109] FILLER (level: 10)
        private @Getter String FILLER_13 = "PARM-END-DATE,C'";
        // [T-Up#INFO][EDIT2.cbl:111] PARM-END-DATE-1 (level: 10)
        private @Getter String parmEndDate1 = StringUtils.repeat(' ', 10);
        // [T-Up#INFO][EDIT2.cbl:112] FILLER (level: 10)
        private @Getter String FILLER_14 = "'" + StringUtils.repeat(' ', 53);

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 80), 80);
            setFILLER_13(source.substring(0, 16));
            setParmEndDate1(source.substring(16, 26));
            setFILLER_14(source.substring(26, 80));
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(getFILLER_13());
            sb.append(getParmEndDate1());
            sb.append(getFILLER_14());
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getFILLER_13());
            sb.append(getParmEndDate1());
            sb.append(getFILLER_14());
            return sb.toString();
        }

        public void setFILLER_13(String source) {
            FILLER_13 = StringUtils.truncate(StringUtils.rightPad(source, 16),
                    16);
        }

        public void setParmEndDate1(String source) {
            parmEndDate1 = StringUtils.truncate(
                    StringUtils.rightPad(source, 10), 10);
        }

        public void setFILLER_14(String source) {
            FILLER_14 = StringUtils.truncate(StringUtils.rightPad(source, 54),
                    54);
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor class EditFiller3 {
        // [T-Up#INFO][EDIT2.cbl:118] PARM-START-DATE-2 (level: 10)
        private @Getter String parmStartDate2 = StringUtils.repeat(' ', 10);
        // [T-Up#INFO][EDIT2.cbl:119] FILLER (level: 10)
        private @Getter String FILLER_17 = " ";
        // [T-Up#INFO][EDIT2.cbl:120] PARM-END-DATE-2 (level: 10)
        private @Getter String parmEndDate2 = StringUtils.repeat(' ', 10);
        // [T-Up#INFO][EDIT2.cbl:121] FILLER (level: 10)
        private @Getter String FILLER_18 = StringUtils.repeat(' ', 59);

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 80), 80);
            setParmStartDate2(source.substring(0, 10));
            setFILLER_17(source.substring(10, 11));
            setParmEndDate2(source.substring(11, 21));
            setFILLER_18(source.substring(21, 80));
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(getParmStartDate2());
            sb.append(getFILLER_17());
            sb.append(getParmEndDate2());
            sb.append(getFILLER_18());
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getParmStartDate2());
            sb.append(getFILLER_17());
            sb.append(getParmEndDate2());
            sb.append(getFILLER_18());
            return sb.toString();
        }

        public void setParmStartDate2(String source) {
            parmStartDate2 = StringUtils.truncate(
                    StringUtils.rightPad(source, 10), 10);
        }

        public void setFILLER_17(String source) {
            FILLER_17 = StringUtils
                    .truncate(StringUtils.rightPad(source, 1), 1);
        }

        public void setParmEndDate2(String source) {
            parmEndDate2 = StringUtils.truncate(
                    StringUtils.rightPad(source, 10), 10);
        }

        public void setFILLER_18(String source) {
            FILLER_18 = StringUtils.truncate(StringUtils.rightPad(source, 59),
                    59);
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class EditJobData2 {
        // [T-Up#INFO][EDIT2.cbl:127] JOB-LINES (level: 5)
        private @Getter @Setter String[] jobLines = Collections.nCopies(16,
                StringUtils.repeat(' ', 80)).toArray(new String[0]);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(Arrays.stream(jobLines).collect(Collectors.joining()));
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(String.join("", getJobLines()));
            return sb.toString();
        }
    }
}
