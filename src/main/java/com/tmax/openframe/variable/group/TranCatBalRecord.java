package com.tmax.openframe.variable.group;

import com.tmax.openframe.runtime.cobol.CobStream;
import com.tmax.openframe.runtime.cobol.PictureFormatter;
import java.math.*;
import java.util.*;
import java.util.stream.*;
import lombok.*;
import org.apache.commons.lang3.StringUtils;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:10 KST</p>
 * <hr>
 * <p>Class that defines variables for COPYBOOK item</p>
 */
public @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class TranCatBalRecord {
    // [T-Up#INFO][CVTRA01Y.cpy:6] TRAN-CAT-KEY (level: 5)
    private @Getter @Setter @Builder.Default TranCatKey tranCatKey = new TranCatKey();
    // [T-Up#INFO][CVTRA01Y.cpy:10] TRAN-CAT-BAL (level: 5)
    private @Getter @Builder.Default BigDecimal tranCatBal = BigDecimal.ZERO;
    // [T-Up#INFO][CVTRA01Y.cpy:11] FILLER (level: 5)
    private @Getter @Builder.Default String FILLER_1 = StringUtils.repeat(' ',
            22);

    public static TranCatBalRecord createDefaultValueInstance() {
        return new TranCatBalRecord.builder().tranCatKey(
                TranCatKey.createDefaultValueInstance()).build();
    }

    public void set(String source) {
        source = StringUtils.truncate(StringUtils.rightPad(source, 50), 50);
        getTranCatKey().set(source.substring(0, 17));
        try {
            setTranCatBal(CobStream.convZonedStringToBigDecimal(
                    source.substring(17, 28), 11, 2));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            setTranCatBal(BigDecimal.ZERO);
        }
        setFILLER_1(source.substring(28, 50));
    }

    public String get() {
        StringBuilder sb = new StringBuilder();
        sb.append(getTranCatKey().get());
        sb.append(CobStream.convZonedBigDecimalToString(getTranCatBal(), 11, 2));
        sb.append(getFILLER_1());
        return sb.toString();
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getTranCatKey().toString());
        sb.append(PictureFormatter.decimalFormatWithSign(getTranCatBal(),
                "000000000.00"));
        sb.append(getFILLER_1());
        return sb.toString();
    }

    public void setTranCatBal(BigDecimal source) {
        tranCatBal = source.setScale(2, RoundingMode.DOWN);
    }

    public void setFILLER_1(String source) {
        FILLER_1 = StringUtils.truncate(StringUtils.rightPad(source, 22), 22);
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class TranCatKey {
        // [T-Up#INFO][CVTRA01Y.cpy:7] TRANCAT-ACCT-ID (level: 10)
        private @Getter @Setter long trancatAcctId;
        // [T-Up#INFO][CVTRA01Y.cpy:8] TRANCAT-TYPE-CD (level: 10)
        private @Getter @Builder.Default String trancatTypeCd = StringUtils
                .repeat(' ', 2);
        // [T-Up#INFO][CVTRA01Y.cpy:9] TRANCAT-CD (level: 10)
        private @Getter @Setter int trancatCd;

        public static TranCatKey createDefaultValueInstance() {
            return new TranCatKey.builder().build();
        }

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 17), 17);
            try {
                setTrancatAcctId(CobStream.convZonedStringToLong(
                        source.substring(0, 11), 11));
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                setTrancatAcctId(0);
            }
            setTrancatTypeCd(source.substring(11, 13));
            try {
                setTrancatCd(CobStream.convZonedStringToInt(
                        source.substring(13, 17), 4));
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                setTrancatCd(0);
            }
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(CobStream.convZonedLongToString(getTrancatAcctId(), 11));
            sb.append(getTrancatTypeCd());
            sb.append(CobStream.convZonedIntToString(getTrancatCd(), 4));
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(PictureFormatter.intFormatWithoutSign(getTrancatAcctId(),
                    "00000000000"));
            sb.append(getTrancatTypeCd());
            sb.append(PictureFormatter.intFormatWithoutSign(
                    (long) getTrancatCd(), "0000"));
            return sb.toString();
        }

        public void setTrancatTypeCd(String source) {
            trancatTypeCd = StringUtils.truncate(
                    StringUtils.rightPad(source, 2), 2);
        }
    }
}
