package com.tmax.openframe.variable.group;

import com.tmax.openframe.runtime.cobol.CobStream;
import com.tmax.openframe.runtime.cobol.PictureFormatter;
import java.math.*;
import java.util.*;
import lombok.*;
import org.apache.commons.lang3.StringUtils;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:10 KST</p>
 * <hr>
 * <p>Class that defines variables for COBOL group item WS-VALIDATION-TRAILER</p>
 */
public @AllArgsConstructor @NoArgsConstructor class Cbtrn02cWsValidationTrailer {
    // [T-Up#INFO][CBTRN02C.cbl:204] WS-VALIDATION-FAIL-REASON (level: 5)
    private @Getter @Setter int wsValidationFailReason;
    // [T-Up#INFO][CBTRN02C.cbl:205] WS-VALIDATION-FAIL-REASON-DESC (level: 5)
    private @Getter String wsValidationFailReasonDesc = StringUtils.repeat(' ',
            76);

    public void set(String source) {
        source = StringUtils.truncate(StringUtils.rightPad(source, 80), 80);
        try {
            setWsValidationFailReason(CobStream.convZonedStringToInt(
                    source.substring(0, 4), 4));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            setWsValidationFailReason(0);
        }
        setWsValidationFailReasonDesc(source.substring(4, 80));
    }

    public String get() {
        StringBuilder sb = new StringBuilder();
        sb.append(CobStream
                .convZonedIntToString(getWsValidationFailReason(), 4));
        sb.append(getWsValidationFailReasonDesc());
        return sb.toString();
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(PictureFormatter.intFormatWithoutSign(
                (long) getWsValidationFailReason(), "0000"));
        sb.append(getWsValidationFailReasonDesc());
        return sb.toString();
    }

    public void setWsValidationFailReasonDesc(String source) {
        wsValidationFailReasonDesc = StringUtils.truncate(
                StringUtils.rightPad(source, 76), 76);
    }
}
