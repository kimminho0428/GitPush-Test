package com.tmax.openframe.variable;

import com.tmax.openframe.runtime.cobol.CobStream;
import com.tmax.openframe.variable.group.*;
import java.math.*;
import java.text.DecimalFormat;
import java.util.*;
import java.util.function.Function;
import lombok.*;
import org.apache.commons.lang3.StringUtils;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:14 KST</p>
 * <hr>
 * <p>Class that defines variables that defined in the data division of COBOL program</p>
 */
public class CoactvwcVariableContainer {
    // [T-Up#INFO][COACTVWC.cbl:35] WS-MISC-STORAGE (level: 1)
    private @Getter @Setter CoactvwcWsMiscStorage wsMiscStorage = new CoactvwcWsMiscStorage();
    // *****************************************************************
    // *      Literals and Constants
    // ******************************************************************
    // [T-Up#INFO][COACTVWC.cbl:141] WS-LITERALS (level: 1)
    private @Getter @Setter CoactvwcWsLiterals wsLiterals = new CoactvwcWsLiterals();
    // ******************************************************************
    // *Other common working storage Variables
    // ******************************************************************
    //       *COPY CVCRD01Y.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CVCRD01Y.cpy)
    // [T-Up#INFO][CVCRD01Y.cpy:2] CC-WORK-AREAS (level: 1)
    private @Getter @Setter CcWorkAreas ccWorkAreas = new CcWorkAreas();
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:16:00 CDT
    // *
    // ******************************************************************
    // *Application Commmarea Copybook
    //       *COPY COCOM01Y.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/COCOM01Y.cpy)
    // ******************************************************************
    // * Communication area for CardDemo application programs
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // [T-Up#INFO][COCOM01Y.cpy:20] CARDDEMO-COMMAREA (level: 1)
    private @Getter @Setter CarddemoCommarea carddemoCommarea = new CarddemoCommarea();
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:57 CDT
    // *
    // [T-Up#INFO][COACTVWC.cbl:212] WS-THIS-PROGCOMMAREA (level: 1)
    private @Getter @Setter CoactvwcWsThisProgcommarea wsThisProgcommarea = new CoactvwcWsThisProgcommarea();
    // [T-Up#INFO][COACTVWC.cbl:217] WS-COMMAREA (level: 1)
    private @Getter String wsCommarea = StringUtils.repeat(' ', 2000);
    // *IBM SUPPLIED COPYBOOKS
    //       *COPY DFHBMSCA.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/DFHBMSCA.cpy)
    // [T-Up#INFO][DFHBMSCA.cpy:2] DFHBMSCA (level: 1)
    private @Getter @Setter Dfhbmsca dfhbmsca = new Dfhbmsca();
    //       *COPY DFHAID.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/DFHAID.cpy)
    // [T-Up#INFO][DFHAID.cpy:2] DFHAID (level: 1)
    private @Getter @Setter Dfhaid dfhaid = new Dfhaid();
    // *COMMON COPYBOOKS
    // *Screen Titles
    //       *COPY COTTL01Y.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/COTTL01Y.cpy)
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // [T-Up#INFO][COTTL01Y.cpy:18] CCDA-SCREEN-TITLE (level: 1)
    private @Getter @Setter CcdaScreenTitle ccdaScreenTitle = new CcdaScreenTitle();
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
    // *
    // *BMS Copybook
    //       *COPY COACTVW.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/COACTVW.CPY)
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // [T-Up#INFO][COACTVW.CPY:18] CACTVWAI (level: 1)
    private @Getter @Setter Cactvwai cactvwai = new Cactvwai();
    // *Current Date
    //       *COPY CSDAT01Y.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSDAT01Y.cpy)
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // [T-Up#INFO][CSDAT01Y.cpy:18] WS-DATE-TIME (level: 1)
    private @Getter @Setter WsDateTime wsDateTime = new WsDateTime();
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
    // *
    // *Common Messages
    //       *COPY CSMSG01Y.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSMSG01Y.cpy)
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // [T-Up#INFO][CSMSG01Y.cpy:18] CCDA-COMMON-MESSAGES (level: 1)
    private @Getter @Setter CcdaCommonMessages ccdaCommonMessages = new CcdaCommonMessages();
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
    // *
    // *Abend Variables
    //       *COPY CSMSG02Y.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSMSG02Y.cpy)
    // *****************************************************************
    // * CABENDD.CPY                                                   *
    // *---------------------------------------------------------------*
    // * Work areas for abend routine                                  *
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // [T-Up#INFO][CSMSG02Y.cpy:22] ABEND-DATA (level: 1)
    private @Getter @Setter AbendData abendData = new AbendData();
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
    // *
    // *Signed on user data
    //       *COPY CSUSR01Y.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSUSR01Y.cpy)
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // [T-Up#INFO][CSUSR01Y.cpy:18] SEC-USER-DATA (level: 1)
    private @Getter @Setter SecUserData secUserData = new SecUserData();
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:59 CDT
    // *
    // *ACCOUNT RECORD LAYOUT
    //       *COPY CVACT01Y.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CVACT01Y.cpy)
    // *****************************************************************
    // *    Data-structure for  account entity (RECLN 300)
    // *****************************************************************
    // [T-Up#INFO][CVACT01Y.cpy:5] ACCOUNT-RECORD (level: 1)
    private @Getter @Setter AccountRecord accountRecord = new AccountRecord();
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:59 CDT
    // *
    // *CUSTOMER RECORD LAYOUT
    //       *COPY CVACT02Y.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CVACT02Y.cpy)
    // *****************************************************************
    // *    Data-structure for card entity (RECLN 150)
    // *****************************************************************
    // [T-Up#INFO][CVACT02Y.cpy:5] CARD-RECORD (level: 1)
    private @Getter @Setter CardRecord cardRecord = new CardRecord();
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:16:00 CDT
    // *
    // *CARD XREF LAYOUT
    //       *COPY CVACT03Y.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CVACT03Y.cpy)
    // *****************************************************************
    // *    Data-structure for card xref (RECLN 50)
    // *****************************************************************
    // [T-Up#INFO][CVACT03Y.cpy:5] CARD-XREF-RECORD (level: 1)
    private @Getter @Setter CardXrefRecord cardXrefRecord = new CardXrefRecord();
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:16:00 CDT
    // *
    // *CUSTOMER LAYOUT
    //       *COPY CVCUS01Y.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CVCUS01Y.cpy)
    // *****************************************************************
    // *    Data-structure for Customer entity (RECLN 500)
    // *****************************************************************
    // [T-Up#INFO][CVCUS01Y.cpy:5] CUSTOMER-RECORD (level: 1)
    private @Getter @Setter CustomerRecord customerRecord = new CustomerRecord();
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:16:00 CDT
    // *
    // [T-Up#INFO][COACTVWC.cbl:256] DFHCOMMAREA (level: 1)
    private @Getter @Setter CoactvwcDfhcommarea dfhcommarea = new CoactvwcDfhcommarea();

    public void setWsCommarea(String source) {
        wsCommarea = StringUtils.truncate(StringUtils.rightPad(source, 2000),
                2000);
    }

    public CoactvwcCactvwao getCactvwao() {
        return CoactvwcCactvwao.builder()
                .FILLER_REDEFINE_80(getFILLER_REDEFINE_80())
                .FILLER_REDEFINE_81(getFILLER_REDEFINE_81())
                .trnnamec(getTrnnamec()).trnnamep(getTrnnamep())
                .trnnameh(getTrnnameh()).trnnamev(getTrnnamev())
                .trnnameo(getTrnnameo())
                .FILLER_REDEFINE_82(getFILLER_REDEFINE_82())
                .title01c(getTitle01c()).title01p(getTitle01p())
                .title01h(getTitle01h()).title01v(getTitle01v())
                .title01o(getTitle01o())
                .FILLER_REDEFINE_83(getFILLER_REDEFINE_83())
                .curdatec(getCurdatec()).curdatep(getCurdatep())
                .curdateh(getCurdateh()).curdatev(getCurdatev())
                .curdateo(getCurdateo())
                .FILLER_REDEFINE_84(getFILLER_REDEFINE_84())
                .pgmnamec(getPgmnamec()).pgmnamep(getPgmnamep())
                .pgmnameh(getPgmnameh()).pgmnamev(getPgmnamev())
                .pgmnameo(getPgmnameo())
                .FILLER_REDEFINE_85(getFILLER_REDEFINE_85())
                .title02c(getTitle02c()).title02p(getTitle02p())
                .title02h(getTitle02h()).title02v(getTitle02v())
                .title02o(getTitle02o())
                .FILLER_REDEFINE_86(getFILLER_REDEFINE_86())
                .curtimec(getCurtimec()).curtimep(getCurtimep())
                .curtimeh(getCurtimeh()).curtimev(getCurtimev())
                .curtimeo(getCurtimeo())
                .FILLER_REDEFINE_87(getFILLER_REDEFINE_87())
                .acctsidc(getAcctsidc()).acctsidp(getAcctsidp())
                .acctsidh(getAcctsidh()).acctsidv(getAcctsidv())
                .acctsido(getAcctsido())
                .FILLER_REDEFINE_88(getFILLER_REDEFINE_88())
                .acsttusc(getAcsttusc()).acsttusp(getAcsttusp())
                .acsttush(getAcsttush()).acsttusv(getAcsttusv())
                .acsttuso(getAcsttuso())
                .FILLER_REDEFINE_89(getFILLER_REDEFINE_89())
                .adtopenc(getAdtopenc()).adtopenp(getAdtopenp())
                .adtopenh(getAdtopenh()).adtopenv(getAdtopenv())
                .adtopeno(getAdtopeno())
                .FILLER_REDEFINE_90(getFILLER_REDEFINE_90())
                .acrdlimc(getAcrdlimc()).acrdlimp(getAcrdlimp())
                .acrdlimh(getAcrdlimh()).acrdlimv(getAcrdlimv())
                .acrdlimo(getAcrdlimo())
                .FILLER_REDEFINE_91(getFILLER_REDEFINE_91())
                .aexpdtc(getAexpdtc()).aexpdtp(getAexpdtp())
                .aexpdth(getAexpdth()).aexpdtv(getAexpdtv())
                .aexpdto(getAexpdto())
                .FILLER_REDEFINE_92(getFILLER_REDEFINE_92())
                .acshlimc(getAcshlimc()).acshlimp(getAcshlimp())
                .acshlimh(getAcshlimh()).acshlimv(getAcshlimv())
                .acshlimo(getAcshlimo())
                .FILLER_REDEFINE_93(getFILLER_REDEFINE_93())
                .areisdtc(getAreisdtc()).areisdtp(getAreisdtp())
                .areisdth(getAreisdth()).areisdtv(getAreisdtv())
                .areisdto(getAreisdto())
                .FILLER_REDEFINE_94(getFILLER_REDEFINE_94())
                .acurbalc(getAcurbalc()).acurbalp(getAcurbalp())
                .acurbalh(getAcurbalh()).acurbalv(getAcurbalv())
                .acurbalo(getAcurbalo())
                .FILLER_REDEFINE_95(getFILLER_REDEFINE_95())
                .acrcycrc(getAcrcycrc()).acrcycrp(getAcrcycrp())
                .acrcycrh(getAcrcycrh()).acrcycrv(getAcrcycrv())
                .acrcycro(getAcrcycro())
                .FILLER_REDEFINE_96(getFILLER_REDEFINE_96())
                .aaddgrpc(getAaddgrpc()).aaddgrpp(getAaddgrpp())
                .aaddgrph(getAaddgrph()).aaddgrpv(getAaddgrpv())
                .aaddgrpo(getAaddgrpo())
                .FILLER_REDEFINE_97(getFILLER_REDEFINE_97())
                .acrcydbc(getAcrcydbc()).acrcydbp(getAcrcydbp())
                .acrcydbh(getAcrcydbh()).acrcydbv(getAcrcydbv())
                .acrcydbo(getAcrcydbo())
                .FILLER_REDEFINE_98(getFILLER_REDEFINE_98())
                .acstnumc(getAcstnumc()).acstnump(getAcstnump())
                .acstnumh(getAcstnumh()).acstnumv(getAcstnumv())
                .acstnumo(getAcstnumo())
                .FILLER_REDEFINE_99(getFILLER_REDEFINE_99())
                .acstssnc(getAcstssnc()).acstssnp(getAcstssnp())
                .acstssnh(getAcstssnh()).acstssnv(getAcstssnv())
                .acstssno(getAcstssno())
                .FILLER_REDEFINE_100(getFILLER_REDEFINE_100())
                .acstdobc(getAcstdobc()).acstdobp(getAcstdobp())
                .acstdobh(getAcstdobh()).acstdobv(getAcstdobv())
                .acstdobo(getAcstdobo())
                .FILLER_REDEFINE_101(getFILLER_REDEFINE_101())
                .acstfcoc(getAcstfcoc()).acstfcop(getAcstfcop())
                .acstfcoh(getAcstfcoh()).acstfcov(getAcstfcov())
                .acstfcoo(getAcstfcoo())
                .FILLER_REDEFINE_102(getFILLER_REDEFINE_102())
                .acsfnamc(getAcsfnamc()).acsfnamp(getAcsfnamp())
                .acsfnamh(getAcsfnamh()).acsfnamv(getAcsfnamv())
                .acsfnamo(getAcsfnamo())
                .FILLER_REDEFINE_103(getFILLER_REDEFINE_103())
                .acsmnamc(getAcsmnamc()).acsmnamp(getAcsmnamp())
                .acsmnamh(getAcsmnamh()).acsmnamv(getAcsmnamv())
                .acsmnamo(getAcsmnamo())
                .FILLER_REDEFINE_104(getFILLER_REDEFINE_104())
                .acslnamc(getAcslnamc()).acslnamp(getAcslnamp())
                .acslnamh(getAcslnamh()).acslnamv(getAcslnamv())
                .acslnamo(getAcslnamo())
                .FILLER_REDEFINE_105(getFILLER_REDEFINE_105())
                .acsadl1c(getAcsadl1c()).acsadl1p(getAcsadl1p())
                .acsadl1h(getAcsadl1h()).acsadl1v(getAcsadl1v())
                .acsadl1o(getAcsadl1o())
                .FILLER_REDEFINE_106(getFILLER_REDEFINE_106())
                .acssttec(getAcssttec()).acssttep(getAcssttep())
                .acsstteh(getAcsstteh()).acssttev(getAcssttev())
                .acsstteo(getAcsstteo())
                .FILLER_REDEFINE_107(getFILLER_REDEFINE_107())
                .acsadl2c(getAcsadl2c()).acsadl2p(getAcsadl2p())
                .acsadl2h(getAcsadl2h()).acsadl2v(getAcsadl2v())
                .acsadl2o(getAcsadl2o())
                .FILLER_REDEFINE_108(getFILLER_REDEFINE_108())
                .acszipcc(getAcszipcc()).acszipcp(getAcszipcp())
                .acszipch(getAcszipch()).acszipcv(getAcszipcv())
                .acszipco(getAcszipco())
                .FILLER_REDEFINE_109(getFILLER_REDEFINE_109())
                .acscityc(getAcscityc()).acscityp(getAcscityp())
                .acscityh(getAcscityh()).acscityv(getAcscityv())
                .acscityo(getAcscityo())
                .FILLER_REDEFINE_110(getFILLER_REDEFINE_110())
                .acsctryc(getAcsctryc()).acsctryp(getAcsctryp())
                .acsctryh(getAcsctryh()).acsctryv(getAcsctryv())
                .acsctryo(getAcsctryo())
                .FILLER_REDEFINE_111(getFILLER_REDEFINE_111())
                .acsphn1c(getAcsphn1c()).acsphn1p(getAcsphn1p())
                .acsphn1h(getAcsphn1h()).acsphn1v(getAcsphn1v())
                .acsphn1o(getAcsphn1o())
                .FILLER_REDEFINE_112(getFILLER_REDEFINE_112())
                .acsgovtc(getAcsgovtc()).acsgovtp(getAcsgovtp())
                .acsgovth(getAcsgovth()).acsgovtv(getAcsgovtv())
                .acsgovto(getAcsgovto())
                .FILLER_REDEFINE_113(getFILLER_REDEFINE_113())
                .acsphn2c(getAcsphn2c()).acsphn2p(getAcsphn2p())
                .acsphn2h(getAcsphn2h()).acsphn2v(getAcsphn2v())
                .acsphn2o(getAcsphn2o())
                .FILLER_REDEFINE_114(getFILLER_REDEFINE_114())
                .acseftcc(getAcseftcc()).acseftcp(getAcseftcp())
                .acseftch(getAcseftch()).acseftcv(getAcseftcv())
                .acseftco(getAcseftco())
                .FILLER_REDEFINE_115(getFILLER_REDEFINE_115())
                .acspflgc(getAcspflgc()).acspflgp(getAcspflgp())
                .acspflgh(getAcspflgh()).acspflgv(getAcspflgv())
                .acspflgo(getAcspflgo())
                .FILLER_REDEFINE_116(getFILLER_REDEFINE_116())
                .infomsgc(getInfomsgc()).infomsgp(getInfomsgp())
                .infomsgh(getInfomsgh()).infomsgv(getInfomsgv())
                .infomsgo(getInfomsgo())
                .FILLER_REDEFINE_117(getFILLER_REDEFINE_117())
                .errmsgc(getErrmsgc()).errmsgp(getErrmsgp())
                .errmsgh(getErrmsgh()).errmsgv(getErrmsgv())
                .errmsgo(getErrmsgo()).build();
    }

    public void setCactvwao(String source) {
        setFILLER_REDEFINE_80(source.substring(0, 12));
        setFILLER_REDEFINE_81(source.substring(12, 15));
        setTrnnamec(source.substring(15, 16));
        setTrnnamep(source.substring(16, 17));
        setTrnnameh(source.substring(17, 18));
        setTrnnamev(source.substring(18, 19));
        setTrnnameo(source.substring(19, 23));
        setFILLER_REDEFINE_82(source.substring(23, 26));
        setTitle01c(source.substring(26, 27));
        setTitle01p(source.substring(27, 28));
        setTitle01h(source.substring(28, 29));
        setTitle01v(source.substring(29, 30));
        setTitle01o(source.substring(30, 70));
        setFILLER_REDEFINE_83(source.substring(70, 73));
        setCurdatec(source.substring(73, 74));
        setCurdatep(source.substring(74, 75));
        setCurdateh(source.substring(75, 76));
        setCurdatev(source.substring(76, 77));
        setCurdateo(source.substring(77, 85));
        setFILLER_REDEFINE_84(source.substring(85, 88));
        setPgmnamec(source.substring(88, 89));
        setPgmnamep(source.substring(89, 90));
        setPgmnameh(source.substring(90, 91));
        setPgmnamev(source.substring(91, 92));
        setPgmnameo(source.substring(92, 100));
        setFILLER_REDEFINE_85(source.substring(100, 103));
        setTitle02c(source.substring(103, 104));
        setTitle02p(source.substring(104, 105));
        setTitle02h(source.substring(105, 106));
        setTitle02v(source.substring(106, 107));
        setTitle02o(source.substring(107, 147));
        setFILLER_REDEFINE_86(source.substring(147, 150));
        setCurtimec(source.substring(150, 151));
        setCurtimep(source.substring(151, 152));
        setCurtimeh(source.substring(152, 153));
        setCurtimev(source.substring(153, 154));
        setCurtimeo(source.substring(154, 162));
        setFILLER_REDEFINE_87(source.substring(162, 165));
        setAcctsidc(source.substring(165, 166));
        setAcctsidp(source.substring(166, 167));
        setAcctsidh(source.substring(167, 168));
        setAcctsidv(source.substring(168, 169));
        setAcctsido(source.substring(169, 180));
        setFILLER_REDEFINE_88(source.substring(180, 183));
        setAcsttusc(source.substring(183, 184));
        setAcsttusp(source.substring(184, 185));
        setAcsttush(source.substring(185, 186));
        setAcsttusv(source.substring(186, 187));
        setAcsttuso(source.substring(187, 188));
        setFILLER_REDEFINE_89(source.substring(188, 191));
        setAdtopenc(source.substring(191, 192));
        setAdtopenp(source.substring(192, 193));
        setAdtopenh(source.substring(193, 194));
        setAdtopenv(source.substring(194, 195));
        setAdtopeno(source.substring(195, 205));
        setFILLER_REDEFINE_90(source.substring(205, 208));
        setAcrdlimc(source.substring(208, 209));
        setAcrdlimp(source.substring(209, 210));
        setAcrdlimh(source.substring(210, 211));
        setAcrdlimv(source.substring(211, 212));
        setAcrdlimo(source.substring(212, 227));
        setFILLER_REDEFINE_91(source.substring(227, 230));
        setAexpdtc(source.substring(230, 231));
        setAexpdtp(source.substring(231, 232));
        setAexpdth(source.substring(232, 233));
        setAexpdtv(source.substring(233, 234));
        setAexpdto(source.substring(234, 244));
        setFILLER_REDEFINE_92(source.substring(244, 247));
        setAcshlimc(source.substring(247, 248));
        setAcshlimp(source.substring(248, 249));
        setAcshlimh(source.substring(249, 250));
        setAcshlimv(source.substring(250, 251));
        setAcshlimo(source.substring(251, 266));
        setFILLER_REDEFINE_93(source.substring(266, 269));
        setAreisdtc(source.substring(269, 270));
        setAreisdtp(source.substring(270, 271));
        setAreisdth(source.substring(271, 272));
        setAreisdtv(source.substring(272, 273));
        setAreisdto(source.substring(273, 283));
        setFILLER_REDEFINE_94(source.substring(283, 286));
        setAcurbalc(source.substring(286, 287));
        setAcurbalp(source.substring(287, 288));
        setAcurbalh(source.substring(288, 289));
        setAcurbalv(source.substring(289, 290));
        setAcurbalo(source.substring(290, 305));
        setFILLER_REDEFINE_95(source.substring(305, 308));
        setAcrcycrc(source.substring(308, 309));
        setAcrcycrp(source.substring(309, 310));
        setAcrcycrh(source.substring(310, 311));
        setAcrcycrv(source.substring(311, 312));
        setAcrcycro(source.substring(312, 327));
        setFILLER_REDEFINE_96(source.substring(327, 330));
        setAaddgrpc(source.substring(330, 331));
        setAaddgrpp(source.substring(331, 332));
        setAaddgrph(source.substring(332, 333));
        setAaddgrpv(source.substring(333, 334));
        setAaddgrpo(source.substring(334, 344));
        setFILLER_REDEFINE_97(source.substring(344, 347));
        setAcrcydbc(source.substring(347, 348));
        setAcrcydbp(source.substring(348, 349));
        setAcrcydbh(source.substring(349, 350));
        setAcrcydbv(source.substring(350, 351));
        setAcrcydbo(source.substring(351, 366));
        setFILLER_REDEFINE_98(source.substring(366, 369));
        setAcstnumc(source.substring(369, 370));
        setAcstnump(source.substring(370, 371));
        setAcstnumh(source.substring(371, 372));
        setAcstnumv(source.substring(372, 373));
        setAcstnumo(source.substring(373, 382));
        setFILLER_REDEFINE_99(source.substring(382, 385));
        setAcstssnc(source.substring(385, 386));
        setAcstssnp(source.substring(386, 387));
        setAcstssnh(source.substring(387, 388));
        setAcstssnv(source.substring(388, 389));
        setAcstssno(source.substring(389, 401));
        setFILLER_REDEFINE_100(source.substring(401, 404));
        setAcstdobc(source.substring(404, 405));
        setAcstdobp(source.substring(405, 406));
        setAcstdobh(source.substring(406, 407));
        setAcstdobv(source.substring(407, 408));
        setAcstdobo(source.substring(408, 418));
        setFILLER_REDEFINE_101(source.substring(418, 421));
        setAcstfcoc(source.substring(421, 422));
        setAcstfcop(source.substring(422, 423));
        setAcstfcoh(source.substring(423, 424));
        setAcstfcov(source.substring(424, 425));
        setAcstfcoo(source.substring(425, 428));
        setFILLER_REDEFINE_102(source.substring(428, 431));
        setAcsfnamc(source.substring(431, 432));
        setAcsfnamp(source.substring(432, 433));
        setAcsfnamh(source.substring(433, 434));
        setAcsfnamv(source.substring(434, 435));
        setAcsfnamo(source.substring(435, 460));
        setFILLER_REDEFINE_103(source.substring(460, 463));
        setAcsmnamc(source.substring(463, 464));
        setAcsmnamp(source.substring(464, 465));
        setAcsmnamh(source.substring(465, 466));
        setAcsmnamv(source.substring(466, 467));
        setAcsmnamo(source.substring(467, 492));
        setFILLER_REDEFINE_104(source.substring(492, 495));
        setAcslnamc(source.substring(495, 496));
        setAcslnamp(source.substring(496, 497));
        setAcslnamh(source.substring(497, 498));
        setAcslnamv(source.substring(498, 499));
        setAcslnamo(source.substring(499, 524));
        setFILLER_REDEFINE_105(source.substring(524, 527));
        setAcsadl1c(source.substring(527, 528));
        setAcsadl1p(source.substring(528, 529));
        setAcsadl1h(source.substring(529, 530));
        setAcsadl1v(source.substring(530, 531));
        setAcsadl1o(source.substring(531, 581));
        setFILLER_REDEFINE_106(source.substring(581, 584));
        setAcssttec(source.substring(584, 585));
        setAcssttep(source.substring(585, 586));
        setAcsstteh(source.substring(586, 587));
        setAcssttev(source.substring(587, 588));
        setAcsstteo(source.substring(588, 590));
        setFILLER_REDEFINE_107(source.substring(590, 593));
        setAcsadl2c(source.substring(593, 594));
        setAcsadl2p(source.substring(594, 595));
        setAcsadl2h(source.substring(595, 596));
        setAcsadl2v(source.substring(596, 597));
        setAcsadl2o(source.substring(597, 647));
        setFILLER_REDEFINE_108(source.substring(647, 650));
        setAcszipcc(source.substring(650, 651));
        setAcszipcp(source.substring(651, 652));
        setAcszipch(source.substring(652, 653));
        setAcszipcv(source.substring(653, 654));
        setAcszipco(source.substring(654, 659));
        setFILLER_REDEFINE_109(source.substring(659, 662));
        setAcscityc(source.substring(662, 663));
        setAcscityp(source.substring(663, 664));
        setAcscityh(source.substring(664, 665));
        setAcscityv(source.substring(665, 666));
        setAcscityo(source.substring(666, 716));
        setFILLER_REDEFINE_110(source.substring(716, 719));
        setAcsctryc(source.substring(719, 720));
        setAcsctryp(source.substring(720, 721));
        setAcsctryh(source.substring(721, 722));
        setAcsctryv(source.substring(722, 723));
        setAcsctryo(source.substring(723, 726));
        setFILLER_REDEFINE_111(source.substring(726, 729));
        setAcsphn1c(source.substring(729, 730));
        setAcsphn1p(source.substring(730, 731));
        setAcsphn1h(source.substring(731, 732));
        setAcsphn1v(source.substring(732, 733));
        setAcsphn1o(source.substring(733, 746));
        setFILLER_REDEFINE_112(source.substring(746, 749));
        setAcsgovtc(source.substring(749, 750));
        setAcsgovtp(source.substring(750, 751));
        setAcsgovth(source.substring(751, 752));
        setAcsgovtv(source.substring(752, 753));
        setAcsgovto(source.substring(753, 773));
        setFILLER_REDEFINE_113(source.substring(773, 776));
        setAcsphn2c(source.substring(776, 777));
        setAcsphn2p(source.substring(777, 778));
        setAcsphn2h(source.substring(778, 779));
        setAcsphn2v(source.substring(779, 780));
        setAcsphn2o(source.substring(780, 793));
        setFILLER_REDEFINE_114(source.substring(793, 796));
        setAcseftcc(source.substring(796, 797));
        setAcseftcp(source.substring(797, 798));
        setAcseftch(source.substring(798, 799));
        setAcseftcv(source.substring(799, 800));
        setAcseftco(source.substring(800, 810));
        setFILLER_REDEFINE_115(source.substring(810, 813));
        setAcspflgc(source.substring(813, 814));
        setAcspflgp(source.substring(814, 815));
        setAcspflgh(source.substring(815, 816));
        setAcspflgv(source.substring(816, 817));
        setAcspflgo(source.substring(817, 818));
        setFILLER_REDEFINE_116(source.substring(818, 821));
        setInfomsgc(source.substring(821, 822));
        setInfomsgp(source.substring(822, 823));
        setInfomsgh(source.substring(823, 824));
        setInfomsgv(source.substring(824, 825));
        setInfomsgo(source.substring(825, 870));
        setFILLER_REDEFINE_117(source.substring(870, 873));
        setErrmsgc(source.substring(873, 874));
        setErrmsgp(source.substring(874, 875));
        setErrmsgh(source.substring(875, 876));
        setErrmsgv(source.substring(876, 877));
        setErrmsgo(source.substring(877, 955));
    }

    public void setCactvwao(CoactvwcCactvwao source) {
        setCactvwao(source.get());
    }

    public String getFILLER_REDEFINE_80() {
        return getCactvwai().getFILLER_1();
    }

    public void setFILLER_REDEFINE_80(String source) {
        getCactvwai().setFILLER_1(source);
    }

    public String getFILLER_REDEFINE_81() {
        return CobStream.convShortToString((short) getCactvwai().getTrnnamel())
                + getCactvwai().getTrnnamef();
    }

    public void setFILLER_REDEFINE_81(String source) {
        try {
            getCactvwai().setTrnnamel(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setTrnnamel(0);
        }
        getCactvwai().setTrnnamef(source.substring(2, 3));
    }

    public String getTrnnamec() {
        return getCactvwai().getFILLER_2().substring(0, 1);
    }

    public void setTrnnamec(String source) {
        getCactvwai().setFILLER_2(
                StringUtils.overlay(getCactvwai().getFILLER_2(), source, 0, 1));
    }

    public String getTrnnamep() {
        return getCactvwai().getFILLER_2().substring(1, 2);
    }

    public void setTrnnamep(String source) {
        getCactvwai().setFILLER_2(
                StringUtils.overlay(getCactvwai().getFILLER_2(), source, 1, 2));
    }

    public String getTrnnameh() {
        return getCactvwai().getFILLER_2().substring(2, 3);
    }

    public void setTrnnameh(String source) {
        getCactvwai().setFILLER_2(
                StringUtils.overlay(getCactvwai().getFILLER_2(), source, 2, 3));
    }

    public String getTrnnamev() {
        return getCactvwai().getFILLER_2().substring(3, 4);
    }

    public void setTrnnamev(String source) {
        getCactvwai().setFILLER_2(
                StringUtils.overlay(getCactvwai().getFILLER_2(), source, 3, 4));
    }

    public String getTrnnameo() {
        return getCactvwai().getTrnnamei();
    }

    public void setTrnnameo(String source) {
        getCactvwai().setTrnnamei(source);
    }

    public String getFILLER_REDEFINE_82() {
        return CobStream.convShortToString((short) getCactvwai().getTitle01l())
                + getCactvwai().getTitle01f();
    }

    public void setFILLER_REDEFINE_82(String source) {
        try {
            getCactvwai().setTitle01l(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setTitle01l(0);
        }
        getCactvwai().setTitle01f(source.substring(2, 3));
    }

    public String getTitle01c() {
        return getCactvwai().getFILLER_3().substring(0, 1);
    }

    public void setTitle01c(String source) {
        getCactvwai().setFILLER_3(
                StringUtils.overlay(getCactvwai().getFILLER_3(), source, 0, 1));
    }

    public String getTitle01p() {
        return getCactvwai().getFILLER_3().substring(1, 2);
    }

    public void setTitle01p(String source) {
        getCactvwai().setFILLER_3(
                StringUtils.overlay(getCactvwai().getFILLER_3(), source, 1, 2));
    }

    public String getTitle01h() {
        return getCactvwai().getFILLER_3().substring(2, 3);
    }

    public void setTitle01h(String source) {
        getCactvwai().setFILLER_3(
                StringUtils.overlay(getCactvwai().getFILLER_3(), source, 2, 3));
    }

    public String getTitle01v() {
        return getCactvwai().getFILLER_3().substring(3, 4);
    }

    public void setTitle01v(String source) {
        getCactvwai().setFILLER_3(
                StringUtils.overlay(getCactvwai().getFILLER_3(), source, 3, 4));
    }

    public String getTitle01o() {
        return getCactvwai().getTitle01i();
    }

    public void setTitle01o(String source) {
        getCactvwai().setTitle01i(source);
    }

    public String getFILLER_REDEFINE_83() {
        return CobStream.convShortToString((short) getCactvwai().getCurdatel())
                + getCactvwai().getCurdatef();
    }

    public void setFILLER_REDEFINE_83(String source) {
        try {
            getCactvwai().setCurdatel(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setCurdatel(0);
        }
        getCactvwai().setCurdatef(source.substring(2, 3));
    }

    public String getCurdatec() {
        return getCactvwai().getFILLER_4().substring(0, 1);
    }

    public void setCurdatec(String source) {
        getCactvwai().setFILLER_4(
                StringUtils.overlay(getCactvwai().getFILLER_4(), source, 0, 1));
    }

    public String getCurdatep() {
        return getCactvwai().getFILLER_4().substring(1, 2);
    }

    public void setCurdatep(String source) {
        getCactvwai().setFILLER_4(
                StringUtils.overlay(getCactvwai().getFILLER_4(), source, 1, 2));
    }

    public String getCurdateh() {
        return getCactvwai().getFILLER_4().substring(2, 3);
    }

    public void setCurdateh(String source) {
        getCactvwai().setFILLER_4(
                StringUtils.overlay(getCactvwai().getFILLER_4(), source, 2, 3));
    }

    public String getCurdatev() {
        return getCactvwai().getFILLER_4().substring(3, 4);
    }

    public void setCurdatev(String source) {
        getCactvwai().setFILLER_4(
                StringUtils.overlay(getCactvwai().getFILLER_4(), source, 3, 4));
    }

    public String getCurdateo() {
        return getCactvwai().getCurdatei();
    }

    public void setCurdateo(String source) {
        getCactvwai().setCurdatei(source);
    }

    public String getFILLER_REDEFINE_84() {
        return CobStream.convShortToString((short) getCactvwai().getPgmnamel())
                + getCactvwai().getPgmnamef();
    }

    public void setFILLER_REDEFINE_84(String source) {
        try {
            getCactvwai().setPgmnamel(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setPgmnamel(0);
        }
        getCactvwai().setPgmnamef(source.substring(2, 3));
    }

    public String getPgmnamec() {
        return getCactvwai().getFILLER_5().substring(0, 1);
    }

    public void setPgmnamec(String source) {
        getCactvwai().setFILLER_5(
                StringUtils.overlay(getCactvwai().getFILLER_5(), source, 0, 1));
    }

    public String getPgmnamep() {
        return getCactvwai().getFILLER_5().substring(1, 2);
    }

    public void setPgmnamep(String source) {
        getCactvwai().setFILLER_5(
                StringUtils.overlay(getCactvwai().getFILLER_5(), source, 1, 2));
    }

    public String getPgmnameh() {
        return getCactvwai().getFILLER_5().substring(2, 3);
    }

    public void setPgmnameh(String source) {
        getCactvwai().setFILLER_5(
                StringUtils.overlay(getCactvwai().getFILLER_5(), source, 2, 3));
    }

    public String getPgmnamev() {
        return getCactvwai().getFILLER_5().substring(3, 4);
    }

    public void setPgmnamev(String source) {
        getCactvwai().setFILLER_5(
                StringUtils.overlay(getCactvwai().getFILLER_5(), source, 3, 4));
    }

    public String getPgmnameo() {
        return getCactvwai().getPgmnamei();
    }

    public void setPgmnameo(String source) {
        getCactvwai().setPgmnamei(source);
    }

    public String getFILLER_REDEFINE_85() {
        return CobStream.convShortToString((short) getCactvwai().getTitle02l())
                + getCactvwai().getTitle02f();
    }

    public void setFILLER_REDEFINE_85(String source) {
        try {
            getCactvwai().setTitle02l(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setTitle02l(0);
        }
        getCactvwai().setTitle02f(source.substring(2, 3));
    }

    public String getTitle02c() {
        return getCactvwai().getFILLER_6().substring(0, 1);
    }

    public void setTitle02c(String source) {
        getCactvwai().setFILLER_6(
                StringUtils.overlay(getCactvwai().getFILLER_6(), source, 0, 1));
    }

    public String getTitle02p() {
        return getCactvwai().getFILLER_6().substring(1, 2);
    }

    public void setTitle02p(String source) {
        getCactvwai().setFILLER_6(
                StringUtils.overlay(getCactvwai().getFILLER_6(), source, 1, 2));
    }

    public String getTitle02h() {
        return getCactvwai().getFILLER_6().substring(2, 3);
    }

    public void setTitle02h(String source) {
        getCactvwai().setFILLER_6(
                StringUtils.overlay(getCactvwai().getFILLER_6(), source, 2, 3));
    }

    public String getTitle02v() {
        return getCactvwai().getFILLER_6().substring(3, 4);
    }

    public void setTitle02v(String source) {
        getCactvwai().setFILLER_6(
                StringUtils.overlay(getCactvwai().getFILLER_6(), source, 3, 4));
    }

    public String getTitle02o() {
        return getCactvwai().getTitle02i();
    }

    public void setTitle02o(String source) {
        getCactvwai().setTitle02i(source);
    }

    public String getFILLER_REDEFINE_86() {
        return CobStream.convShortToString((short) getCactvwai().getCurtimel())
                + getCactvwai().getCurtimef();
    }

    public void setFILLER_REDEFINE_86(String source) {
        try {
            getCactvwai().setCurtimel(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setCurtimel(0);
        }
        getCactvwai().setCurtimef(source.substring(2, 3));
    }

    public String getCurtimec() {
        return getCactvwai().getFILLER_7().substring(0, 1);
    }

    public void setCurtimec(String source) {
        getCactvwai().setFILLER_7(
                StringUtils.overlay(getCactvwai().getFILLER_7(), source, 0, 1));
    }

    public String getCurtimep() {
        return getCactvwai().getFILLER_7().substring(1, 2);
    }

    public void setCurtimep(String source) {
        getCactvwai().setFILLER_7(
                StringUtils.overlay(getCactvwai().getFILLER_7(), source, 1, 2));
    }

    public String getCurtimeh() {
        return getCactvwai().getFILLER_7().substring(2, 3);
    }

    public void setCurtimeh(String source) {
        getCactvwai().setFILLER_7(
                StringUtils.overlay(getCactvwai().getFILLER_7(), source, 2, 3));
    }

    public String getCurtimev() {
        return getCactvwai().getFILLER_7().substring(3, 4);
    }

    public void setCurtimev(String source) {
        getCactvwai().setFILLER_7(
                StringUtils.overlay(getCactvwai().getFILLER_7(), source, 3, 4));
    }

    public String getCurtimeo() {
        return getCactvwai().getCurtimei();
    }

    public void setCurtimeo(String source) {
        getCactvwai().setCurtimei(source);
    }

    public String getFILLER_REDEFINE_87() {
        return CobStream.convShortToString((short) getCactvwai().getAcctsidl())
                + getCactvwai().getAcctsidf();
    }

    public void setFILLER_REDEFINE_87(String source) {
        try {
            getCactvwai().setAcctsidl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcctsidl(0);
        }
        getCactvwai().setAcctsidf(source.substring(2, 3));
    }

    public String getAcctsidc() {
        return getCactvwai().getFILLER_8().substring(0, 1);
    }

    public void setAcctsidc(String source) {
        getCactvwai().setFILLER_8(
                StringUtils.overlay(getCactvwai().getFILLER_8(), source, 0, 1));
    }

    public String getAcctsidp() {
        return getCactvwai().getFILLER_8().substring(1, 2);
    }

    public void setAcctsidp(String source) {
        getCactvwai().setFILLER_8(
                StringUtils.overlay(getCactvwai().getFILLER_8(), source, 1, 2));
    }

    public String getAcctsidh() {
        return getCactvwai().getFILLER_8().substring(2, 3);
    }

    public void setAcctsidh(String source) {
        getCactvwai().setFILLER_8(
                StringUtils.overlay(getCactvwai().getFILLER_8(), source, 2, 3));
    }

    public String getAcctsidv() {
        return getCactvwai().getFILLER_8().substring(3, 4);
    }

    public void setAcctsidv(String source) {
        getCactvwai().setFILLER_8(
                StringUtils.overlay(getCactvwai().getFILLER_8(), source, 3, 4));
    }

    public String getAcctsido() {
        return CobStream.convZonedLongToString(getCactvwai().getAcctsidi(), 11);
    }

    public void setAcctsido(String source) {
        try {
            getCactvwai().setAcctsidi(
                    CobStream.convZonedStringToLong(source, 11));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcctsidi(0);
        }
    }

    public String getFILLER_REDEFINE_88() {
        return CobStream.convShortToString((short) getCactvwai().getAcsttusl())
                + getCactvwai().getAcsttusf();
    }

    public void setFILLER_REDEFINE_88(String source) {
        try {
            getCactvwai().setAcsttusl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcsttusl(0);
        }
        getCactvwai().setAcsttusf(source.substring(2, 3));
    }

    public String getAcsttusc() {
        return getCactvwai().getFILLER_9().substring(0, 1);
    }

    public void setAcsttusc(String source) {
        getCactvwai().setFILLER_9(
                StringUtils.overlay(getCactvwai().getFILLER_9(), source, 0, 1));
    }

    public String getAcsttusp() {
        return getCactvwai().getFILLER_9().substring(1, 2);
    }

    public void setAcsttusp(String source) {
        getCactvwai().setFILLER_9(
                StringUtils.overlay(getCactvwai().getFILLER_9(), source, 1, 2));
    }

    public String getAcsttush() {
        return getCactvwai().getFILLER_9().substring(2, 3);
    }

    public void setAcsttush(String source) {
        getCactvwai().setFILLER_9(
                StringUtils.overlay(getCactvwai().getFILLER_9(), source, 2, 3));
    }

    public String getAcsttusv() {
        return getCactvwai().getFILLER_9().substring(3, 4);
    }

    public void setAcsttusv(String source) {
        getCactvwai().setFILLER_9(
                StringUtils.overlay(getCactvwai().getFILLER_9(), source, 3, 4));
    }

    public String getAcsttuso() {
        return getCactvwai().getAcsttusi();
    }

    public void setAcsttuso(String source) {
        getCactvwai().setAcsttusi(source);
    }

    public String getFILLER_REDEFINE_89() {
        return CobStream.convShortToString((short) getCactvwai().getAdtopenl())
                + getCactvwai().getAdtopenf();
    }

    public void setFILLER_REDEFINE_89(String source) {
        try {
            getCactvwai().setAdtopenl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAdtopenl(0);
        }
        getCactvwai().setAdtopenf(source.substring(2, 3));
    }

    public String getAdtopenc() {
        return getCactvwai().getFILLER_10().substring(0, 1);
    }

    public void setAdtopenc(String source) {
        getCactvwai()
                .setFILLER_10(
                        StringUtils.overlay(getCactvwai().getFILLER_10(),
                                source, 0, 1));
    }

    public String getAdtopenp() {
        return getCactvwai().getFILLER_10().substring(1, 2);
    }

    public void setAdtopenp(String source) {
        getCactvwai()
                .setFILLER_10(
                        StringUtils.overlay(getCactvwai().getFILLER_10(),
                                source, 1, 2));
    }

    public String getAdtopenh() {
        return getCactvwai().getFILLER_10().substring(2, 3);
    }

    public void setAdtopenh(String source) {
        getCactvwai()
                .setFILLER_10(
                        StringUtils.overlay(getCactvwai().getFILLER_10(),
                                source, 2, 3));
    }

    public String getAdtopenv() {
        return getCactvwai().getFILLER_10().substring(3, 4);
    }

    public void setAdtopenv(String source) {
        getCactvwai()
                .setFILLER_10(
                        StringUtils.overlay(getCactvwai().getFILLER_10(),
                                source, 3, 4));
    }

    public String getAdtopeno() {
        return getCactvwai().getAdtopeni();
    }

    public void setAdtopeno(String source) {
        getCactvwai().setAdtopeni(source);
    }

    public String getFILLER_REDEFINE_90() {
        return CobStream.convShortToString((short) getCactvwai().getAcrdliml())
                + getCactvwai().getAcrdlimf();
    }

    public void setFILLER_REDEFINE_90(String source) {
        try {
            getCactvwai().setAcrdliml(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcrdliml(0);
        }
        getCactvwai().setAcrdlimf(source.substring(2, 3));
    }

    public String getAcrdlimc() {
        return getCactvwai().getFILLER_11().substring(0, 1);
    }

    public void setAcrdlimc(String source) {
        getCactvwai()
                .setFILLER_11(
                        StringUtils.overlay(getCactvwai().getFILLER_11(),
                                source, 0, 1));
    }

    public String getAcrdlimp() {
        return getCactvwai().getFILLER_11().substring(1, 2);
    }

    public void setAcrdlimp(String source) {
        getCactvwai()
                .setFILLER_11(
                        StringUtils.overlay(getCactvwai().getFILLER_11(),
                                source, 1, 2));
    }

    public String getAcrdlimh() {
        return getCactvwai().getFILLER_11().substring(2, 3);
    }

    public void setAcrdlimh(String source) {
        getCactvwai()
                .setFILLER_11(
                        StringUtils.overlay(getCactvwai().getFILLER_11(),
                                source, 2, 3));
    }

    public String getAcrdlimv() {
        return getCactvwai().getFILLER_11().substring(3, 4);
    }

    public void setAcrdlimv(String source) {
        getCactvwai()
                .setFILLER_11(
                        StringUtils.overlay(getCactvwai().getFILLER_11(),
                                source, 3, 4));
    }

    public String getAcrdlimo() {
        return getCactvwai().getAcrdlimi();
    }

    public void setAcrdlimo(String source) {
        getCactvwai().setAcrdlimi(source);
    }

    public String getFILLER_REDEFINE_91() {
        return CobStream.convShortToString((short) getCactvwai().getAexpdtl())
                + getCactvwai().getAexpdtf();
    }

    public void setFILLER_REDEFINE_91(String source) {
        try {
            getCactvwai().setAexpdtl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAexpdtl(0);
        }
        getCactvwai().setAexpdtf(source.substring(2, 3));
    }

    public String getAexpdtc() {
        return getCactvwai().getFILLER_12().substring(0, 1);
    }

    public void setAexpdtc(String source) {
        getCactvwai()
                .setFILLER_12(
                        StringUtils.overlay(getCactvwai().getFILLER_12(),
                                source, 0, 1));
    }

    public String getAexpdtp() {
        return getCactvwai().getFILLER_12().substring(1, 2);
    }

    public void setAexpdtp(String source) {
        getCactvwai()
                .setFILLER_12(
                        StringUtils.overlay(getCactvwai().getFILLER_12(),
                                source, 1, 2));
    }

    public String getAexpdth() {
        return getCactvwai().getFILLER_12().substring(2, 3);
    }

    public void setAexpdth(String source) {
        getCactvwai()
                .setFILLER_12(
                        StringUtils.overlay(getCactvwai().getFILLER_12(),
                                source, 2, 3));
    }

    public String getAexpdtv() {
        return getCactvwai().getFILLER_12().substring(3, 4);
    }

    public void setAexpdtv(String source) {
        getCactvwai()
                .setFILLER_12(
                        StringUtils.overlay(getCactvwai().getFILLER_12(),
                                source, 3, 4));
    }

    public String getAexpdto() {
        return getCactvwai().getAexpdti();
    }

    public void setAexpdto(String source) {
        getCactvwai().setAexpdti(source);
    }

    public String getFILLER_REDEFINE_92() {
        return CobStream.convShortToString((short) getCactvwai().getAcshliml())
                + getCactvwai().getAcshlimf();
    }

    public void setFILLER_REDEFINE_92(String source) {
        try {
            getCactvwai().setAcshliml(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcshliml(0);
        }
        getCactvwai().setAcshlimf(source.substring(2, 3));
    }

    public String getAcshlimc() {
        return getCactvwai().getFILLER_13().substring(0, 1);
    }

    public void setAcshlimc(String source) {
        getCactvwai()
                .setFILLER_13(
                        StringUtils.overlay(getCactvwai().getFILLER_13(),
                                source, 0, 1));
    }

    public String getAcshlimp() {
        return getCactvwai().getFILLER_13().substring(1, 2);
    }

    public void setAcshlimp(String source) {
        getCactvwai()
                .setFILLER_13(
                        StringUtils.overlay(getCactvwai().getFILLER_13(),
                                source, 1, 2));
    }

    public String getAcshlimh() {
        return getCactvwai().getFILLER_13().substring(2, 3);
    }

    public void setAcshlimh(String source) {
        getCactvwai()
                .setFILLER_13(
                        StringUtils.overlay(getCactvwai().getFILLER_13(),
                                source, 2, 3));
    }

    public String getAcshlimv() {
        return getCactvwai().getFILLER_13().substring(3, 4);
    }

    public void setAcshlimv(String source) {
        getCactvwai()
                .setFILLER_13(
                        StringUtils.overlay(getCactvwai().getFILLER_13(),
                                source, 3, 4));
    }

    public String getAcshlimo() {
        return getCactvwai().getAcshlimi();
    }

    public void setAcshlimo(String source) {
        getCactvwai().setAcshlimi(source);
    }

    public String getFILLER_REDEFINE_93() {
        return CobStream.convShortToString((short) getCactvwai().getAreisdtl())
                + getCactvwai().getAreisdtf();
    }

    public void setFILLER_REDEFINE_93(String source) {
        try {
            getCactvwai().setAreisdtl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAreisdtl(0);
        }
        getCactvwai().setAreisdtf(source.substring(2, 3));
    }

    public String getAreisdtc() {
        return getCactvwai().getFILLER_14().substring(0, 1);
    }

    public void setAreisdtc(String source) {
        getCactvwai()
                .setFILLER_14(
                        StringUtils.overlay(getCactvwai().getFILLER_14(),
                                source, 0, 1));
    }

    public String getAreisdtp() {
        return getCactvwai().getFILLER_14().substring(1, 2);
    }

    public void setAreisdtp(String source) {
        getCactvwai()
                .setFILLER_14(
                        StringUtils.overlay(getCactvwai().getFILLER_14(),
                                source, 1, 2));
    }

    public String getAreisdth() {
        return getCactvwai().getFILLER_14().substring(2, 3);
    }

    public void setAreisdth(String source) {
        getCactvwai()
                .setFILLER_14(
                        StringUtils.overlay(getCactvwai().getFILLER_14(),
                                source, 2, 3));
    }

    public String getAreisdtv() {
        return getCactvwai().getFILLER_14().substring(3, 4);
    }

    public void setAreisdtv(String source) {
        getCactvwai()
                .setFILLER_14(
                        StringUtils.overlay(getCactvwai().getFILLER_14(),
                                source, 3, 4));
    }

    public String getAreisdto() {
        return getCactvwai().getAreisdti();
    }

    public void setAreisdto(String source) {
        getCactvwai().setAreisdti(source);
    }

    public String getFILLER_REDEFINE_94() {
        return CobStream.convShortToString((short) getCactvwai().getAcurball())
                + getCactvwai().getAcurbalf();
    }

    public void setFILLER_REDEFINE_94(String source) {
        try {
            getCactvwai().setAcurball(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcurball(0);
        }
        getCactvwai().setAcurbalf(source.substring(2, 3));
    }

    public String getAcurbalc() {
        return getCactvwai().getFILLER_15().substring(0, 1);
    }

    public void setAcurbalc(String source) {
        getCactvwai()
                .setFILLER_15(
                        StringUtils.overlay(getCactvwai().getFILLER_15(),
                                source, 0, 1));
    }

    public String getAcurbalp() {
        return getCactvwai().getFILLER_15().substring(1, 2);
    }

    public void setAcurbalp(String source) {
        getCactvwai()
                .setFILLER_15(
                        StringUtils.overlay(getCactvwai().getFILLER_15(),
                                source, 1, 2));
    }

    public String getAcurbalh() {
        return getCactvwai().getFILLER_15().substring(2, 3);
    }

    public void setAcurbalh(String source) {
        getCactvwai()
                .setFILLER_15(
                        StringUtils.overlay(getCactvwai().getFILLER_15(),
                                source, 2, 3));
    }

    public String getAcurbalv() {
        return getCactvwai().getFILLER_15().substring(3, 4);
    }

    public void setAcurbalv(String source) {
        getCactvwai()
                .setFILLER_15(
                        StringUtils.overlay(getCactvwai().getFILLER_15(),
                                source, 3, 4));
    }

    public String getAcurbalo() {
        return getCactvwai().getAcurbali();
    }

    public void setAcurbalo(String source) {
        getCactvwai().setAcurbali(source);
    }

    public String getFILLER_REDEFINE_95() {
        return CobStream.convShortToString((short) getCactvwai().getAcrcycrl())
                + getCactvwai().getAcrcycrf();
    }

    public void setFILLER_REDEFINE_95(String source) {
        try {
            getCactvwai().setAcrcycrl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcrcycrl(0);
        }
        getCactvwai().setAcrcycrf(source.substring(2, 3));
    }

    public String getAcrcycrc() {
        return getCactvwai().getFILLER_16().substring(0, 1);
    }

    public void setAcrcycrc(String source) {
        getCactvwai()
                .setFILLER_16(
                        StringUtils.overlay(getCactvwai().getFILLER_16(),
                                source, 0, 1));
    }

    public String getAcrcycrp() {
        return getCactvwai().getFILLER_16().substring(1, 2);
    }

    public void setAcrcycrp(String source) {
        getCactvwai()
                .setFILLER_16(
                        StringUtils.overlay(getCactvwai().getFILLER_16(),
                                source, 1, 2));
    }

    public String getAcrcycrh() {
        return getCactvwai().getFILLER_16().substring(2, 3);
    }

    public void setAcrcycrh(String source) {
        getCactvwai()
                .setFILLER_16(
                        StringUtils.overlay(getCactvwai().getFILLER_16(),
                                source, 2, 3));
    }

    public String getAcrcycrv() {
        return getCactvwai().getFILLER_16().substring(3, 4);
    }

    public void setAcrcycrv(String source) {
        getCactvwai()
                .setFILLER_16(
                        StringUtils.overlay(getCactvwai().getFILLER_16(),
                                source, 3, 4));
    }

    public String getAcrcycro() {
        return getCactvwai().getAcrcycri();
    }

    public void setAcrcycro(String source) {
        getCactvwai().setAcrcycri(source);
    }

    public String getFILLER_REDEFINE_96() {
        return CobStream.convShortToString((short) getCactvwai().getAaddgrpl())
                + getCactvwai().getAaddgrpf();
    }

    public void setFILLER_REDEFINE_96(String source) {
        try {
            getCactvwai().setAaddgrpl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAaddgrpl(0);
        }
        getCactvwai().setAaddgrpf(source.substring(2, 3));
    }

    public String getAaddgrpc() {
        return getCactvwai().getFILLER_17().substring(0, 1);
    }

    public void setAaddgrpc(String source) {
        getCactvwai()
                .setFILLER_17(
                        StringUtils.overlay(getCactvwai().getFILLER_17(),
                                source, 0, 1));
    }

    public String getAaddgrpp() {
        return getCactvwai().getFILLER_17().substring(1, 2);
    }

    public void setAaddgrpp(String source) {
        getCactvwai()
                .setFILLER_17(
                        StringUtils.overlay(getCactvwai().getFILLER_17(),
                                source, 1, 2));
    }

    public String getAaddgrph() {
        return getCactvwai().getFILLER_17().substring(2, 3);
    }

    public void setAaddgrph(String source) {
        getCactvwai()
                .setFILLER_17(
                        StringUtils.overlay(getCactvwai().getFILLER_17(),
                                source, 2, 3));
    }

    public String getAaddgrpv() {
        return getCactvwai().getFILLER_17().substring(3, 4);
    }

    public void setAaddgrpv(String source) {
        getCactvwai()
                .setFILLER_17(
                        StringUtils.overlay(getCactvwai().getFILLER_17(),
                                source, 3, 4));
    }

    public String getAaddgrpo() {
        return getCactvwai().getAaddgrpi();
    }

    public void setAaddgrpo(String source) {
        getCactvwai().setAaddgrpi(source);
    }

    public String getFILLER_REDEFINE_97() {
        return CobStream.convShortToString((short) getCactvwai().getAcrcydbl())
                + getCactvwai().getAcrcydbf();
    }

    public void setFILLER_REDEFINE_97(String source) {
        try {
            getCactvwai().setAcrcydbl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcrcydbl(0);
        }
        getCactvwai().setAcrcydbf(source.substring(2, 3));
    }

    public String getAcrcydbc() {
        return getCactvwai().getFILLER_18().substring(0, 1);
    }

    public void setAcrcydbc(String source) {
        getCactvwai()
                .setFILLER_18(
                        StringUtils.overlay(getCactvwai().getFILLER_18(),
                                source, 0, 1));
    }

    public String getAcrcydbp() {
        return getCactvwai().getFILLER_18().substring(1, 2);
    }

    public void setAcrcydbp(String source) {
        getCactvwai()
                .setFILLER_18(
                        StringUtils.overlay(getCactvwai().getFILLER_18(),
                                source, 1, 2));
    }

    public String getAcrcydbh() {
        return getCactvwai().getFILLER_18().substring(2, 3);
    }

    public void setAcrcydbh(String source) {
        getCactvwai()
                .setFILLER_18(
                        StringUtils.overlay(getCactvwai().getFILLER_18(),
                                source, 2, 3));
    }

    public String getAcrcydbv() {
        return getCactvwai().getFILLER_18().substring(3, 4);
    }

    public void setAcrcydbv(String source) {
        getCactvwai()
                .setFILLER_18(
                        StringUtils.overlay(getCactvwai().getFILLER_18(),
                                source, 3, 4));
    }

    public String getAcrcydbo() {
        return getCactvwai().getAcrcydbi();
    }

    public void setAcrcydbo(String source) {
        getCactvwai().setAcrcydbi(source);
    }

    public String getFILLER_REDEFINE_98() {
        return CobStream.convShortToString((short) getCactvwai().getAcstnuml())
                + getCactvwai().getAcstnumf();
    }

    public void setFILLER_REDEFINE_98(String source) {
        try {
            getCactvwai().setAcstnuml(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcstnuml(0);
        }
        getCactvwai().setAcstnumf(source.substring(2, 3));
    }

    public String getAcstnumc() {
        return getCactvwai().getFILLER_19().substring(0, 1);
    }

    public void setAcstnumc(String source) {
        getCactvwai()
                .setFILLER_19(
                        StringUtils.overlay(getCactvwai().getFILLER_19(),
                                source, 0, 1));
    }

    public String getAcstnump() {
        return getCactvwai().getFILLER_19().substring(1, 2);
    }

    public void setAcstnump(String source) {
        getCactvwai()
                .setFILLER_19(
                        StringUtils.overlay(getCactvwai().getFILLER_19(),
                                source, 1, 2));
    }

    public String getAcstnumh() {
        return getCactvwai().getFILLER_19().substring(2, 3);
    }

    public void setAcstnumh(String source) {
        getCactvwai()
                .setFILLER_19(
                        StringUtils.overlay(getCactvwai().getFILLER_19(),
                                source, 2, 3));
    }

    public String getAcstnumv() {
        return getCactvwai().getFILLER_19().substring(3, 4);
    }

    public void setAcstnumv(String source) {
        getCactvwai()
                .setFILLER_19(
                        StringUtils.overlay(getCactvwai().getFILLER_19(),
                                source, 3, 4));
    }

    public String getAcstnumo() {
        return getCactvwai().getAcstnumi();
    }

    public void setAcstnumo(String source) {
        getCactvwai().setAcstnumi(source);
    }

    public String getFILLER_REDEFINE_99() {
        return CobStream.convShortToString((short) getCactvwai().getAcstssnl())
                + getCactvwai().getAcstssnf();
    }

    public void setFILLER_REDEFINE_99(String source) {
        try {
            getCactvwai().setAcstssnl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcstssnl(0);
        }
        getCactvwai().setAcstssnf(source.substring(2, 3));
    }

    public String getAcstssnc() {
        return getCactvwai().getFILLER_20().substring(0, 1);
    }

    public void setAcstssnc(String source) {
        getCactvwai()
                .setFILLER_20(
                        StringUtils.overlay(getCactvwai().getFILLER_20(),
                                source, 0, 1));
    }

    public String getAcstssnp() {
        return getCactvwai().getFILLER_20().substring(1, 2);
    }

    public void setAcstssnp(String source) {
        getCactvwai()
                .setFILLER_20(
                        StringUtils.overlay(getCactvwai().getFILLER_20(),
                                source, 1, 2));
    }

    public String getAcstssnh() {
        return getCactvwai().getFILLER_20().substring(2, 3);
    }

    public void setAcstssnh(String source) {
        getCactvwai()
                .setFILLER_20(
                        StringUtils.overlay(getCactvwai().getFILLER_20(),
                                source, 2, 3));
    }

    public String getAcstssnv() {
        return getCactvwai().getFILLER_20().substring(3, 4);
    }

    public void setAcstssnv(String source) {
        getCactvwai()
                .setFILLER_20(
                        StringUtils.overlay(getCactvwai().getFILLER_20(),
                                source, 3, 4));
    }

    public String getAcstssno() {
        return getCactvwai().getAcstssni();
    }

    public void setAcstssno(String source) {
        getCactvwai().setAcstssni(source);
    }

    public String getFILLER_REDEFINE_100() {
        return CobStream.convShortToString((short) getCactvwai().getAcstdobl())
                + getCactvwai().getAcstdobf();
    }

    public void setFILLER_REDEFINE_100(String source) {
        try {
            getCactvwai().setAcstdobl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcstdobl(0);
        }
        getCactvwai().setAcstdobf(source.substring(2, 3));
    }

    public String getAcstdobc() {
        return getCactvwai().getFILLER_21().substring(0, 1);
    }

    public void setAcstdobc(String source) {
        getCactvwai()
                .setFILLER_21(
                        StringUtils.overlay(getCactvwai().getFILLER_21(),
                                source, 0, 1));
    }

    public String getAcstdobp() {
        return getCactvwai().getFILLER_21().substring(1, 2);
    }

    public void setAcstdobp(String source) {
        getCactvwai()
                .setFILLER_21(
                        StringUtils.overlay(getCactvwai().getFILLER_21(),
                                source, 1, 2));
    }

    public String getAcstdobh() {
        return getCactvwai().getFILLER_21().substring(2, 3);
    }

    public void setAcstdobh(String source) {
        getCactvwai()
                .setFILLER_21(
                        StringUtils.overlay(getCactvwai().getFILLER_21(),
                                source, 2, 3));
    }

    public String getAcstdobv() {
        return getCactvwai().getFILLER_21().substring(3, 4);
    }

    public void setAcstdobv(String source) {
        getCactvwai()
                .setFILLER_21(
                        StringUtils.overlay(getCactvwai().getFILLER_21(),
                                source, 3, 4));
    }

    public String getAcstdobo() {
        return getCactvwai().getAcstdobi();
    }

    public void setAcstdobo(String source) {
        getCactvwai().setAcstdobi(source);
    }

    public String getFILLER_REDEFINE_101() {
        return CobStream.convShortToString((short) getCactvwai().getAcstfcol())
                + getCactvwai().getAcstfcof();
    }

    public void setFILLER_REDEFINE_101(String source) {
        try {
            getCactvwai().setAcstfcol(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcstfcol(0);
        }
        getCactvwai().setAcstfcof(source.substring(2, 3));
    }

    public String getAcstfcoc() {
        return getCactvwai().getFILLER_22().substring(0, 1);
    }

    public void setAcstfcoc(String source) {
        getCactvwai()
                .setFILLER_22(
                        StringUtils.overlay(getCactvwai().getFILLER_22(),
                                source, 0, 1));
    }

    public String getAcstfcop() {
        return getCactvwai().getFILLER_22().substring(1, 2);
    }

    public void setAcstfcop(String source) {
        getCactvwai()
                .setFILLER_22(
                        StringUtils.overlay(getCactvwai().getFILLER_22(),
                                source, 1, 2));
    }

    public String getAcstfcoh() {
        return getCactvwai().getFILLER_22().substring(2, 3);
    }

    public void setAcstfcoh(String source) {
        getCactvwai()
                .setFILLER_22(
                        StringUtils.overlay(getCactvwai().getFILLER_22(),
                                source, 2, 3));
    }

    public String getAcstfcov() {
        return getCactvwai().getFILLER_22().substring(3, 4);
    }

    public void setAcstfcov(String source) {
        getCactvwai()
                .setFILLER_22(
                        StringUtils.overlay(getCactvwai().getFILLER_22(),
                                source, 3, 4));
    }

    public String getAcstfcoo() {
        return getCactvwai().getAcstfcoi();
    }

    public void setAcstfcoo(String source) {
        getCactvwai().setAcstfcoi(source);
    }

    public String getFILLER_REDEFINE_102() {
        return CobStream.convShortToString((short) getCactvwai().getAcsfnaml())
                + getCactvwai().getAcsfnamf();
    }

    public void setFILLER_REDEFINE_102(String source) {
        try {
            getCactvwai().setAcsfnaml(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcsfnaml(0);
        }
        getCactvwai().setAcsfnamf(source.substring(2, 3));
    }

    public String getAcsfnamc() {
        return getCactvwai().getFILLER_23().substring(0, 1);
    }

    public void setAcsfnamc(String source) {
        getCactvwai()
                .setFILLER_23(
                        StringUtils.overlay(getCactvwai().getFILLER_23(),
                                source, 0, 1));
    }

    public String getAcsfnamp() {
        return getCactvwai().getFILLER_23().substring(1, 2);
    }

    public void setAcsfnamp(String source) {
        getCactvwai()
                .setFILLER_23(
                        StringUtils.overlay(getCactvwai().getFILLER_23(),
                                source, 1, 2));
    }

    public String getAcsfnamh() {
        return getCactvwai().getFILLER_23().substring(2, 3);
    }

    public void setAcsfnamh(String source) {
        getCactvwai()
                .setFILLER_23(
                        StringUtils.overlay(getCactvwai().getFILLER_23(),
                                source, 2, 3));
    }

    public String getAcsfnamv() {
        return getCactvwai().getFILLER_23().substring(3, 4);
    }

    public void setAcsfnamv(String source) {
        getCactvwai()
                .setFILLER_23(
                        StringUtils.overlay(getCactvwai().getFILLER_23(),
                                source, 3, 4));
    }

    public String getAcsfnamo() {
        return getCactvwai().getAcsfnami();
    }

    public void setAcsfnamo(String source) {
        getCactvwai().setAcsfnami(source);
    }

    public String getFILLER_REDEFINE_103() {
        return CobStream.convShortToString((short) getCactvwai().getAcsmnaml())
                + getCactvwai().getAcsmnamf();
    }

    public void setFILLER_REDEFINE_103(String source) {
        try {
            getCactvwai().setAcsmnaml(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcsmnaml(0);
        }
        getCactvwai().setAcsmnamf(source.substring(2, 3));
    }

    public String getAcsmnamc() {
        return getCactvwai().getFILLER_24().substring(0, 1);
    }

    public void setAcsmnamc(String source) {
        getCactvwai()
                .setFILLER_24(
                        StringUtils.overlay(getCactvwai().getFILLER_24(),
                                source, 0, 1));
    }

    public String getAcsmnamp() {
        return getCactvwai().getFILLER_24().substring(1, 2);
    }

    public void setAcsmnamp(String source) {
        getCactvwai()
                .setFILLER_24(
                        StringUtils.overlay(getCactvwai().getFILLER_24(),
                                source, 1, 2));
    }

    public String getAcsmnamh() {
        return getCactvwai().getFILLER_24().substring(2, 3);
    }

    public void setAcsmnamh(String source) {
        getCactvwai()
                .setFILLER_24(
                        StringUtils.overlay(getCactvwai().getFILLER_24(),
                                source, 2, 3));
    }

    public String getAcsmnamv() {
        return getCactvwai().getFILLER_24().substring(3, 4);
    }

    public void setAcsmnamv(String source) {
        getCactvwai()
                .setFILLER_24(
                        StringUtils.overlay(getCactvwai().getFILLER_24(),
                                source, 3, 4));
    }

    public String getAcsmnamo() {
        return getCactvwai().getAcsmnami();
    }

    public void setAcsmnamo(String source) {
        getCactvwai().setAcsmnami(source);
    }

    public String getFILLER_REDEFINE_104() {
        return CobStream.convShortToString((short) getCactvwai().getAcslnaml())
                + getCactvwai().getAcslnamf();
    }

    public void setFILLER_REDEFINE_104(String source) {
        try {
            getCactvwai().setAcslnaml(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcslnaml(0);
        }
        getCactvwai().setAcslnamf(source.substring(2, 3));
    }

    public String getAcslnamc() {
        return getCactvwai().getFILLER_25().substring(0, 1);
    }

    public void setAcslnamc(String source) {
        getCactvwai()
                .setFILLER_25(
                        StringUtils.overlay(getCactvwai().getFILLER_25(),
                                source, 0, 1));
    }

    public String getAcslnamp() {
        return getCactvwai().getFILLER_25().substring(1, 2);
    }

    public void setAcslnamp(String source) {
        getCactvwai()
                .setFILLER_25(
                        StringUtils.overlay(getCactvwai().getFILLER_25(),
                                source, 1, 2));
    }

    public String getAcslnamh() {
        return getCactvwai().getFILLER_25().substring(2, 3);
    }

    public void setAcslnamh(String source) {
        getCactvwai()
                .setFILLER_25(
                        StringUtils.overlay(getCactvwai().getFILLER_25(),
                                source, 2, 3));
    }

    public String getAcslnamv() {
        return getCactvwai().getFILLER_25().substring(3, 4);
    }

    public void setAcslnamv(String source) {
        getCactvwai()
                .setFILLER_25(
                        StringUtils.overlay(getCactvwai().getFILLER_25(),
                                source, 3, 4));
    }

    public String getAcslnamo() {
        return getCactvwai().getAcslnami();
    }

    public void setAcslnamo(String source) {
        getCactvwai().setAcslnami(source);
    }

    public String getFILLER_REDEFINE_105() {
        return CobStream.convShortToString((short) getCactvwai().getAcsadl1l())
                + getCactvwai().getAcsadl1f();
    }

    public void setFILLER_REDEFINE_105(String source) {
        try {
            getCactvwai().setAcsadl1l(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcsadl1l(0);
        }
        getCactvwai().setAcsadl1f(source.substring(2, 3));
    }

    public String getAcsadl1c() {
        return getCactvwai().getFILLER_26().substring(0, 1);
    }

    public void setAcsadl1c(String source) {
        getCactvwai()
                .setFILLER_26(
                        StringUtils.overlay(getCactvwai().getFILLER_26(),
                                source, 0, 1));
    }

    public String getAcsadl1p() {
        return getCactvwai().getFILLER_26().substring(1, 2);
    }

    public void setAcsadl1p(String source) {
        getCactvwai()
                .setFILLER_26(
                        StringUtils.overlay(getCactvwai().getFILLER_26(),
                                source, 1, 2));
    }

    public String getAcsadl1h() {
        return getCactvwai().getFILLER_26().substring(2, 3);
    }

    public void setAcsadl1h(String source) {
        getCactvwai()
                .setFILLER_26(
                        StringUtils.overlay(getCactvwai().getFILLER_26(),
                                source, 2, 3));
    }

    public String getAcsadl1v() {
        return getCactvwai().getFILLER_26().substring(3, 4);
    }

    public void setAcsadl1v(String source) {
        getCactvwai()
                .setFILLER_26(
                        StringUtils.overlay(getCactvwai().getFILLER_26(),
                                source, 3, 4));
    }

    public String getAcsadl1o() {
        return getCactvwai().getAcsadl1i();
    }

    public void setAcsadl1o(String source) {
        getCactvwai().setAcsadl1i(source);
    }

    public String getFILLER_REDEFINE_106() {
        return CobStream.convShortToString((short) getCactvwai().getAcssttel())
                + getCactvwai().getAcssttef();
    }

    public void setFILLER_REDEFINE_106(String source) {
        try {
            getCactvwai().setAcssttel(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcssttel(0);
        }
        getCactvwai().setAcssttef(source.substring(2, 3));
    }

    public String getAcssttec() {
        return getCactvwai().getFILLER_27().substring(0, 1);
    }

    public void setAcssttec(String source) {
        getCactvwai()
                .setFILLER_27(
                        StringUtils.overlay(getCactvwai().getFILLER_27(),
                                source, 0, 1));
    }

    public String getAcssttep() {
        return getCactvwai().getFILLER_27().substring(1, 2);
    }

    public void setAcssttep(String source) {
        getCactvwai()
                .setFILLER_27(
                        StringUtils.overlay(getCactvwai().getFILLER_27(),
                                source, 1, 2));
    }

    public String getAcsstteh() {
        return getCactvwai().getFILLER_27().substring(2, 3);
    }

    public void setAcsstteh(String source) {
        getCactvwai()
                .setFILLER_27(
                        StringUtils.overlay(getCactvwai().getFILLER_27(),
                                source, 2, 3));
    }

    public String getAcssttev() {
        return getCactvwai().getFILLER_27().substring(3, 4);
    }

    public void setAcssttev(String source) {
        getCactvwai()
                .setFILLER_27(
                        StringUtils.overlay(getCactvwai().getFILLER_27(),
                                source, 3, 4));
    }

    public String getAcsstteo() {
        return getCactvwai().getAcssttei();
    }

    public void setAcsstteo(String source) {
        getCactvwai().setAcssttei(source);
    }

    public String getFILLER_REDEFINE_107() {
        return CobStream.convShortToString((short) getCactvwai().getAcsadl2l())
                + getCactvwai().getAcsadl2f();
    }

    public void setFILLER_REDEFINE_107(String source) {
        try {
            getCactvwai().setAcsadl2l(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcsadl2l(0);
        }
        getCactvwai().setAcsadl2f(source.substring(2, 3));
    }

    public String getAcsadl2c() {
        return getCactvwai().getFILLER_28().substring(0, 1);
    }

    public void setAcsadl2c(String source) {
        getCactvwai()
                .setFILLER_28(
                        StringUtils.overlay(getCactvwai().getFILLER_28(),
                                source, 0, 1));
    }

    public String getAcsadl2p() {
        return getCactvwai().getFILLER_28().substring(1, 2);
    }

    public void setAcsadl2p(String source) {
        getCactvwai()
                .setFILLER_28(
                        StringUtils.overlay(getCactvwai().getFILLER_28(),
                                source, 1, 2));
    }

    public String getAcsadl2h() {
        return getCactvwai().getFILLER_28().substring(2, 3);
    }

    public void setAcsadl2h(String source) {
        getCactvwai()
                .setFILLER_28(
                        StringUtils.overlay(getCactvwai().getFILLER_28(),
                                source, 2, 3));
    }

    public String getAcsadl2v() {
        return getCactvwai().getFILLER_28().substring(3, 4);
    }

    public void setAcsadl2v(String source) {
        getCactvwai()
                .setFILLER_28(
                        StringUtils.overlay(getCactvwai().getFILLER_28(),
                                source, 3, 4));
    }

    public String getAcsadl2o() {
        return getCactvwai().getAcsadl2i();
    }

    public void setAcsadl2o(String source) {
        getCactvwai().setAcsadl2i(source);
    }

    public String getFILLER_REDEFINE_108() {
        return CobStream.convShortToString((short) getCactvwai().getAcszipcl())
                + getCactvwai().getAcszipcf();
    }

    public void setFILLER_REDEFINE_108(String source) {
        try {
            getCactvwai().setAcszipcl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcszipcl(0);
        }
        getCactvwai().setAcszipcf(source.substring(2, 3));
    }

    public String getAcszipcc() {
        return getCactvwai().getFILLER_29().substring(0, 1);
    }

    public void setAcszipcc(String source) {
        getCactvwai()
                .setFILLER_29(
                        StringUtils.overlay(getCactvwai().getFILLER_29(),
                                source, 0, 1));
    }

    public String getAcszipcp() {
        return getCactvwai().getFILLER_29().substring(1, 2);
    }

    public void setAcszipcp(String source) {
        getCactvwai()
                .setFILLER_29(
                        StringUtils.overlay(getCactvwai().getFILLER_29(),
                                source, 1, 2));
    }

    public String getAcszipch() {
        return getCactvwai().getFILLER_29().substring(2, 3);
    }

    public void setAcszipch(String source) {
        getCactvwai()
                .setFILLER_29(
                        StringUtils.overlay(getCactvwai().getFILLER_29(),
                                source, 2, 3));
    }

    public String getAcszipcv() {
        return getCactvwai().getFILLER_29().substring(3, 4);
    }

    public void setAcszipcv(String source) {
        getCactvwai()
                .setFILLER_29(
                        StringUtils.overlay(getCactvwai().getFILLER_29(),
                                source, 3, 4));
    }

    public String getAcszipco() {
        return getCactvwai().getAcszipci();
    }

    public void setAcszipco(String source) {
        getCactvwai().setAcszipci(source);
    }

    public String getFILLER_REDEFINE_109() {
        return CobStream.convShortToString((short) getCactvwai().getAcscityl())
                + getCactvwai().getAcscityf();
    }

    public void setFILLER_REDEFINE_109(String source) {
        try {
            getCactvwai().setAcscityl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcscityl(0);
        }
        getCactvwai().setAcscityf(source.substring(2, 3));
    }

    public String getAcscityc() {
        return getCactvwai().getFILLER_30().substring(0, 1);
    }

    public void setAcscityc(String source) {
        getCactvwai()
                .setFILLER_30(
                        StringUtils.overlay(getCactvwai().getFILLER_30(),
                                source, 0, 1));
    }

    public String getAcscityp() {
        return getCactvwai().getFILLER_30().substring(1, 2);
    }

    public void setAcscityp(String source) {
        getCactvwai()
                .setFILLER_30(
                        StringUtils.overlay(getCactvwai().getFILLER_30(),
                                source, 1, 2));
    }

    public String getAcscityh() {
        return getCactvwai().getFILLER_30().substring(2, 3);
    }

    public void setAcscityh(String source) {
        getCactvwai()
                .setFILLER_30(
                        StringUtils.overlay(getCactvwai().getFILLER_30(),
                                source, 2, 3));
    }

    public String getAcscityv() {
        return getCactvwai().getFILLER_30().substring(3, 4);
    }

    public void setAcscityv(String source) {
        getCactvwai()
                .setFILLER_30(
                        StringUtils.overlay(getCactvwai().getFILLER_30(),
                                source, 3, 4));
    }

    public String getAcscityo() {
        return getCactvwai().getAcscityi();
    }

    public void setAcscityo(String source) {
        getCactvwai().setAcscityi(source);
    }

    public String getFILLER_REDEFINE_110() {
        return CobStream.convShortToString((short) getCactvwai().getAcsctryl())
                + getCactvwai().getAcsctryf();
    }

    public void setFILLER_REDEFINE_110(String source) {
        try {
            getCactvwai().setAcsctryl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcsctryl(0);
        }
        getCactvwai().setAcsctryf(source.substring(2, 3));
    }

    public String getAcsctryc() {
        return getCactvwai().getFILLER_31().substring(0, 1);
    }

    public void setAcsctryc(String source) {
        getCactvwai()
                .setFILLER_31(
                        StringUtils.overlay(getCactvwai().getFILLER_31(),
                                source, 0, 1));
    }

    public String getAcsctryp() {
        return getCactvwai().getFILLER_31().substring(1, 2);
    }

    public void setAcsctryp(String source) {
        getCactvwai()
                .setFILLER_31(
                        StringUtils.overlay(getCactvwai().getFILLER_31(),
                                source, 1, 2));
    }

    public String getAcsctryh() {
        return getCactvwai().getFILLER_31().substring(2, 3);
    }

    public void setAcsctryh(String source) {
        getCactvwai()
                .setFILLER_31(
                        StringUtils.overlay(getCactvwai().getFILLER_31(),
                                source, 2, 3));
    }

    public String getAcsctryv() {
        return getCactvwai().getFILLER_31().substring(3, 4);
    }

    public void setAcsctryv(String source) {
        getCactvwai()
                .setFILLER_31(
                        StringUtils.overlay(getCactvwai().getFILLER_31(),
                                source, 3, 4));
    }

    public String getAcsctryo() {
        return getCactvwai().getAcsctryi();
    }

    public void setAcsctryo(String source) {
        getCactvwai().setAcsctryi(source);
    }

    public String getFILLER_REDEFINE_111() {
        return CobStream.convShortToString((short) getCactvwai().getAcsphn1l())
                + getCactvwai().getAcsphn1f();
    }

    public void setFILLER_REDEFINE_111(String source) {
        try {
            getCactvwai().setAcsphn1l(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcsphn1l(0);
        }
        getCactvwai().setAcsphn1f(source.substring(2, 3));
    }

    public String getAcsphn1c() {
        return getCactvwai().getFILLER_32().substring(0, 1);
    }

    public void setAcsphn1c(String source) {
        getCactvwai()
                .setFILLER_32(
                        StringUtils.overlay(getCactvwai().getFILLER_32(),
                                source, 0, 1));
    }

    public String getAcsphn1p() {
        return getCactvwai().getFILLER_32().substring(1, 2);
    }

    public void setAcsphn1p(String source) {
        getCactvwai()
                .setFILLER_32(
                        StringUtils.overlay(getCactvwai().getFILLER_32(),
                                source, 1, 2));
    }

    public String getAcsphn1h() {
        return getCactvwai().getFILLER_32().substring(2, 3);
    }

    public void setAcsphn1h(String source) {
        getCactvwai()
                .setFILLER_32(
                        StringUtils.overlay(getCactvwai().getFILLER_32(),
                                source, 2, 3));
    }

    public String getAcsphn1v() {
        return getCactvwai().getFILLER_32().substring(3, 4);
    }

    public void setAcsphn1v(String source) {
        getCactvwai()
                .setFILLER_32(
                        StringUtils.overlay(getCactvwai().getFILLER_32(),
                                source, 3, 4));
    }

    public String getAcsphn1o() {
        return getCactvwai().getAcsphn1i();
    }

    public void setAcsphn1o(String source) {
        getCactvwai().setAcsphn1i(source);
    }

    public String getFILLER_REDEFINE_112() {
        return CobStream.convShortToString((short) getCactvwai().getAcsgovtl())
                + getCactvwai().getAcsgovtf();
    }

    public void setFILLER_REDEFINE_112(String source) {
        try {
            getCactvwai().setAcsgovtl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcsgovtl(0);
        }
        getCactvwai().setAcsgovtf(source.substring(2, 3));
    }

    public String getAcsgovtc() {
        return getCactvwai().getFILLER_33().substring(0, 1);
    }

    public void setAcsgovtc(String source) {
        getCactvwai()
                .setFILLER_33(
                        StringUtils.overlay(getCactvwai().getFILLER_33(),
                                source, 0, 1));
    }

    public String getAcsgovtp() {
        return getCactvwai().getFILLER_33().substring(1, 2);
    }

    public void setAcsgovtp(String source) {
        getCactvwai()
                .setFILLER_33(
                        StringUtils.overlay(getCactvwai().getFILLER_33(),
                                source, 1, 2));
    }

    public String getAcsgovth() {
        return getCactvwai().getFILLER_33().substring(2, 3);
    }

    public void setAcsgovth(String source) {
        getCactvwai()
                .setFILLER_33(
                        StringUtils.overlay(getCactvwai().getFILLER_33(),
                                source, 2, 3));
    }

    public String getAcsgovtv() {
        return getCactvwai().getFILLER_33().substring(3, 4);
    }

    public void setAcsgovtv(String source) {
        getCactvwai()
                .setFILLER_33(
                        StringUtils.overlay(getCactvwai().getFILLER_33(),
                                source, 3, 4));
    }

    public String getAcsgovto() {
        return getCactvwai().getAcsgovti();
    }

    public void setAcsgovto(String source) {
        getCactvwai().setAcsgovti(source);
    }

    public String getFILLER_REDEFINE_113() {
        return CobStream.convShortToString((short) getCactvwai().getAcsphn2l())
                + getCactvwai().getAcsphn2f();
    }

    public void setFILLER_REDEFINE_113(String source) {
        try {
            getCactvwai().setAcsphn2l(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcsphn2l(0);
        }
        getCactvwai().setAcsphn2f(source.substring(2, 3));
    }

    public String getAcsphn2c() {
        return getCactvwai().getFILLER_34().substring(0, 1);
    }

    public void setAcsphn2c(String source) {
        getCactvwai()
                .setFILLER_34(
                        StringUtils.overlay(getCactvwai().getFILLER_34(),
                                source, 0, 1));
    }

    public String getAcsphn2p() {
        return getCactvwai().getFILLER_34().substring(1, 2);
    }

    public void setAcsphn2p(String source) {
        getCactvwai()
                .setFILLER_34(
                        StringUtils.overlay(getCactvwai().getFILLER_34(),
                                source, 1, 2));
    }

    public String getAcsphn2h() {
        return getCactvwai().getFILLER_34().substring(2, 3);
    }

    public void setAcsphn2h(String source) {
        getCactvwai()
                .setFILLER_34(
                        StringUtils.overlay(getCactvwai().getFILLER_34(),
                                source, 2, 3));
    }

    public String getAcsphn2v() {
        return getCactvwai().getFILLER_34().substring(3, 4);
    }

    public void setAcsphn2v(String source) {
        getCactvwai()
                .setFILLER_34(
                        StringUtils.overlay(getCactvwai().getFILLER_34(),
                                source, 3, 4));
    }

    public String getAcsphn2o() {
        return getCactvwai().getAcsphn2i();
    }

    public void setAcsphn2o(String source) {
        getCactvwai().setAcsphn2i(source);
    }

    public String getFILLER_REDEFINE_114() {
        return CobStream.convShortToString((short) getCactvwai().getAcseftcl())
                + getCactvwai().getAcseftcf();
    }

    public void setFILLER_REDEFINE_114(String source) {
        try {
            getCactvwai().setAcseftcl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcseftcl(0);
        }
        getCactvwai().setAcseftcf(source.substring(2, 3));
    }

    public String getAcseftcc() {
        return getCactvwai().getFILLER_35().substring(0, 1);
    }

    public void setAcseftcc(String source) {
        getCactvwai()
                .setFILLER_35(
                        StringUtils.overlay(getCactvwai().getFILLER_35(),
                                source, 0, 1));
    }

    public String getAcseftcp() {
        return getCactvwai().getFILLER_35().substring(1, 2);
    }

    public void setAcseftcp(String source) {
        getCactvwai()
                .setFILLER_35(
                        StringUtils.overlay(getCactvwai().getFILLER_35(),
                                source, 1, 2));
    }

    public String getAcseftch() {
        return getCactvwai().getFILLER_35().substring(2, 3);
    }

    public void setAcseftch(String source) {
        getCactvwai()
                .setFILLER_35(
                        StringUtils.overlay(getCactvwai().getFILLER_35(),
                                source, 2, 3));
    }

    public String getAcseftcv() {
        return getCactvwai().getFILLER_35().substring(3, 4);
    }

    public void setAcseftcv(String source) {
        getCactvwai()
                .setFILLER_35(
                        StringUtils.overlay(getCactvwai().getFILLER_35(),
                                source, 3, 4));
    }

    public String getAcseftco() {
        return getCactvwai().getAcseftci();
    }

    public void setAcseftco(String source) {
        getCactvwai().setAcseftci(source);
    }

    public String getFILLER_REDEFINE_115() {
        return CobStream.convShortToString((short) getCactvwai().getAcspflgl())
                + getCactvwai().getAcspflgf();
    }

    public void setFILLER_REDEFINE_115(String source) {
        try {
            getCactvwai().setAcspflgl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setAcspflgl(0);
        }
        getCactvwai().setAcspflgf(source.substring(2, 3));
    }

    public String getAcspflgc() {
        return getCactvwai().getFILLER_36().substring(0, 1);
    }

    public void setAcspflgc(String source) {
        getCactvwai()
                .setFILLER_36(
                        StringUtils.overlay(getCactvwai().getFILLER_36(),
                                source, 0, 1));
    }

    public String getAcspflgp() {
        return getCactvwai().getFILLER_36().substring(1, 2);
    }

    public void setAcspflgp(String source) {
        getCactvwai()
                .setFILLER_36(
                        StringUtils.overlay(getCactvwai().getFILLER_36(),
                                source, 1, 2));
    }

    public String getAcspflgh() {
        return getCactvwai().getFILLER_36().substring(2, 3);
    }

    public void setAcspflgh(String source) {
        getCactvwai()
                .setFILLER_36(
                        StringUtils.overlay(getCactvwai().getFILLER_36(),
                                source, 2, 3));
    }

    public String getAcspflgv() {
        return getCactvwai().getFILLER_36().substring(3, 4);
    }

    public void setAcspflgv(String source) {
        getCactvwai()
                .setFILLER_36(
                        StringUtils.overlay(getCactvwai().getFILLER_36(),
                                source, 3, 4));
    }

    public String getAcspflgo() {
        return getCactvwai().getAcspflgi();
    }

    public void setAcspflgo(String source) {
        getCactvwai().setAcspflgi(source);
    }

    public String getFILLER_REDEFINE_116() {
        return CobStream.convShortToString((short) getCactvwai().getInfomsgl())
                + getCactvwai().getInfomsgf();
    }

    public void setFILLER_REDEFINE_116(String source) {
        try {
            getCactvwai().setInfomsgl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setInfomsgl(0);
        }
        getCactvwai().setInfomsgf(source.substring(2, 3));
    }

    public String getInfomsgc() {
        return getCactvwai().getFILLER_37().substring(0, 1);
    }

    public void setInfomsgc(String source) {
        getCactvwai()
                .setFILLER_37(
                        StringUtils.overlay(getCactvwai().getFILLER_37(),
                                source, 0, 1));
    }

    public String getInfomsgp() {
        return getCactvwai().getFILLER_37().substring(1, 2);
    }

    public void setInfomsgp(String source) {
        getCactvwai()
                .setFILLER_37(
                        StringUtils.overlay(getCactvwai().getFILLER_37(),
                                source, 1, 2));
    }

    public String getInfomsgh() {
        return getCactvwai().getFILLER_37().substring(2, 3);
    }

    public void setInfomsgh(String source) {
        getCactvwai()
                .setFILLER_37(
                        StringUtils.overlay(getCactvwai().getFILLER_37(),
                                source, 2, 3));
    }

    public String getInfomsgv() {
        return getCactvwai().getFILLER_37().substring(3, 4);
    }

    public void setInfomsgv(String source) {
        getCactvwai()
                .setFILLER_37(
                        StringUtils.overlay(getCactvwai().getFILLER_37(),
                                source, 3, 4));
    }

    public String getInfomsgo() {
        return getCactvwai().getInfomsgi();
    }

    public void setInfomsgo(String source) {
        getCactvwai().setInfomsgi(source);
    }

    public String getFILLER_REDEFINE_117() {
        return CobStream.convShortToString((short) getCactvwai().getErrmsgl())
                + getCactvwai().getErrmsgf();
    }

    public void setFILLER_REDEFINE_117(String source) {
        try {
            getCactvwai().setErrmsgl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCactvwai().setErrmsgl(0);
        }
        getCactvwai().setErrmsgf(source.substring(2, 3));
    }

    public String getErrmsgc() {
        return getCactvwai().getFILLER_38().substring(0, 1);
    }

    public void setErrmsgc(String source) {
        getCactvwai()
                .setFILLER_38(
                        StringUtils.overlay(getCactvwai().getFILLER_38(),
                                source, 0, 1));
    }

    public String getErrmsgp() {
        return getCactvwai().getFILLER_38().substring(1, 2);
    }

    public void setErrmsgp(String source) {
        getCactvwai()
                .setFILLER_38(
                        StringUtils.overlay(getCactvwai().getFILLER_38(),
                                source, 1, 2));
    }

    public String getErrmsgh() {
        return getCactvwai().getFILLER_38().substring(2, 3);
    }

    public void setErrmsgh(String source) {
        getCactvwai()
                .setFILLER_38(
                        StringUtils.overlay(getCactvwai().getFILLER_38(),
                                source, 2, 3));
    }

    public String getErrmsgv() {
        return getCactvwai().getFILLER_38().substring(3, 4);
    }

    public void setErrmsgv(String source) {
        getCactvwai()
                .setFILLER_38(
                        StringUtils.overlay(getCactvwai().getFILLER_38(),
                                source, 3, 4));
    }

    public String getErrmsgo() {
        return getCactvwai().getErrmsgi();
    }

    public void setErrmsgo(String source) {
        getCactvwai().setErrmsgi(source);
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactvwcCactvwao {
        // [T-Up#INFO][COACTVW.CPY:243] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_80 = StringUtils.repeat(' ', 12);
        // [T-Up#INFO][COACTVW.CPY:244] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_81 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:245] TRNNAMEC (level: 2)
        private @Getter String trnnamec = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:246] TRNNAMEP (level: 2)
        private @Getter String trnnamep = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:247] TRNNAMEH (level: 2)
        private @Getter String trnnameh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:248] TRNNAMEV (level: 2)
        private @Getter String trnnamev = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:249] TRNNAMEO (level: 2)
        private @Getter String trnnameo = StringUtils.repeat(' ', 4);
        // [T-Up#INFO][COACTVW.CPY:250] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_82 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:251] TITLE01C (level: 2)
        private @Getter String title01c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:252] TITLE01P (level: 2)
        private @Getter String title01p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:253] TITLE01H (level: 2)
        private @Getter String title01h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:254] TITLE01V (level: 2)
        private @Getter String title01v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:255] TITLE01O (level: 2)
        private @Getter String title01o = StringUtils.repeat(' ', 40);
        // [T-Up#INFO][COACTVW.CPY:256] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_83 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:257] CURDATEC (level: 2)
        private @Getter String curdatec = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:258] CURDATEP (level: 2)
        private @Getter String curdatep = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:259] CURDATEH (level: 2)
        private @Getter String curdateh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:260] CURDATEV (level: 2)
        private @Getter String curdatev = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:261] CURDATEO (level: 2)
        private @Getter String curdateo = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COACTVW.CPY:262] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_84 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:263] PGMNAMEC (level: 2)
        private @Getter String pgmnamec = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:264] PGMNAMEP (level: 2)
        private @Getter String pgmnamep = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:265] PGMNAMEH (level: 2)
        private @Getter String pgmnameh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:266] PGMNAMEV (level: 2)
        private @Getter String pgmnamev = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:267] PGMNAMEO (level: 2)
        private @Getter String pgmnameo = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COACTVW.CPY:268] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_85 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:269] TITLE02C (level: 2)
        private @Getter String title02c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:270] TITLE02P (level: 2)
        private @Getter String title02p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:271] TITLE02H (level: 2)
        private @Getter String title02h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:272] TITLE02V (level: 2)
        private @Getter String title02v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:273] TITLE02O (level: 2)
        private @Getter String title02o = StringUtils.repeat(' ', 40);
        // [T-Up#INFO][COACTVW.CPY:274] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_86 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:275] CURTIMEC (level: 2)
        private @Getter String curtimec = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:276] CURTIMEP (level: 2)
        private @Getter String curtimep = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:277] CURTIMEH (level: 2)
        private @Getter String curtimeh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:278] CURTIMEV (level: 2)
        private @Getter String curtimev = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:279] CURTIMEO (level: 2)
        private @Getter String curtimeo = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COACTVW.CPY:280] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_87 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:281] ACCTSIDC (level: 2)
        private @Getter String acctsidc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:282] ACCTSIDP (level: 2)
        private @Getter String acctsidp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:283] ACCTSIDH (level: 2)
        private @Getter String acctsidh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:284] ACCTSIDV (level: 2)
        private @Getter String acctsidv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:285] ACCTSIDO (level: 2)
        private @Getter String acctsido = StringUtils.repeat(' ', 11);
        // [T-Up#INFO][COACTVW.CPY:286] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_88 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:287] ACSTTUSC (level: 2)
        private @Getter String acsttusc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:288] ACSTTUSP (level: 2)
        private @Getter String acsttusp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:289] ACSTTUSH (level: 2)
        private @Getter String acsttush = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:290] ACSTTUSV (level: 2)
        private @Getter String acsttusv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:291] ACSTTUSO (level: 2)
        private @Getter String acsttuso = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:292] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_89 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:293] ADTOPENC (level: 2)
        private @Getter String adtopenc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:294] ADTOPENP (level: 2)
        private @Getter String adtopenp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:295] ADTOPENH (level: 2)
        private @Getter String adtopenh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:296] ADTOPENV (level: 2)
        private @Getter String adtopenv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:297] ADTOPENO (level: 2)
        private @Getter String adtopeno = StringUtils.repeat(' ', 10);
        // [T-Up#INFO][COACTVW.CPY:298] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_90 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:299] ACRDLIMC (level: 2)
        private @Getter String acrdlimc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:300] ACRDLIMP (level: 2)
        private @Getter String acrdlimp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:301] ACRDLIMH (level: 2)
        private @Getter String acrdlimh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:302] ACRDLIMV (level: 2)
        private @Getter String acrdlimv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:303] ACRDLIMO (level: 2)
        private @Getter String acrdlimo = acrdlimoFormat.apply(BigDecimal.ZERO);
        private final static Function<BigDecimal, String> acrdlimoFormat = (
                data) -> {
            DecimalFormat nf = new DecimalFormat();
            nf.setNegativePrefix("");
            nf.applyPattern("+###,###,###.00;-###,###,###.00");
            return StringUtils.leftPad(nf.format(data), 11, ' ');
        };
        // [T-Up#INFO][COACTVW.CPY:304] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_91 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:305] AEXPDTC (level: 2)
        private @Getter String aexpdtc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:306] AEXPDTP (level: 2)
        private @Getter String aexpdtp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:307] AEXPDTH (level: 2)
        private @Getter String aexpdth = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:308] AEXPDTV (level: 2)
        private @Getter String aexpdtv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:309] AEXPDTO (level: 2)
        private @Getter String aexpdto = StringUtils.repeat(' ', 10);
        // [T-Up#INFO][COACTVW.CPY:310] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_92 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:311] ACSHLIMC (level: 2)
        private @Getter String acshlimc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:312] ACSHLIMP (level: 2)
        private @Getter String acshlimp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:313] ACSHLIMH (level: 2)
        private @Getter String acshlimh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:314] ACSHLIMV (level: 2)
        private @Getter String acshlimv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:315] ACSHLIMO (level: 2)
        private @Getter String acshlimo = acshlimoFormat.apply(BigDecimal.ZERO);
        private final static Function<BigDecimal, String> acshlimoFormat = (
                data) -> {
            DecimalFormat nf = new DecimalFormat();
            nf.setNegativePrefix("");
            nf.applyPattern("+###,###,###.00;-###,###,###.00");
            return StringUtils.leftPad(nf.format(data), 11, ' ');
        };
        // [T-Up#INFO][COACTVW.CPY:316] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_93 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:317] AREISDTC (level: 2)
        private @Getter String areisdtc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:318] AREISDTP (level: 2)
        private @Getter String areisdtp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:319] AREISDTH (level: 2)
        private @Getter String areisdth = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:320] AREISDTV (level: 2)
        private @Getter String areisdtv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:321] AREISDTO (level: 2)
        private @Getter String areisdto = StringUtils.repeat(' ', 10);
        // [T-Up#INFO][COACTVW.CPY:322] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_94 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:323] ACURBALC (level: 2)
        private @Getter String acurbalc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:324] ACURBALP (level: 2)
        private @Getter String acurbalp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:325] ACURBALH (level: 2)
        private @Getter String acurbalh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:326] ACURBALV (level: 2)
        private @Getter String acurbalv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:327] ACURBALO (level: 2)
        private @Getter String acurbalo = acurbaloFormat.apply(BigDecimal.ZERO);
        private final static Function<BigDecimal, String> acurbaloFormat = (
                data) -> {
            DecimalFormat nf = new DecimalFormat();
            nf.setNegativePrefix("");
            nf.applyPattern("+###,###,###.00;-###,###,###.00");
            return StringUtils.leftPad(nf.format(data), 11, ' ');
        };
        // [T-Up#INFO][COACTVW.CPY:328] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_95 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:329] ACRCYCRC (level: 2)
        private @Getter String acrcycrc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:330] ACRCYCRP (level: 2)
        private @Getter String acrcycrp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:331] ACRCYCRH (level: 2)
        private @Getter String acrcycrh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:332] ACRCYCRV (level: 2)
        private @Getter String acrcycrv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:333] ACRCYCRO (level: 2)
        private @Getter String acrcycro = acrcycroFormat.apply(BigDecimal.ZERO);
        private final static Function<BigDecimal, String> acrcycroFormat = (
                data) -> {
            DecimalFormat nf = new DecimalFormat();
            nf.setNegativePrefix("");
            nf.applyPattern("+###,###,###.00;-###,###,###.00");
            return StringUtils.leftPad(nf.format(data), 11, ' ');
        };
        // [T-Up#INFO][COACTVW.CPY:334] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_96 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:335] AADDGRPC (level: 2)
        private @Getter String aaddgrpc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:336] AADDGRPP (level: 2)
        private @Getter String aaddgrpp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:337] AADDGRPH (level: 2)
        private @Getter String aaddgrph = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:338] AADDGRPV (level: 2)
        private @Getter String aaddgrpv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:339] AADDGRPO (level: 2)
        private @Getter String aaddgrpo = StringUtils.repeat(' ', 10);
        // [T-Up#INFO][COACTVW.CPY:340] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_97 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:341] ACRCYDBC (level: 2)
        private @Getter String acrcydbc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:342] ACRCYDBP (level: 2)
        private @Getter String acrcydbp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:343] ACRCYDBH (level: 2)
        private @Getter String acrcydbh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:344] ACRCYDBV (level: 2)
        private @Getter String acrcydbv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:345] ACRCYDBO (level: 2)
        private @Getter String acrcydbo = acrcydboFormat.apply(BigDecimal.ZERO);
        private final static Function<BigDecimal, String> acrcydboFormat = (
                data) -> {
            DecimalFormat nf = new DecimalFormat();
            nf.setNegativePrefix("");
            nf.applyPattern("+###,###,###.00;-###,###,###.00");
            return StringUtils.leftPad(nf.format(data), 11, ' ');
        };
        // [T-Up#INFO][COACTVW.CPY:346] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_98 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:347] ACSTNUMC (level: 2)
        private @Getter String acstnumc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:348] ACSTNUMP (level: 2)
        private @Getter String acstnump = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:349] ACSTNUMH (level: 2)
        private @Getter String acstnumh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:350] ACSTNUMV (level: 2)
        private @Getter String acstnumv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:351] ACSTNUMO (level: 2)
        private @Getter String acstnumo = StringUtils.repeat(' ', 9);
        // [T-Up#INFO][COACTVW.CPY:352] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_99 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:353] ACSTSSNC (level: 2)
        private @Getter String acstssnc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:354] ACSTSSNP (level: 2)
        private @Getter String acstssnp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:355] ACSTSSNH (level: 2)
        private @Getter String acstssnh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:356] ACSTSSNV (level: 2)
        private @Getter String acstssnv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:357] ACSTSSNO (level: 2)
        private @Getter String acstssno = StringUtils.repeat(' ', 12);
        // [T-Up#INFO][COACTVW.CPY:358] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_100 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:359] ACSTDOBC (level: 2)
        private @Getter String acstdobc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:360] ACSTDOBP (level: 2)
        private @Getter String acstdobp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:361] ACSTDOBH (level: 2)
        private @Getter String acstdobh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:362] ACSTDOBV (level: 2)
        private @Getter String acstdobv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:363] ACSTDOBO (level: 2)
        private @Getter String acstdobo = StringUtils.repeat(' ', 10);
        // [T-Up#INFO][COACTVW.CPY:364] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_101 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:365] ACSTFCOC (level: 2)
        private @Getter String acstfcoc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:366] ACSTFCOP (level: 2)
        private @Getter String acstfcop = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:367] ACSTFCOH (level: 2)
        private @Getter String acstfcoh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:368] ACSTFCOV (level: 2)
        private @Getter String acstfcov = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:369] ACSTFCOO (level: 2)
        private @Getter String acstfcoo = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:370] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_102 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:371] ACSFNAMC (level: 2)
        private @Getter String acsfnamc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:372] ACSFNAMP (level: 2)
        private @Getter String acsfnamp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:373] ACSFNAMH (level: 2)
        private @Getter String acsfnamh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:374] ACSFNAMV (level: 2)
        private @Getter String acsfnamv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:375] ACSFNAMO (level: 2)
        private @Getter String acsfnamo = StringUtils.repeat(' ', 25);
        // [T-Up#INFO][COACTVW.CPY:376] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_103 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:377] ACSMNAMC (level: 2)
        private @Getter String acsmnamc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:378] ACSMNAMP (level: 2)
        private @Getter String acsmnamp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:379] ACSMNAMH (level: 2)
        private @Getter String acsmnamh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:380] ACSMNAMV (level: 2)
        private @Getter String acsmnamv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:381] ACSMNAMO (level: 2)
        private @Getter String acsmnamo = StringUtils.repeat(' ', 25);
        // [T-Up#INFO][COACTVW.CPY:382] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_104 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:383] ACSLNAMC (level: 2)
        private @Getter String acslnamc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:384] ACSLNAMP (level: 2)
        private @Getter String acslnamp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:385] ACSLNAMH (level: 2)
        private @Getter String acslnamh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:386] ACSLNAMV (level: 2)
        private @Getter String acslnamv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:387] ACSLNAMO (level: 2)
        private @Getter String acslnamo = StringUtils.repeat(' ', 25);
        // [T-Up#INFO][COACTVW.CPY:388] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_105 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:389] ACSADL1C (level: 2)
        private @Getter String acsadl1c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:390] ACSADL1P (level: 2)
        private @Getter String acsadl1p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:391] ACSADL1H (level: 2)
        private @Getter String acsadl1h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:392] ACSADL1V (level: 2)
        private @Getter String acsadl1v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:393] ACSADL1O (level: 2)
        private @Getter String acsadl1o = StringUtils.repeat(' ', 50);
        // [T-Up#INFO][COACTVW.CPY:394] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_106 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:395] ACSSTTEC (level: 2)
        private @Getter String acssttec = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:396] ACSSTTEP (level: 2)
        private @Getter String acssttep = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:397] ACSSTTEH (level: 2)
        private @Getter String acsstteh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:398] ACSSTTEV (level: 2)
        private @Getter String acssttev = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:399] ACSSTTEO (level: 2)
        private @Getter String acsstteo = StringUtils.repeat(' ', 2);
        // [T-Up#INFO][COACTVW.CPY:400] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_107 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:401] ACSADL2C (level: 2)
        private @Getter String acsadl2c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:402] ACSADL2P (level: 2)
        private @Getter String acsadl2p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:403] ACSADL2H (level: 2)
        private @Getter String acsadl2h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:404] ACSADL2V (level: 2)
        private @Getter String acsadl2v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:405] ACSADL2O (level: 2)
        private @Getter String acsadl2o = StringUtils.repeat(' ', 50);
        // [T-Up#INFO][COACTVW.CPY:406] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_108 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:407] ACSZIPCC (level: 2)
        private @Getter String acszipcc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:408] ACSZIPCP (level: 2)
        private @Getter String acszipcp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:409] ACSZIPCH (level: 2)
        private @Getter String acszipch = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:410] ACSZIPCV (level: 2)
        private @Getter String acszipcv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:411] ACSZIPCO (level: 2)
        private @Getter String acszipco = StringUtils.repeat(' ', 5);
        // [T-Up#INFO][COACTVW.CPY:412] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_109 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:413] ACSCITYC (level: 2)
        private @Getter String acscityc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:414] ACSCITYP (level: 2)
        private @Getter String acscityp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:415] ACSCITYH (level: 2)
        private @Getter String acscityh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:416] ACSCITYV (level: 2)
        private @Getter String acscityv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:417] ACSCITYO (level: 2)
        private @Getter String acscityo = StringUtils.repeat(' ', 50);
        // [T-Up#INFO][COACTVW.CPY:418] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_110 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:419] ACSCTRYC (level: 2)
        private @Getter String acsctryc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:420] ACSCTRYP (level: 2)
        private @Getter String acsctryp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:421] ACSCTRYH (level: 2)
        private @Getter String acsctryh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:422] ACSCTRYV (level: 2)
        private @Getter String acsctryv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:423] ACSCTRYO (level: 2)
        private @Getter String acsctryo = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:424] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_111 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:425] ACSPHN1C (level: 2)
        private @Getter String acsphn1c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:426] ACSPHN1P (level: 2)
        private @Getter String acsphn1p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:427] ACSPHN1H (level: 2)
        private @Getter String acsphn1h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:428] ACSPHN1V (level: 2)
        private @Getter String acsphn1v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:429] ACSPHN1O (level: 2)
        private @Getter String acsphn1o = StringUtils.repeat(' ', 13);
        // [T-Up#INFO][COACTVW.CPY:430] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_112 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:431] ACSGOVTC (level: 2)
        private @Getter String acsgovtc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:432] ACSGOVTP (level: 2)
        private @Getter String acsgovtp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:433] ACSGOVTH (level: 2)
        private @Getter String acsgovth = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:434] ACSGOVTV (level: 2)
        private @Getter String acsgovtv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:435] ACSGOVTO (level: 2)
        private @Getter String acsgovto = StringUtils.repeat(' ', 20);
        // [T-Up#INFO][COACTVW.CPY:436] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_113 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:437] ACSPHN2C (level: 2)
        private @Getter String acsphn2c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:438] ACSPHN2P (level: 2)
        private @Getter String acsphn2p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:439] ACSPHN2H (level: 2)
        private @Getter String acsphn2h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:440] ACSPHN2V (level: 2)
        private @Getter String acsphn2v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:441] ACSPHN2O (level: 2)
        private @Getter String acsphn2o = StringUtils.repeat(' ', 13);
        // [T-Up#INFO][COACTVW.CPY:442] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_114 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:443] ACSEFTCC (level: 2)
        private @Getter String acseftcc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:444] ACSEFTCP (level: 2)
        private @Getter String acseftcp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:445] ACSEFTCH (level: 2)
        private @Getter String acseftch = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:446] ACSEFTCV (level: 2)
        private @Getter String acseftcv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:447] ACSEFTCO (level: 2)
        private @Getter String acseftco = StringUtils.repeat(' ', 10);
        // [T-Up#INFO][COACTVW.CPY:448] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_115 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:449] ACSPFLGC (level: 2)
        private @Getter String acspflgc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:450] ACSPFLGP (level: 2)
        private @Getter String acspflgp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:451] ACSPFLGH (level: 2)
        private @Getter String acspflgh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:452] ACSPFLGV (level: 2)
        private @Getter String acspflgv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:453] ACSPFLGO (level: 2)
        private @Getter String acspflgo = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:454] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_116 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:455] INFOMSGC (level: 2)
        private @Getter String infomsgc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:456] INFOMSGP (level: 2)
        private @Getter String infomsgp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:457] INFOMSGH (level: 2)
        private @Getter String infomsgh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:458] INFOMSGV (level: 2)
        private @Getter String infomsgv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:459] INFOMSGO (level: 2)
        private @Getter String infomsgo = StringUtils.repeat(' ', 45);
        // [T-Up#INFO][COACTVW.CPY:460] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_117 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COACTVW.CPY:461] ERRMSGC (level: 2)
        private @Getter String errmsgc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:462] ERRMSGP (level: 2)
        private @Getter String errmsgp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:463] ERRMSGH (level: 2)
        private @Getter String errmsgh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:464] ERRMSGV (level: 2)
        private @Getter String errmsgv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COACTVW.CPY:465] ERRMSGO (level: 2)
        private @Getter String errmsgo = StringUtils.repeat(' ', 78);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(FILLER_REDEFINE_80);
            sb.append(FILLER_REDEFINE_81);
            sb.append(trnnamec);
            sb.append(trnnamep);
            sb.append(trnnameh);
            sb.append(trnnamev);
            sb.append(trnnameo);
            sb.append(FILLER_REDEFINE_82);
            sb.append(title01c);
            sb.append(title01p);
            sb.append(title01h);
            sb.append(title01v);
            sb.append(title01o);
            sb.append(FILLER_REDEFINE_83);
            sb.append(curdatec);
            sb.append(curdatep);
            sb.append(curdateh);
            sb.append(curdatev);
            sb.append(curdateo);
            sb.append(FILLER_REDEFINE_84);
            sb.append(pgmnamec);
            sb.append(pgmnamep);
            sb.append(pgmnameh);
            sb.append(pgmnamev);
            sb.append(pgmnameo);
            sb.append(FILLER_REDEFINE_85);
            sb.append(title02c);
            sb.append(title02p);
            sb.append(title02h);
            sb.append(title02v);
            sb.append(title02o);
            sb.append(FILLER_REDEFINE_86);
            sb.append(curtimec);
            sb.append(curtimep);
            sb.append(curtimeh);
            sb.append(curtimev);
            sb.append(curtimeo);
            sb.append(FILLER_REDEFINE_87);
            sb.append(acctsidc);
            sb.append(acctsidp);
            sb.append(acctsidh);
            sb.append(acctsidv);
            sb.append(acctsido);
            sb.append(FILLER_REDEFINE_88);
            sb.append(acsttusc);
            sb.append(acsttusp);
            sb.append(acsttush);
            sb.append(acsttusv);
            sb.append(acsttuso);
            sb.append(FILLER_REDEFINE_89);
            sb.append(adtopenc);
            sb.append(adtopenp);
            sb.append(adtopenh);
            sb.append(adtopenv);
            sb.append(adtopeno);
            sb.append(FILLER_REDEFINE_90);
            sb.append(acrdlimc);
            sb.append(acrdlimp);
            sb.append(acrdlimh);
            sb.append(acrdlimv);
            sb.append(acrdlimo);
            sb.append(FILLER_REDEFINE_91);
            sb.append(aexpdtc);
            sb.append(aexpdtp);
            sb.append(aexpdth);
            sb.append(aexpdtv);
            sb.append(aexpdto);
            sb.append(FILLER_REDEFINE_92);
            sb.append(acshlimc);
            sb.append(acshlimp);
            sb.append(acshlimh);
            sb.append(acshlimv);
            sb.append(acshlimo);
            sb.append(FILLER_REDEFINE_93);
            sb.append(areisdtc);
            sb.append(areisdtp);
            sb.append(areisdth);
            sb.append(areisdtv);
            sb.append(areisdto);
            sb.append(FILLER_REDEFINE_94);
            sb.append(acurbalc);
            sb.append(acurbalp);
            sb.append(acurbalh);
            sb.append(acurbalv);
            sb.append(acurbalo);
            sb.append(FILLER_REDEFINE_95);
            sb.append(acrcycrc);
            sb.append(acrcycrp);
            sb.append(acrcycrh);
            sb.append(acrcycrv);
            sb.append(acrcycro);
            sb.append(FILLER_REDEFINE_96);
            sb.append(aaddgrpc);
            sb.append(aaddgrpp);
            sb.append(aaddgrph);
            sb.append(aaddgrpv);
            sb.append(aaddgrpo);
            sb.append(FILLER_REDEFINE_97);
            sb.append(acrcydbc);
            sb.append(acrcydbp);
            sb.append(acrcydbh);
            sb.append(acrcydbv);
            sb.append(acrcydbo);
            sb.append(FILLER_REDEFINE_98);
            sb.append(acstnumc);
            sb.append(acstnump);
            sb.append(acstnumh);
            sb.append(acstnumv);
            sb.append(acstnumo);
            sb.append(FILLER_REDEFINE_99);
            sb.append(acstssnc);
            sb.append(acstssnp);
            sb.append(acstssnh);
            sb.append(acstssnv);
            sb.append(acstssno);
            sb.append(FILLER_REDEFINE_100);
            sb.append(acstdobc);
            sb.append(acstdobp);
            sb.append(acstdobh);
            sb.append(acstdobv);
            sb.append(acstdobo);
            sb.append(FILLER_REDEFINE_101);
            sb.append(acstfcoc);
            sb.append(acstfcop);
            sb.append(acstfcoh);
            sb.append(acstfcov);
            sb.append(acstfcoo);
            sb.append(FILLER_REDEFINE_102);
            sb.append(acsfnamc);
            sb.append(acsfnamp);
            sb.append(acsfnamh);
            sb.append(acsfnamv);
            sb.append(acsfnamo);
            sb.append(FILLER_REDEFINE_103);
            sb.append(acsmnamc);
            sb.append(acsmnamp);
            sb.append(acsmnamh);
            sb.append(acsmnamv);
            sb.append(acsmnamo);
            sb.append(FILLER_REDEFINE_104);
            sb.append(acslnamc);
            sb.append(acslnamp);
            sb.append(acslnamh);
            sb.append(acslnamv);
            sb.append(acslnamo);
            sb.append(FILLER_REDEFINE_105);
            sb.append(acsadl1c);
            sb.append(acsadl1p);
            sb.append(acsadl1h);
            sb.append(acsadl1v);
            sb.append(acsadl1o);
            sb.append(FILLER_REDEFINE_106);
            sb.append(acssttec);
            sb.append(acssttep);
            sb.append(acsstteh);
            sb.append(acssttev);
            sb.append(acsstteo);
            sb.append(FILLER_REDEFINE_107);
            sb.append(acsadl2c);
            sb.append(acsadl2p);
            sb.append(acsadl2h);
            sb.append(acsadl2v);
            sb.append(acsadl2o);
            sb.append(FILLER_REDEFINE_108);
            sb.append(acszipcc);
            sb.append(acszipcp);
            sb.append(acszipch);
            sb.append(acszipcv);
            sb.append(acszipco);
            sb.append(FILLER_REDEFINE_109);
            sb.append(acscityc);
            sb.append(acscityp);
            sb.append(acscityh);
            sb.append(acscityv);
            sb.append(acscityo);
            sb.append(FILLER_REDEFINE_110);
            sb.append(acsctryc);
            sb.append(acsctryp);
            sb.append(acsctryh);
            sb.append(acsctryv);
            sb.append(acsctryo);
            sb.append(FILLER_REDEFINE_111);
            sb.append(acsphn1c);
            sb.append(acsphn1p);
            sb.append(acsphn1h);
            sb.append(acsphn1v);
            sb.append(acsphn1o);
            sb.append(FILLER_REDEFINE_112);
            sb.append(acsgovtc);
            sb.append(acsgovtp);
            sb.append(acsgovth);
            sb.append(acsgovtv);
            sb.append(acsgovto);
            sb.append(FILLER_REDEFINE_113);
            sb.append(acsphn2c);
            sb.append(acsphn2p);
            sb.append(acsphn2h);
            sb.append(acsphn2v);
            sb.append(acsphn2o);
            sb.append(FILLER_REDEFINE_114);
            sb.append(acseftcc);
            sb.append(acseftcp);
            sb.append(acseftch);
            sb.append(acseftcv);
            sb.append(acseftco);
            sb.append(FILLER_REDEFINE_115);
            sb.append(acspflgc);
            sb.append(acspflgp);
            sb.append(acspflgh);
            sb.append(acspflgv);
            sb.append(acspflgo);
            sb.append(FILLER_REDEFINE_116);
            sb.append(infomsgc);
            sb.append(infomsgp);
            sb.append(infomsgh);
            sb.append(infomsgv);
            sb.append(infomsgo);
            sb.append(FILLER_REDEFINE_117);
            sb.append(errmsgc);
            sb.append(errmsgp);
            sb.append(errmsgh);
            sb.append(errmsgv);
            sb.append(errmsgo);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(FILLER_REDEFINE_80);
            sb.append(FILLER_REDEFINE_81);
            sb.append(getTrnnamec());
            sb.append(getTrnnamep());
            sb.append(getTrnnameh());
            sb.append(getTrnnamev());
            sb.append(getTrnnameo());
            sb.append(FILLER_REDEFINE_82);
            sb.append(getTitle01c());
            sb.append(getTitle01p());
            sb.append(getTitle01h());
            sb.append(getTitle01v());
            sb.append(getTitle01o());
            sb.append(FILLER_REDEFINE_83);
            sb.append(getCurdatec());
            sb.append(getCurdatep());
            sb.append(getCurdateh());
            sb.append(getCurdatev());
            sb.append(getCurdateo());
            sb.append(FILLER_REDEFINE_84);
            sb.append(getPgmnamec());
            sb.append(getPgmnamep());
            sb.append(getPgmnameh());
            sb.append(getPgmnamev());
            sb.append(getPgmnameo());
            sb.append(FILLER_REDEFINE_85);
            sb.append(getTitle02c());
            sb.append(getTitle02p());
            sb.append(getTitle02h());
            sb.append(getTitle02v());
            sb.append(getTitle02o());
            sb.append(FILLER_REDEFINE_86);
            sb.append(getCurtimec());
            sb.append(getCurtimep());
            sb.append(getCurtimeh());
            sb.append(getCurtimev());
            sb.append(getCurtimeo());
            sb.append(FILLER_REDEFINE_87);
            sb.append(getAcctsidc());
            sb.append(getAcctsidp());
            sb.append(getAcctsidh());
            sb.append(getAcctsidv());
            sb.append(getAcctsido());
            sb.append(FILLER_REDEFINE_88);
            sb.append(getAcsttusc());
            sb.append(getAcsttusp());
            sb.append(getAcsttush());
            sb.append(getAcsttusv());
            sb.append(getAcsttuso());
            sb.append(FILLER_REDEFINE_89);
            sb.append(getAdtopenc());
            sb.append(getAdtopenp());
            sb.append(getAdtopenh());
            sb.append(getAdtopenv());
            sb.append(getAdtopeno());
            sb.append(FILLER_REDEFINE_90);
            sb.append(getAcrdlimc());
            sb.append(getAcrdlimp());
            sb.append(getAcrdlimh());
            sb.append(getAcrdlimv());
            sb.append(getAcrdlimo());
            sb.append(FILLER_REDEFINE_91);
            sb.append(getAexpdtc());
            sb.append(getAexpdtp());
            sb.append(getAexpdth());
            sb.append(getAexpdtv());
            sb.append(getAexpdto());
            sb.append(FILLER_REDEFINE_92);
            sb.append(getAcshlimc());
            sb.append(getAcshlimp());
            sb.append(getAcshlimh());
            sb.append(getAcshlimv());
            sb.append(getAcshlimo());
            sb.append(FILLER_REDEFINE_93);
            sb.append(getAreisdtc());
            sb.append(getAreisdtp());
            sb.append(getAreisdth());
            sb.append(getAreisdtv());
            sb.append(getAreisdto());
            sb.append(FILLER_REDEFINE_94);
            sb.append(getAcurbalc());
            sb.append(getAcurbalp());
            sb.append(getAcurbalh());
            sb.append(getAcurbalv());
            sb.append(getAcurbalo());
            sb.append(FILLER_REDEFINE_95);
            sb.append(getAcrcycrc());
            sb.append(getAcrcycrp());
            sb.append(getAcrcycrh());
            sb.append(getAcrcycrv());
            sb.append(getAcrcycro());
            sb.append(FILLER_REDEFINE_96);
            sb.append(getAaddgrpc());
            sb.append(getAaddgrpp());
            sb.append(getAaddgrph());
            sb.append(getAaddgrpv());
            sb.append(getAaddgrpo());
            sb.append(FILLER_REDEFINE_97);
            sb.append(getAcrcydbc());
            sb.append(getAcrcydbp());
            sb.append(getAcrcydbh());
            sb.append(getAcrcydbv());
            sb.append(getAcrcydbo());
            sb.append(FILLER_REDEFINE_98);
            sb.append(getAcstnumc());
            sb.append(getAcstnump());
            sb.append(getAcstnumh());
            sb.append(getAcstnumv());
            sb.append(getAcstnumo());
            sb.append(FILLER_REDEFINE_99);
            sb.append(getAcstssnc());
            sb.append(getAcstssnp());
            sb.append(getAcstssnh());
            sb.append(getAcstssnv());
            sb.append(getAcstssno());
            sb.append(FILLER_REDEFINE_100);
            sb.append(getAcstdobc());
            sb.append(getAcstdobp());
            sb.append(getAcstdobh());
            sb.append(getAcstdobv());
            sb.append(getAcstdobo());
            sb.append(FILLER_REDEFINE_101);
            sb.append(getAcstfcoc());
            sb.append(getAcstfcop());
            sb.append(getAcstfcoh());
            sb.append(getAcstfcov());
            sb.append(getAcstfcoo());
            sb.append(FILLER_REDEFINE_102);
            sb.append(getAcsfnamc());
            sb.append(getAcsfnamp());
            sb.append(getAcsfnamh());
            sb.append(getAcsfnamv());
            sb.append(getAcsfnamo());
            sb.append(FILLER_REDEFINE_103);
            sb.append(getAcsmnamc());
            sb.append(getAcsmnamp());
            sb.append(getAcsmnamh());
            sb.append(getAcsmnamv());
            sb.append(getAcsmnamo());
            sb.append(FILLER_REDEFINE_104);
            sb.append(getAcslnamc());
            sb.append(getAcslnamp());
            sb.append(getAcslnamh());
            sb.append(getAcslnamv());
            sb.append(getAcslnamo());
            sb.append(FILLER_REDEFINE_105);
            sb.append(getAcsadl1c());
            sb.append(getAcsadl1p());
            sb.append(getAcsadl1h());
            sb.append(getAcsadl1v());
            sb.append(getAcsadl1o());
            sb.append(FILLER_REDEFINE_106);
            sb.append(getAcssttec());
            sb.append(getAcssttep());
            sb.append(getAcsstteh());
            sb.append(getAcssttev());
            sb.append(getAcsstteo());
            sb.append(FILLER_REDEFINE_107);
            sb.append(getAcsadl2c());
            sb.append(getAcsadl2p());
            sb.append(getAcsadl2h());
            sb.append(getAcsadl2v());
            sb.append(getAcsadl2o());
            sb.append(FILLER_REDEFINE_108);
            sb.append(getAcszipcc());
            sb.append(getAcszipcp());
            sb.append(getAcszipch());
            sb.append(getAcszipcv());
            sb.append(getAcszipco());
            sb.append(FILLER_REDEFINE_109);
            sb.append(getAcscityc());
            sb.append(getAcscityp());
            sb.append(getAcscityh());
            sb.append(getAcscityv());
            sb.append(getAcscityo());
            sb.append(FILLER_REDEFINE_110);
            sb.append(getAcsctryc());
            sb.append(getAcsctryp());
            sb.append(getAcsctryh());
            sb.append(getAcsctryv());
            sb.append(getAcsctryo());
            sb.append(FILLER_REDEFINE_111);
            sb.append(getAcsphn1c());
            sb.append(getAcsphn1p());
            sb.append(getAcsphn1h());
            sb.append(getAcsphn1v());
            sb.append(getAcsphn1o());
            sb.append(FILLER_REDEFINE_112);
            sb.append(getAcsgovtc());
            sb.append(getAcsgovtp());
            sb.append(getAcsgovth());
            sb.append(getAcsgovtv());
            sb.append(getAcsgovto());
            sb.append(FILLER_REDEFINE_113);
            sb.append(getAcsphn2c());
            sb.append(getAcsphn2p());
            sb.append(getAcsphn2h());
            sb.append(getAcsphn2v());
            sb.append(getAcsphn2o());
            sb.append(FILLER_REDEFINE_114);
            sb.append(getAcseftcc());
            sb.append(getAcseftcp());
            sb.append(getAcseftch());
            sb.append(getAcseftcv());
            sb.append(getAcseftco());
            sb.append(FILLER_REDEFINE_115);
            sb.append(getAcspflgc());
            sb.append(getAcspflgp());
            sb.append(getAcspflgh());
            sb.append(getAcspflgv());
            sb.append(getAcspflgo());
            sb.append(FILLER_REDEFINE_116);
            sb.append(getInfomsgc());
            sb.append(getInfomsgp());
            sb.append(getInfomsgh());
            sb.append(getInfomsgv());
            sb.append(getInfomsgo());
            sb.append(FILLER_REDEFINE_117);
            sb.append(getErrmsgc());
            sb.append(getErrmsgp());
            sb.append(getErrmsgh());
            sb.append(getErrmsgv());
            sb.append(getErrmsgo());
            return sb.toString();
        }
    }
}
