package com.tmax.openframe.variable;

import com.tmax.openframe.runtime.cobol.CobStream;
import com.tmax.openframe.variable.group.*;
import java.math.*;
import java.util.*;
import lombok.*;
import org.apache.commons.lang3.StringUtils;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/03/20 15:15:16 KST</p>
 * <hr>
 * <p>Class that defines variables that defined in the data division of COBOL program</p>
 */
public class CocrdupcVariableContainer {
    // [T-Up#INFO][COCRDUPC.cbl:36] WS-MISC-STORAGE (level: 1)
    private @Getter @Setter CocrdupcWsMiscStorage wsMiscStorage = new CocrdupcWsMiscStorage();
    // ******************************************************************
    // *      Literals and Constants
    // ******************************************************************
    // [T-Up#INFO][COCRDUPC.cbl:218] WS-LITERALS (level: 1)
    private @Getter @Setter CocrdupcWsLiterals wsLiterals = new CocrdupcWsLiterals();
    // ******************************************************************
    // *Other common working storage Variables
    // ******************************************************************
    //       *COPY CVCRD01Y.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CVCRD01Y.cpy)
    // [T-Up#INFO][CVCRD01Y.cpy:2] CC-WORK-AREAS (level: 1)
    private @Getter @Setter CcWorkAreas ccWorkAreas = new CcWorkAreas();
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:16:00 CDT
    // *
    // ******************************************************************
    // *Application Commmarea Copybook
    //       *COPY COCOM01Y.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/COCOM01Y.cpy)
    // ******************************************************************
    // * Communication area for CardDemo application programs
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // [T-Up#INFO][COCOM01Y.cpy:20] CARDDEMO-COMMAREA (level: 1)
    private @Getter @Setter CarddemoCommarea carddemoCommarea = new CarddemoCommarea();
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:57 CDT
    // *
    // [T-Up#INFO][COCRDUPC.cbl:274] WS-THIS-PROGCOMMAREA (level: 1)
    private @Getter @Setter CocrdupcWsThisProgcommarea wsThisProgcommarea = new CocrdupcWsThisProgcommarea();
    // [T-Up#INFO][COCRDUPC.cbl:324] WS-COMMAREA (level: 1)
    private @Getter String wsCommarea = StringUtils.repeat(' ', 2000);
    // *IBM SUPPLIED COPYBOOKS
    //       *COPY DFHBMSCA.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/DFHBMSCA.cpy)
    // [T-Up#INFO][DFHBMSCA.cpy:2] DFHBMSCA (level: 1)
    private @Getter @Setter Dfhbmsca dfhbmsca = new Dfhbmsca();
    //       *COPY DFHAID.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/DFHAID.cpy)
    // [T-Up#INFO][DFHAID.cpy:2] DFHAID (level: 1)
    private @Getter @Setter Dfhaid dfhaid = new Dfhaid();
    // *COMMON COPYBOOKS
    // *Screen Titles
    //       *COPY COTTL01Y.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/COTTL01Y.cpy)
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // [T-Up#INFO][COTTL01Y.cpy:18] CCDA-SCREEN-TITLE (level: 1)
    private @Getter @Setter CcdaScreenTitle ccdaScreenTitle = new CcdaScreenTitle();
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
    // *
    // *Credit Card Update Screen Layout
    //       *COPY COCRDUP.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/COCRDUP.CPY)
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // [T-Up#INFO][COCRDUP.CPY:18] CCRDUPAI (level: 1)
    private @Getter @Setter Ccrdupai ccrdupai = new Ccrdupai();
    // *Current Date
    //       *COPY CSDAT01Y.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSDAT01Y.cpy)
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // [T-Up#INFO][CSDAT01Y.cpy:18] WS-DATE-TIME (level: 1)
    private @Getter @Setter WsDateTime wsDateTime = new WsDateTime();
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
    // *
    // *Common Messages
    //       *COPY CSMSG01Y.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSMSG01Y.cpy)
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // [T-Up#INFO][CSMSG01Y.cpy:18] CCDA-COMMON-MESSAGES (level: 1)
    private @Getter @Setter CcdaCommonMessages ccdaCommonMessages = new CcdaCommonMessages();
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
    // *
    // *Abend Variables
    //       *COPY CSMSG02Y.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSMSG02Y.cpy)
    // *****************************************************************
    // * CABENDD.CPY                                                   *
    // *---------------------------------------------------------------*
    // * Work areas for abend routine                                  *
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // [T-Up#INFO][CSMSG02Y.cpy:22] ABEND-DATA (level: 1)
    private @Getter @Setter AbendData abendData = new AbendData();
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT
    // *
    // *Signed on user data
    //       *COPY CSUSR01Y.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CSUSR01Y.cpy)
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.
    // * All Rights Reserved.
    // *
    // * Licensed under the Apache License, Version 2.0 (the "License").
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at
    // *
    // *    http://www.apache.org/licenses/LICENSE-2.0
    // *
    // * Unless required by applicable law or agreed to in writing,
    // * software distributed under the License is distributed on an
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // * either express or implied. See the License for the specific
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // [T-Up#INFO][CSUSR01Y.cpy:18] SEC-USER-DATA (level: 1)
    private @Getter @Setter SecUserData secUserData = new SecUserData();
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:59 CDT
    // *
    // *Dataset layouts
    // *ACCOUNT RECORD LAYOUT
    // *COPY CVACT01Y.
    // *CARD RECORD LAYOUT
    //       *COPY CVACT02Y.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CVACT02Y.cpy)
    // *****************************************************************
    // *    Data-structure for card entity (RECLN 150)
    // *****************************************************************
    // [T-Up#INFO][CVACT02Y.cpy:5] CARD-RECORD (level: 1)
    private @Getter @Setter CardRecord cardRecord = new CardRecord();
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:16:00 CDT
    // *
    // *CARD XREF LAYOUT
    // *COPY CVACT03Y.
    // *CUSTOMER LAYOUT
    //       *COPY CVCUS01Y.
    // *(/home/oflab/repository/pds/TEST/COBOL_COPYBOOK/CVCUS01Y.cpy)
    // *****************************************************************
    // *    Data-structure for Customer entity (RECLN 500)
    // *****************************************************************
    // [T-Up#INFO][CVCUS01Y.cpy:5] CUSTOMER-RECORD (level: 1)
    private @Getter @Setter CustomerRecord customerRecord = new CustomerRecord();
    // *
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:16:00 CDT
    // *
    // [T-Up#INFO][COCRDUPC.cbl:362] DFHCOMMAREA (level: 1)
    private @Getter @Setter CocrdupcDfhcommarea dfhcommarea = new CocrdupcDfhcommarea();

    public void setWsCommarea(String source) {
        wsCommarea = StringUtils.truncate(StringUtils.rightPad(source, 2000),
                2000);
    }

    public CocrdupcCcrdupao getCcrdupao() {
        return CocrdupcCcrdupao.builder()
                .FILLER_REDEFINE_43(getFILLER_REDEFINE_43())
                .FILLER_REDEFINE_44(getFILLER_REDEFINE_44())
                .trnnamec(getTrnnamec()).trnnamep(getTrnnamep())
                .trnnameh(getTrnnameh()).trnnamev(getTrnnamev())
                .trnnameo(getTrnnameo())
                .FILLER_REDEFINE_45(getFILLER_REDEFINE_45())
                .title01c(getTitle01c()).title01p(getTitle01p())
                .title01h(getTitle01h()).title01v(getTitle01v())
                .title01o(getTitle01o())
                .FILLER_REDEFINE_46(getFILLER_REDEFINE_46())
                .curdatec(getCurdatec()).curdatep(getCurdatep())
                .curdateh(getCurdateh()).curdatev(getCurdatev())
                .curdateo(getCurdateo())
                .FILLER_REDEFINE_47(getFILLER_REDEFINE_47())
                .pgmnamec(getPgmnamec()).pgmnamep(getPgmnamep())
                .pgmnameh(getPgmnameh()).pgmnamev(getPgmnamev())
                .pgmnameo(getPgmnameo())
                .FILLER_REDEFINE_48(getFILLER_REDEFINE_48())
                .title02c(getTitle02c()).title02p(getTitle02p())
                .title02h(getTitle02h()).title02v(getTitle02v())
                .title02o(getTitle02o())
                .FILLER_REDEFINE_49(getFILLER_REDEFINE_49())
                .curtimec(getCurtimec()).curtimep(getCurtimep())
                .curtimeh(getCurtimeh()).curtimev(getCurtimev())
                .curtimeo(getCurtimeo())
                .FILLER_REDEFINE_50(getFILLER_REDEFINE_50())
                .acctsidc(getAcctsidc()).acctsidp(getAcctsidp())
                .acctsidh(getAcctsidh()).acctsidv(getAcctsidv())
                .acctsido(getAcctsido())
                .FILLER_REDEFINE_51(getFILLER_REDEFINE_51())
                .cardsidc(getCardsidc()).cardsidp(getCardsidp())
                .cardsidh(getCardsidh()).cardsidv(getCardsidv())
                .cardsido(getCardsido())
                .FILLER_REDEFINE_52(getFILLER_REDEFINE_52())
                .crdnamec(getCrdnamec()).crdnamep(getCrdnamep())
                .crdnameh(getCrdnameh()).crdnamev(getCrdnamev())
                .crdnameo(getCrdnameo())
                .FILLER_REDEFINE_53(getFILLER_REDEFINE_53())
                .crdstcdc(getCrdstcdc()).crdstcdp(getCrdstcdp())
                .crdstcdh(getCrdstcdh()).crdstcdv(getCrdstcdv())
                .crdstcdo(getCrdstcdo())
                .FILLER_REDEFINE_54(getFILLER_REDEFINE_54())
                .expmonc(getExpmonc()).expmonp(getExpmonp())
                .expmonh(getExpmonh()).expmonv(getExpmonv())
                .expmono(getExpmono())
                .FILLER_REDEFINE_55(getFILLER_REDEFINE_55())
                .expyearc(getExpyearc()).expyearp(getExpyearp())
                .expyearh(getExpyearh()).expyearv(getExpyearv())
                .expyearo(getExpyearo())
                .FILLER_REDEFINE_56(getFILLER_REDEFINE_56())
                .expdayc(getExpdayc()).expdayp(getExpdayp())
                .expdayh(getExpdayh()).expdayv(getExpdayv())
                .expdayo(getExpdayo())
                .FILLER_REDEFINE_57(getFILLER_REDEFINE_57())
                .infomsgc(getInfomsgc()).infomsgp(getInfomsgp())
                .infomsgh(getInfomsgh()).infomsgv(getInfomsgv())
                .infomsgo(getInfomsgo())
                .FILLER_REDEFINE_58(getFILLER_REDEFINE_58())
                .errmsgc(getErrmsgc()).errmsgp(getErrmsgp())
                .errmsgh(getErrmsgh()).errmsgv(getErrmsgv())
                .errmsgo(getErrmsgo())
                .FILLER_REDEFINE_59(getFILLER_REDEFINE_59())
                .fkeysc(getFkeysc()).fkeysp(getFkeysp()).fkeysh(getFkeysh())
                .fkeysv(getFkeysv()).fkeyso(getFkeyso())
                .FILLER_REDEFINE_60(getFILLER_REDEFINE_60())
                .fkeyscc(getFkeyscc()).fkeyscp(getFkeyscp())
                .fkeysch(getFkeysch()).fkeyscv(getFkeyscv())
                .fkeysco(getFkeysco()).build();
    }

    public void setCcrdupao(String source) {
        setFILLER_REDEFINE_43(source.substring(0, 12));
        setFILLER_REDEFINE_44(source.substring(12, 15));
        setTrnnamec(source.substring(15, 16));
        setTrnnamep(source.substring(16, 17));
        setTrnnameh(source.substring(17, 18));
        setTrnnamev(source.substring(18, 19));
        setTrnnameo(source.substring(19, 23));
        setFILLER_REDEFINE_45(source.substring(23, 26));
        setTitle01c(source.substring(26, 27));
        setTitle01p(source.substring(27, 28));
        setTitle01h(source.substring(28, 29));
        setTitle01v(source.substring(29, 30));
        setTitle01o(source.substring(30, 70));
        setFILLER_REDEFINE_46(source.substring(70, 73));
        setCurdatec(source.substring(73, 74));
        setCurdatep(source.substring(74, 75));
        setCurdateh(source.substring(75, 76));
        setCurdatev(source.substring(76, 77));
        setCurdateo(source.substring(77, 85));
        setFILLER_REDEFINE_47(source.substring(85, 88));
        setPgmnamec(source.substring(88, 89));
        setPgmnamep(source.substring(89, 90));
        setPgmnameh(source.substring(90, 91));
        setPgmnamev(source.substring(91, 92));
        setPgmnameo(source.substring(92, 100));
        setFILLER_REDEFINE_48(source.substring(100, 103));
        setTitle02c(source.substring(103, 104));
        setTitle02p(source.substring(104, 105));
        setTitle02h(source.substring(105, 106));
        setTitle02v(source.substring(106, 107));
        setTitle02o(source.substring(107, 147));
        setFILLER_REDEFINE_49(source.substring(147, 150));
        setCurtimec(source.substring(150, 151));
        setCurtimep(source.substring(151, 152));
        setCurtimeh(source.substring(152, 153));
        setCurtimev(source.substring(153, 154));
        setCurtimeo(source.substring(154, 162));
        setFILLER_REDEFINE_50(source.substring(162, 165));
        setAcctsidc(source.substring(165, 166));
        setAcctsidp(source.substring(166, 167));
        setAcctsidh(source.substring(167, 168));
        setAcctsidv(source.substring(168, 169));
        setAcctsido(source.substring(169, 180));
        setFILLER_REDEFINE_51(source.substring(180, 183));
        setCardsidc(source.substring(183, 184));
        setCardsidp(source.substring(184, 185));
        setCardsidh(source.substring(185, 186));
        setCardsidv(source.substring(186, 187));
        setCardsido(source.substring(187, 203));
        setFILLER_REDEFINE_52(source.substring(203, 206));
        setCrdnamec(source.substring(206, 207));
        setCrdnamep(source.substring(207, 208));
        setCrdnameh(source.substring(208, 209));
        setCrdnamev(source.substring(209, 210));
        setCrdnameo(source.substring(210, 260));
        setFILLER_REDEFINE_53(source.substring(260, 263));
        setCrdstcdc(source.substring(263, 264));
        setCrdstcdp(source.substring(264, 265));
        setCrdstcdh(source.substring(265, 266));
        setCrdstcdv(source.substring(266, 267));
        setCrdstcdo(source.substring(267, 268));
        setFILLER_REDEFINE_54(source.substring(268, 271));
        setExpmonc(source.substring(271, 272));
        setExpmonp(source.substring(272, 273));
        setExpmonh(source.substring(273, 274));
        setExpmonv(source.substring(274, 275));
        setExpmono(source.substring(275, 277));
        setFILLER_REDEFINE_55(source.substring(277, 280));
        setExpyearc(source.substring(280, 281));
        setExpyearp(source.substring(281, 282));
        setExpyearh(source.substring(282, 283));
        setExpyearv(source.substring(283, 284));
        setExpyearo(source.substring(284, 288));
        setFILLER_REDEFINE_56(source.substring(288, 291));
        setExpdayc(source.substring(291, 292));
        setExpdayp(source.substring(292, 293));
        setExpdayh(source.substring(293, 294));
        setExpdayv(source.substring(294, 295));
        setExpdayo(source.substring(295, 297));
        setFILLER_REDEFINE_57(source.substring(297, 300));
        setInfomsgc(source.substring(300, 301));
        setInfomsgp(source.substring(301, 302));
        setInfomsgh(source.substring(302, 303));
        setInfomsgv(source.substring(303, 304));
        setInfomsgo(source.substring(304, 344));
        setFILLER_REDEFINE_58(source.substring(344, 347));
        setErrmsgc(source.substring(347, 348));
        setErrmsgp(source.substring(348, 349));
        setErrmsgh(source.substring(349, 350));
        setErrmsgv(source.substring(350, 351));
        setErrmsgo(source.substring(351, 431));
        setFILLER_REDEFINE_59(source.substring(431, 434));
        setFkeysc(source.substring(434, 435));
        setFkeysp(source.substring(435, 436));
        setFkeysh(source.substring(436, 437));
        setFkeysv(source.substring(437, 438));
        setFkeyso(source.substring(438, 459));
        setFILLER_REDEFINE_60(source.substring(459, 462));
        setFkeyscc(source.substring(462, 463));
        setFkeyscp(source.substring(463, 464));
        setFkeysch(source.substring(464, 465));
        setFkeyscv(source.substring(465, 466));
        setFkeysco(source.substring(466, 484));
    }

    public void setCcrdupao(CocrdupcCcrdupao source) {
        setCcrdupao(source.get());
    }

    public String getFILLER_REDEFINE_43() {
        return getCcrdupai().getFILLER_1();
    }

    public void setFILLER_REDEFINE_43(String source) {
        getCcrdupai().setFILLER_1(source);
    }

    public String getFILLER_REDEFINE_44() {
        return CobStream.convShortToString((short) getCcrdupai().getTrnnamel())
                + getCcrdupai().getTrnnamef();
    }

    public void setFILLER_REDEFINE_44(String source) {
        try {
            getCcrdupai().setTrnnamel(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCcrdupai().setTrnnamel(0);
        }
        getCcrdupai().setTrnnamef(source.substring(2, 3));
    }

    public String getTrnnamec() {
        return getCcrdupai().getFILLER_2().substring(0, 1);
    }

    public void setTrnnamec(String source) {
        getCcrdupai().setFILLER_2(
                StringUtils.overlay(getCcrdupai().getFILLER_2(), source, 0, 1));
    }

    public String getTrnnamep() {
        return getCcrdupai().getFILLER_2().substring(1, 2);
    }

    public void setTrnnamep(String source) {
        getCcrdupai().setFILLER_2(
                StringUtils.overlay(getCcrdupai().getFILLER_2(), source, 1, 2));
    }

    public String getTrnnameh() {
        return getCcrdupai().getFILLER_2().substring(2, 3);
    }

    public void setTrnnameh(String source) {
        getCcrdupai().setFILLER_2(
                StringUtils.overlay(getCcrdupai().getFILLER_2(), source, 2, 3));
    }

    public String getTrnnamev() {
        return getCcrdupai().getFILLER_2().substring(3, 4);
    }

    public void setTrnnamev(String source) {
        getCcrdupai().setFILLER_2(
                StringUtils.overlay(getCcrdupai().getFILLER_2(), source, 3, 4));
    }

    public String getTrnnameo() {
        return getCcrdupai().getTrnnamei();
    }

    public void setTrnnameo(String source) {
        getCcrdupai().setTrnnamei(source);
    }

    public String getFILLER_REDEFINE_45() {
        return CobStream.convShortToString((short) getCcrdupai().getTitle01l())
                + getCcrdupai().getTitle01f();
    }

    public void setFILLER_REDEFINE_45(String source) {
        try {
            getCcrdupai().setTitle01l(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCcrdupai().setTitle01l(0);
        }
        getCcrdupai().setTitle01f(source.substring(2, 3));
    }

    public String getTitle01c() {
        return getCcrdupai().getFILLER_3().substring(0, 1);
    }

    public void setTitle01c(String source) {
        getCcrdupai().setFILLER_3(
                StringUtils.overlay(getCcrdupai().getFILLER_3(), source, 0, 1));
    }

    public String getTitle01p() {
        return getCcrdupai().getFILLER_3().substring(1, 2);
    }

    public void setTitle01p(String source) {
        getCcrdupai().setFILLER_3(
                StringUtils.overlay(getCcrdupai().getFILLER_3(), source, 1, 2));
    }

    public String getTitle01h() {
        return getCcrdupai().getFILLER_3().substring(2, 3);
    }

    public void setTitle01h(String source) {
        getCcrdupai().setFILLER_3(
                StringUtils.overlay(getCcrdupai().getFILLER_3(), source, 2, 3));
    }

    public String getTitle01v() {
        return getCcrdupai().getFILLER_3().substring(3, 4);
    }

    public void setTitle01v(String source) {
        getCcrdupai().setFILLER_3(
                StringUtils.overlay(getCcrdupai().getFILLER_3(), source, 3, 4));
    }

    public String getTitle01o() {
        return getCcrdupai().getTitle01i();
    }

    public void setTitle01o(String source) {
        getCcrdupai().setTitle01i(source);
    }

    public String getFILLER_REDEFINE_46() {
        return CobStream.convShortToString((short) getCcrdupai().getCurdatel())
                + getCcrdupai().getCurdatef();
    }

    public void setFILLER_REDEFINE_46(String source) {
        try {
            getCcrdupai().setCurdatel(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCcrdupai().setCurdatel(0);
        }
        getCcrdupai().setCurdatef(source.substring(2, 3));
    }

    public String getCurdatec() {
        return getCcrdupai().getFILLER_4().substring(0, 1);
    }

    public void setCurdatec(String source) {
        getCcrdupai().setFILLER_4(
                StringUtils.overlay(getCcrdupai().getFILLER_4(), source, 0, 1));
    }

    public String getCurdatep() {
        return getCcrdupai().getFILLER_4().substring(1, 2);
    }

    public void setCurdatep(String source) {
        getCcrdupai().setFILLER_4(
                StringUtils.overlay(getCcrdupai().getFILLER_4(), source, 1, 2));
    }

    public String getCurdateh() {
        return getCcrdupai().getFILLER_4().substring(2, 3);
    }

    public void setCurdateh(String source) {
        getCcrdupai().setFILLER_4(
                StringUtils.overlay(getCcrdupai().getFILLER_4(), source, 2, 3));
    }

    public String getCurdatev() {
        return getCcrdupai().getFILLER_4().substring(3, 4);
    }

    public void setCurdatev(String source) {
        getCcrdupai().setFILLER_4(
                StringUtils.overlay(getCcrdupai().getFILLER_4(), source, 3, 4));
    }

    public String getCurdateo() {
        return getCcrdupai().getCurdatei();
    }

    public void setCurdateo(String source) {
        getCcrdupai().setCurdatei(source);
    }

    public String getFILLER_REDEFINE_47() {
        return CobStream.convShortToString((short) getCcrdupai().getPgmnamel())
                + getCcrdupai().getPgmnamef();
    }

    public void setFILLER_REDEFINE_47(String source) {
        try {
            getCcrdupai().setPgmnamel(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCcrdupai().setPgmnamel(0);
        }
        getCcrdupai().setPgmnamef(source.substring(2, 3));
    }

    public String getPgmnamec() {
        return getCcrdupai().getFILLER_5().substring(0, 1);
    }

    public void setPgmnamec(String source) {
        getCcrdupai().setFILLER_5(
                StringUtils.overlay(getCcrdupai().getFILLER_5(), source, 0, 1));
    }

    public String getPgmnamep() {
        return getCcrdupai().getFILLER_5().substring(1, 2);
    }

    public void setPgmnamep(String source) {
        getCcrdupai().setFILLER_5(
                StringUtils.overlay(getCcrdupai().getFILLER_5(), source, 1, 2));
    }

    public String getPgmnameh() {
        return getCcrdupai().getFILLER_5().substring(2, 3);
    }

    public void setPgmnameh(String source) {
        getCcrdupai().setFILLER_5(
                StringUtils.overlay(getCcrdupai().getFILLER_5(), source, 2, 3));
    }

    public String getPgmnamev() {
        return getCcrdupai().getFILLER_5().substring(3, 4);
    }

    public void setPgmnamev(String source) {
        getCcrdupai().setFILLER_5(
                StringUtils.overlay(getCcrdupai().getFILLER_5(), source, 3, 4));
    }

    public String getPgmnameo() {
        return getCcrdupai().getPgmnamei();
    }

    public void setPgmnameo(String source) {
        getCcrdupai().setPgmnamei(source);
    }

    public String getFILLER_REDEFINE_48() {
        return CobStream.convShortToString((short) getCcrdupai().getTitle02l())
                + getCcrdupai().getTitle02f();
    }

    public void setFILLER_REDEFINE_48(String source) {
        try {
            getCcrdupai().setTitle02l(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCcrdupai().setTitle02l(0);
        }
        getCcrdupai().setTitle02f(source.substring(2, 3));
    }

    public String getTitle02c() {
        return getCcrdupai().getFILLER_6().substring(0, 1);
    }

    public void setTitle02c(String source) {
        getCcrdupai().setFILLER_6(
                StringUtils.overlay(getCcrdupai().getFILLER_6(), source, 0, 1));
    }

    public String getTitle02p() {
        return getCcrdupai().getFILLER_6().substring(1, 2);
    }

    public void setTitle02p(String source) {
        getCcrdupai().setFILLER_6(
                StringUtils.overlay(getCcrdupai().getFILLER_6(), source, 1, 2));
    }

    public String getTitle02h() {
        return getCcrdupai().getFILLER_6().substring(2, 3);
    }

    public void setTitle02h(String source) {
        getCcrdupai().setFILLER_6(
                StringUtils.overlay(getCcrdupai().getFILLER_6(), source, 2, 3));
    }

    public String getTitle02v() {
        return getCcrdupai().getFILLER_6().substring(3, 4);
    }

    public void setTitle02v(String source) {
        getCcrdupai().setFILLER_6(
                StringUtils.overlay(getCcrdupai().getFILLER_6(), source, 3, 4));
    }

    public String getTitle02o() {
        return getCcrdupai().getTitle02i();
    }

    public void setTitle02o(String source) {
        getCcrdupai().setTitle02i(source);
    }

    public String getFILLER_REDEFINE_49() {
        return CobStream.convShortToString((short) getCcrdupai().getCurtimel())
                + getCcrdupai().getCurtimef();
    }

    public void setFILLER_REDEFINE_49(String source) {
        try {
            getCcrdupai().setCurtimel(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCcrdupai().setCurtimel(0);
        }
        getCcrdupai().setCurtimef(source.substring(2, 3));
    }

    public String getCurtimec() {
        return getCcrdupai().getFILLER_7().substring(0, 1);
    }

    public void setCurtimec(String source) {
        getCcrdupai().setFILLER_7(
                StringUtils.overlay(getCcrdupai().getFILLER_7(), source, 0, 1));
    }

    public String getCurtimep() {
        return getCcrdupai().getFILLER_7().substring(1, 2);
    }

    public void setCurtimep(String source) {
        getCcrdupai().setFILLER_7(
                StringUtils.overlay(getCcrdupai().getFILLER_7(), source, 1, 2));
    }

    public String getCurtimeh() {
        return getCcrdupai().getFILLER_7().substring(2, 3);
    }

    public void setCurtimeh(String source) {
        getCcrdupai().setFILLER_7(
                StringUtils.overlay(getCcrdupai().getFILLER_7(), source, 2, 3));
    }

    public String getCurtimev() {
        return getCcrdupai().getFILLER_7().substring(3, 4);
    }

    public void setCurtimev(String source) {
        getCcrdupai().setFILLER_7(
                StringUtils.overlay(getCcrdupai().getFILLER_7(), source, 3, 4));
    }

    public String getCurtimeo() {
        return getCcrdupai().getCurtimei();
    }

    public void setCurtimeo(String source) {
        getCcrdupai().setCurtimei(source);
    }

    public String getFILLER_REDEFINE_50() {
        return CobStream.convShortToString((short) getCcrdupai().getAcctsidl())
                + getCcrdupai().getAcctsidf();
    }

    public void setFILLER_REDEFINE_50(String source) {
        try {
            getCcrdupai().setAcctsidl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCcrdupai().setAcctsidl(0);
        }
        getCcrdupai().setAcctsidf(source.substring(2, 3));
    }

    public String getAcctsidc() {
        return getCcrdupai().getFILLER_8().substring(0, 1);
    }

    public void setAcctsidc(String source) {
        getCcrdupai().setFILLER_8(
                StringUtils.overlay(getCcrdupai().getFILLER_8(), source, 0, 1));
    }

    public String getAcctsidp() {
        return getCcrdupai().getFILLER_8().substring(1, 2);
    }

    public void setAcctsidp(String source) {
        getCcrdupai().setFILLER_8(
                StringUtils.overlay(getCcrdupai().getFILLER_8(), source, 1, 2));
    }

    public String getAcctsidh() {
        return getCcrdupai().getFILLER_8().substring(2, 3);
    }

    public void setAcctsidh(String source) {
        getCcrdupai().setFILLER_8(
                StringUtils.overlay(getCcrdupai().getFILLER_8(), source, 2, 3));
    }

    public String getAcctsidv() {
        return getCcrdupai().getFILLER_8().substring(3, 4);
    }

    public void setAcctsidv(String source) {
        getCcrdupai().setFILLER_8(
                StringUtils.overlay(getCcrdupai().getFILLER_8(), source, 3, 4));
    }

    public String getAcctsido() {
        return getCcrdupai().getAcctsidi();
    }

    public void setAcctsido(String source) {
        getCcrdupai().setAcctsidi(source);
    }

    public String getFILLER_REDEFINE_51() {
        return CobStream.convShortToString((short) getCcrdupai().getCardsidl())
                + getCcrdupai().getCardsidf();
    }

    public void setFILLER_REDEFINE_51(String source) {
        try {
            getCcrdupai().setCardsidl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCcrdupai().setCardsidl(0);
        }
        getCcrdupai().setCardsidf(source.substring(2, 3));
    }

    public String getCardsidc() {
        return getCcrdupai().getFILLER_9().substring(0, 1);
    }

    public void setCardsidc(String source) {
        getCcrdupai().setFILLER_9(
                StringUtils.overlay(getCcrdupai().getFILLER_9(), source, 0, 1));
    }

    public String getCardsidp() {
        return getCcrdupai().getFILLER_9().substring(1, 2);
    }

    public void setCardsidp(String source) {
        getCcrdupai().setFILLER_9(
                StringUtils.overlay(getCcrdupai().getFILLER_9(), source, 1, 2));
    }

    public String getCardsidh() {
        return getCcrdupai().getFILLER_9().substring(2, 3);
    }

    public void setCardsidh(String source) {
        getCcrdupai().setFILLER_9(
                StringUtils.overlay(getCcrdupai().getFILLER_9(), source, 2, 3));
    }

    public String getCardsidv() {
        return getCcrdupai().getFILLER_9().substring(3, 4);
    }

    public void setCardsidv(String source) {
        getCcrdupai().setFILLER_9(
                StringUtils.overlay(getCcrdupai().getFILLER_9(), source, 3, 4));
    }

    public String getCardsido() {
        return getCcrdupai().getCardsidi();
    }

    public void setCardsido(String source) {
        getCcrdupai().setCardsidi(source);
    }

    public String getFILLER_REDEFINE_52() {
        return CobStream.convShortToString((short) getCcrdupai().getCrdnamel())
                + getCcrdupai().getCrdnamef();
    }

    public void setFILLER_REDEFINE_52(String source) {
        try {
            getCcrdupai().setCrdnamel(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCcrdupai().setCrdnamel(0);
        }
        getCcrdupai().setCrdnamef(source.substring(2, 3));
    }

    public String getCrdnamec() {
        return getCcrdupai().getFILLER_10().substring(0, 1);
    }

    public void setCrdnamec(String source) {
        getCcrdupai()
                .setFILLER_10(
                        StringUtils.overlay(getCcrdupai().getFILLER_10(),
                                source, 0, 1));
    }

    public String getCrdnamep() {
        return getCcrdupai().getFILLER_10().substring(1, 2);
    }

    public void setCrdnamep(String source) {
        getCcrdupai()
                .setFILLER_10(
                        StringUtils.overlay(getCcrdupai().getFILLER_10(),
                                source, 1, 2));
    }

    public String getCrdnameh() {
        return getCcrdupai().getFILLER_10().substring(2, 3);
    }

    public void setCrdnameh(String source) {
        getCcrdupai()
                .setFILLER_10(
                        StringUtils.overlay(getCcrdupai().getFILLER_10(),
                                source, 2, 3));
    }

    public String getCrdnamev() {
        return getCcrdupai().getFILLER_10().substring(3, 4);
    }

    public void setCrdnamev(String source) {
        getCcrdupai()
                .setFILLER_10(
                        StringUtils.overlay(getCcrdupai().getFILLER_10(),
                                source, 3, 4));
    }

    public String getCrdnameo() {
        return getCcrdupai().getCrdnamei();
    }

    public void setCrdnameo(String source) {
        getCcrdupai().setCrdnamei(source);
    }

    public String getFILLER_REDEFINE_53() {
        return CobStream.convShortToString((short) getCcrdupai().getCrdstcdl())
                + getCcrdupai().getCrdstcdf();
    }

    public void setFILLER_REDEFINE_53(String source) {
        try {
            getCcrdupai().setCrdstcdl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCcrdupai().setCrdstcdl(0);
        }
        getCcrdupai().setCrdstcdf(source.substring(2, 3));
    }

    public String getCrdstcdc() {
        return getCcrdupai().getFILLER_11().substring(0, 1);
    }

    public void setCrdstcdc(String source) {
        getCcrdupai()
                .setFILLER_11(
                        StringUtils.overlay(getCcrdupai().getFILLER_11(),
                                source, 0, 1));
    }

    public String getCrdstcdp() {
        return getCcrdupai().getFILLER_11().substring(1, 2);
    }

    public void setCrdstcdp(String source) {
        getCcrdupai()
                .setFILLER_11(
                        StringUtils.overlay(getCcrdupai().getFILLER_11(),
                                source, 1, 2));
    }

    public String getCrdstcdh() {
        return getCcrdupai().getFILLER_11().substring(2, 3);
    }

    public void setCrdstcdh(String source) {
        getCcrdupai()
                .setFILLER_11(
                        StringUtils.overlay(getCcrdupai().getFILLER_11(),
                                source, 2, 3));
    }

    public String getCrdstcdv() {
        return getCcrdupai().getFILLER_11().substring(3, 4);
    }

    public void setCrdstcdv(String source) {
        getCcrdupai()
                .setFILLER_11(
                        StringUtils.overlay(getCcrdupai().getFILLER_11(),
                                source, 3, 4));
    }

    public String getCrdstcdo() {
        return getCcrdupai().getCrdstcdi();
    }

    public void setCrdstcdo(String source) {
        getCcrdupai().setCrdstcdi(source);
    }

    public String getFILLER_REDEFINE_54() {
        return CobStream.convShortToString((short) getCcrdupai().getExpmonl())
                + getCcrdupai().getExpmonf();
    }

    public void setFILLER_REDEFINE_54(String source) {
        try {
            getCcrdupai().setExpmonl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCcrdupai().setExpmonl(0);
        }
        getCcrdupai().setExpmonf(source.substring(2, 3));
    }

    public String getExpmonc() {
        return getCcrdupai().getFILLER_12().substring(0, 1);
    }

    public void setExpmonc(String source) {
        getCcrdupai()
                .setFILLER_12(
                        StringUtils.overlay(getCcrdupai().getFILLER_12(),
                                source, 0, 1));
    }

    public String getExpmonp() {
        return getCcrdupai().getFILLER_12().substring(1, 2);
    }

    public void setExpmonp(String source) {
        getCcrdupai()
                .setFILLER_12(
                        StringUtils.overlay(getCcrdupai().getFILLER_12(),
                                source, 1, 2));
    }

    public String getExpmonh() {
        return getCcrdupai().getFILLER_12().substring(2, 3);
    }

    public void setExpmonh(String source) {
        getCcrdupai()
                .setFILLER_12(
                        StringUtils.overlay(getCcrdupai().getFILLER_12(),
                                source, 2, 3));
    }

    public String getExpmonv() {
        return getCcrdupai().getFILLER_12().substring(3, 4);
    }

    public void setExpmonv(String source) {
        getCcrdupai()
                .setFILLER_12(
                        StringUtils.overlay(getCcrdupai().getFILLER_12(),
                                source, 3, 4));
    }

    public String getExpmono() {
        return getCcrdupai().getExpmoni();
    }

    public void setExpmono(String source) {
        getCcrdupai().setExpmoni(source);
    }

    public String getFILLER_REDEFINE_55() {
        return CobStream.convShortToString((short) getCcrdupai().getExpyearl())
                + getCcrdupai().getExpyearf();
    }

    public void setFILLER_REDEFINE_55(String source) {
        try {
            getCcrdupai().setExpyearl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCcrdupai().setExpyearl(0);
        }
        getCcrdupai().setExpyearf(source.substring(2, 3));
    }

    public String getExpyearc() {
        return getCcrdupai().getFILLER_13().substring(0, 1);
    }

    public void setExpyearc(String source) {
        getCcrdupai()
                .setFILLER_13(
                        StringUtils.overlay(getCcrdupai().getFILLER_13(),
                                source, 0, 1));
    }

    public String getExpyearp() {
        return getCcrdupai().getFILLER_13().substring(1, 2);
    }

    public void setExpyearp(String source) {
        getCcrdupai()
                .setFILLER_13(
                        StringUtils.overlay(getCcrdupai().getFILLER_13(),
                                source, 1, 2));
    }

    public String getExpyearh() {
        return getCcrdupai().getFILLER_13().substring(2, 3);
    }

    public void setExpyearh(String source) {
        getCcrdupai()
                .setFILLER_13(
                        StringUtils.overlay(getCcrdupai().getFILLER_13(),
                                source, 2, 3));
    }

    public String getExpyearv() {
        return getCcrdupai().getFILLER_13().substring(3, 4);
    }

    public void setExpyearv(String source) {
        getCcrdupai()
                .setFILLER_13(
                        StringUtils.overlay(getCcrdupai().getFILLER_13(),
                                source, 3, 4));
    }

    public String getExpyearo() {
        return getCcrdupai().getExpyeari();
    }

    public void setExpyearo(String source) {
        getCcrdupai().setExpyeari(source);
    }

    public String getFILLER_REDEFINE_56() {
        return CobStream.convShortToString((short) getCcrdupai().getExpdayl())
                + getCcrdupai().getExpdayf();
    }

    public void setFILLER_REDEFINE_56(String source) {
        try {
            getCcrdupai().setExpdayl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCcrdupai().setExpdayl(0);
        }
        getCcrdupai().setExpdayf(source.substring(2, 3));
    }

    public String getExpdayc() {
        return getCcrdupai().getFILLER_14().substring(0, 1);
    }

    public void setExpdayc(String source) {
        getCcrdupai()
                .setFILLER_14(
                        StringUtils.overlay(getCcrdupai().getFILLER_14(),
                                source, 0, 1));
    }

    public String getExpdayp() {
        return getCcrdupai().getFILLER_14().substring(1, 2);
    }

    public void setExpdayp(String source) {
        getCcrdupai()
                .setFILLER_14(
                        StringUtils.overlay(getCcrdupai().getFILLER_14(),
                                source, 1, 2));
    }

    public String getExpdayh() {
        return getCcrdupai().getFILLER_14().substring(2, 3);
    }

    public void setExpdayh(String source) {
        getCcrdupai()
                .setFILLER_14(
                        StringUtils.overlay(getCcrdupai().getFILLER_14(),
                                source, 2, 3));
    }

    public String getExpdayv() {
        return getCcrdupai().getFILLER_14().substring(3, 4);
    }

    public void setExpdayv(String source) {
        getCcrdupai()
                .setFILLER_14(
                        StringUtils.overlay(getCcrdupai().getFILLER_14(),
                                source, 3, 4));
    }

    public String getExpdayo() {
        return getCcrdupai().getExpdayi();
    }

    public void setExpdayo(String source) {
        getCcrdupai().setExpdayi(source);
    }

    public String getFILLER_REDEFINE_57() {
        return CobStream.convShortToString((short) getCcrdupai().getInfomsgl())
                + getCcrdupai().getInfomsgf();
    }

    public void setFILLER_REDEFINE_57(String source) {
        try {
            getCcrdupai().setInfomsgl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCcrdupai().setInfomsgl(0);
        }
        getCcrdupai().setInfomsgf(source.substring(2, 3));
    }

    public String getInfomsgc() {
        return getCcrdupai().getFILLER_15().substring(0, 1);
    }

    public void setInfomsgc(String source) {
        getCcrdupai()
                .setFILLER_15(
                        StringUtils.overlay(getCcrdupai().getFILLER_15(),
                                source, 0, 1));
    }

    public String getInfomsgp() {
        return getCcrdupai().getFILLER_15().substring(1, 2);
    }

    public void setInfomsgp(String source) {
        getCcrdupai()
                .setFILLER_15(
                        StringUtils.overlay(getCcrdupai().getFILLER_15(),
                                source, 1, 2));
    }

    public String getInfomsgh() {
        return getCcrdupai().getFILLER_15().substring(2, 3);
    }

    public void setInfomsgh(String source) {
        getCcrdupai()
                .setFILLER_15(
                        StringUtils.overlay(getCcrdupai().getFILLER_15(),
                                source, 2, 3));
    }

    public String getInfomsgv() {
        return getCcrdupai().getFILLER_15().substring(3, 4);
    }

    public void setInfomsgv(String source) {
        getCcrdupai()
                .setFILLER_15(
                        StringUtils.overlay(getCcrdupai().getFILLER_15(),
                                source, 3, 4));
    }

    public String getInfomsgo() {
        return getCcrdupai().getInfomsgi();
    }

    public void setInfomsgo(String source) {
        getCcrdupai().setInfomsgi(source);
    }

    public String getFILLER_REDEFINE_58() {
        return CobStream.convShortToString((short) getCcrdupai().getErrmsgl())
                + getCcrdupai().getErrmsgf();
    }

    public void setFILLER_REDEFINE_58(String source) {
        try {
            getCcrdupai().setErrmsgl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCcrdupai().setErrmsgl(0);
        }
        getCcrdupai().setErrmsgf(source.substring(2, 3));
    }

    public String getErrmsgc() {
        return getCcrdupai().getFILLER_16().substring(0, 1);
    }

    public void setErrmsgc(String source) {
        getCcrdupai()
                .setFILLER_16(
                        StringUtils.overlay(getCcrdupai().getFILLER_16(),
                                source, 0, 1));
    }

    public String getErrmsgp() {
        return getCcrdupai().getFILLER_16().substring(1, 2);
    }

    public void setErrmsgp(String source) {
        getCcrdupai()
                .setFILLER_16(
                        StringUtils.overlay(getCcrdupai().getFILLER_16(),
                                source, 1, 2));
    }

    public String getErrmsgh() {
        return getCcrdupai().getFILLER_16().substring(2, 3);
    }

    public void setErrmsgh(String source) {
        getCcrdupai()
                .setFILLER_16(
                        StringUtils.overlay(getCcrdupai().getFILLER_16(),
                                source, 2, 3));
    }

    public String getErrmsgv() {
        return getCcrdupai().getFILLER_16().substring(3, 4);
    }

    public void setErrmsgv(String source) {
        getCcrdupai()
                .setFILLER_16(
                        StringUtils.overlay(getCcrdupai().getFILLER_16(),
                                source, 3, 4));
    }

    public String getErrmsgo() {
        return getCcrdupai().getErrmsgi();
    }

    public void setErrmsgo(String source) {
        getCcrdupai().setErrmsgi(source);
    }

    public String getFILLER_REDEFINE_59() {
        return CobStream.convShortToString((short) getCcrdupai().getFkeysl())
                + getCcrdupai().getFkeysf();
    }

    public void setFILLER_REDEFINE_59(String source) {
        try {
            getCcrdupai().setFkeysl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCcrdupai().setFkeysl(0);
        }
        getCcrdupai().setFkeysf(source.substring(2, 3));
    }

    public String getFkeysc() {
        return getCcrdupai().getFILLER_17().substring(0, 1);
    }

    public void setFkeysc(String source) {
        getCcrdupai()
                .setFILLER_17(
                        StringUtils.overlay(getCcrdupai().getFILLER_17(),
                                source, 0, 1));
    }

    public String getFkeysp() {
        return getCcrdupai().getFILLER_17().substring(1, 2);
    }

    public void setFkeysp(String source) {
        getCcrdupai()
                .setFILLER_17(
                        StringUtils.overlay(getCcrdupai().getFILLER_17(),
                                source, 1, 2));
    }

    public String getFkeysh() {
        return getCcrdupai().getFILLER_17().substring(2, 3);
    }

    public void setFkeysh(String source) {
        getCcrdupai()
                .setFILLER_17(
                        StringUtils.overlay(getCcrdupai().getFILLER_17(),
                                source, 2, 3));
    }

    public String getFkeysv() {
        return getCcrdupai().getFILLER_17().substring(3, 4);
    }

    public void setFkeysv(String source) {
        getCcrdupai()
                .setFILLER_17(
                        StringUtils.overlay(getCcrdupai().getFILLER_17(),
                                source, 3, 4));
    }

    public String getFkeyso() {
        return getCcrdupai().getFkeysi();
    }

    public void setFkeyso(String source) {
        getCcrdupai().setFkeysi(source);
    }

    public String getFILLER_REDEFINE_60() {
        return CobStream.convShortToString((short) getCcrdupai().getFkeyscl())
                + getCcrdupai().getFkeyscf();
    }

    public void setFILLER_REDEFINE_60(String source) {
        try {
            getCcrdupai().setFkeyscl(
                    CobStream.convStringToShort(source.substring(0, 2)));
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCcrdupai().setFkeyscl(0);
        }
        getCcrdupai().setFkeyscf(source.substring(2, 3));
    }

    public String getFkeyscc() {
        return getCcrdupai().getFILLER_18().substring(0, 1);
    }

    public void setFkeyscc(String source) {
        getCcrdupai()
                .setFILLER_18(
                        StringUtils.overlay(getCcrdupai().getFILLER_18(),
                                source, 0, 1));
    }

    public String getFkeyscp() {
        return getCcrdupai().getFILLER_18().substring(1, 2);
    }

    public void setFkeyscp(String source) {
        getCcrdupai()
                .setFILLER_18(
                        StringUtils.overlay(getCcrdupai().getFILLER_18(),
                                source, 1, 2));
    }

    public String getFkeysch() {
        return getCcrdupai().getFILLER_18().substring(2, 3);
    }

    public void setFkeysch(String source) {
        getCcrdupai()
                .setFILLER_18(
                        StringUtils.overlay(getCcrdupai().getFILLER_18(),
                                source, 2, 3));
    }

    public String getFkeyscv() {
        return getCcrdupai().getFILLER_18().substring(3, 4);
    }

    public void setFkeyscv(String source) {
        getCcrdupai()
                .setFILLER_18(
                        StringUtils.overlay(getCcrdupai().getFILLER_18(),
                                source, 3, 4));
    }

    public String getFkeysco() {
        return getCcrdupai().getFkeysci();
    }

    public void setFkeysco(String source) {
        getCcrdupai().setFkeysci(source);
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CocrdupcCcrdupao {
        // [T-Up#INFO][COCRDUP.CPY:123] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_43 = StringUtils.repeat(' ', 12);
        // [T-Up#INFO][COCRDUP.CPY:124] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_44 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COCRDUP.CPY:125] TRNNAMEC (level: 2)
        private @Getter String trnnamec = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:126] TRNNAMEP (level: 2)
        private @Getter String trnnamep = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:127] TRNNAMEH (level: 2)
        private @Getter String trnnameh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:128] TRNNAMEV (level: 2)
        private @Getter String trnnamev = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:129] TRNNAMEO (level: 2)
        private @Getter String trnnameo = StringUtils.repeat(' ', 4);
        // [T-Up#INFO][COCRDUP.CPY:130] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_45 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COCRDUP.CPY:131] TITLE01C (level: 2)
        private @Getter String title01c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:132] TITLE01P (level: 2)
        private @Getter String title01p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:133] TITLE01H (level: 2)
        private @Getter String title01h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:134] TITLE01V (level: 2)
        private @Getter String title01v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:135] TITLE01O (level: 2)
        private @Getter String title01o = StringUtils.repeat(' ', 40);
        // [T-Up#INFO][COCRDUP.CPY:136] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_46 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COCRDUP.CPY:137] CURDATEC (level: 2)
        private @Getter String curdatec = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:138] CURDATEP (level: 2)
        private @Getter String curdatep = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:139] CURDATEH (level: 2)
        private @Getter String curdateh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:140] CURDATEV (level: 2)
        private @Getter String curdatev = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:141] CURDATEO (level: 2)
        private @Getter String curdateo = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COCRDUP.CPY:142] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_47 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COCRDUP.CPY:143] PGMNAMEC (level: 2)
        private @Getter String pgmnamec = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:144] PGMNAMEP (level: 2)
        private @Getter String pgmnamep = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:145] PGMNAMEH (level: 2)
        private @Getter String pgmnameh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:146] PGMNAMEV (level: 2)
        private @Getter String pgmnamev = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:147] PGMNAMEO (level: 2)
        private @Getter String pgmnameo = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COCRDUP.CPY:148] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_48 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COCRDUP.CPY:149] TITLE02C (level: 2)
        private @Getter String title02c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:150] TITLE02P (level: 2)
        private @Getter String title02p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:151] TITLE02H (level: 2)
        private @Getter String title02h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:152] TITLE02V (level: 2)
        private @Getter String title02v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:153] TITLE02O (level: 2)
        private @Getter String title02o = StringUtils.repeat(' ', 40);
        // [T-Up#INFO][COCRDUP.CPY:154] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_49 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COCRDUP.CPY:155] CURTIMEC (level: 2)
        private @Getter String curtimec = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:156] CURTIMEP (level: 2)
        private @Getter String curtimep = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:157] CURTIMEH (level: 2)
        private @Getter String curtimeh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:158] CURTIMEV (level: 2)
        private @Getter String curtimev = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:159] CURTIMEO (level: 2)
        private @Getter String curtimeo = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COCRDUP.CPY:160] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_50 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COCRDUP.CPY:161] ACCTSIDC (level: 2)
        private @Getter String acctsidc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:162] ACCTSIDP (level: 2)
        private @Getter String acctsidp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:163] ACCTSIDH (level: 2)
        private @Getter String acctsidh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:164] ACCTSIDV (level: 2)
        private @Getter String acctsidv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:165] ACCTSIDO (level: 2)
        private @Getter String acctsido = StringUtils.repeat(' ', 11);
        // [T-Up#INFO][COCRDUP.CPY:166] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_51 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COCRDUP.CPY:167] CARDSIDC (level: 2)
        private @Getter String cardsidc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:168] CARDSIDP (level: 2)
        private @Getter String cardsidp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:169] CARDSIDH (level: 2)
        private @Getter String cardsidh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:170] CARDSIDV (level: 2)
        private @Getter String cardsidv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:171] CARDSIDO (level: 2)
        private @Getter String cardsido = StringUtils.repeat(' ', 16);
        // [T-Up#INFO][COCRDUP.CPY:172] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_52 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COCRDUP.CPY:173] CRDNAMEC (level: 2)
        private @Getter String crdnamec = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:174] CRDNAMEP (level: 2)
        private @Getter String crdnamep = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:175] CRDNAMEH (level: 2)
        private @Getter String crdnameh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:176] CRDNAMEV (level: 2)
        private @Getter String crdnamev = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:177] CRDNAMEO (level: 2)
        private @Getter String crdnameo = StringUtils.repeat(' ', 50);
        // [T-Up#INFO][COCRDUP.CPY:178] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_53 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COCRDUP.CPY:179] CRDSTCDC (level: 2)
        private @Getter String crdstcdc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:180] CRDSTCDP (level: 2)
        private @Getter String crdstcdp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:181] CRDSTCDH (level: 2)
        private @Getter String crdstcdh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:182] CRDSTCDV (level: 2)
        private @Getter String crdstcdv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:183] CRDSTCDO (level: 2)
        private @Getter String crdstcdo = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:184] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_54 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COCRDUP.CPY:185] EXPMONC (level: 2)
        private @Getter String expmonc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:186] EXPMONP (level: 2)
        private @Getter String expmonp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:187] EXPMONH (level: 2)
        private @Getter String expmonh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:188] EXPMONV (level: 2)
        private @Getter String expmonv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:189] EXPMONO (level: 2)
        private @Getter String expmono = StringUtils.repeat(' ', 2);
        // [T-Up#INFO][COCRDUP.CPY:190] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_55 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COCRDUP.CPY:191] EXPYEARC (level: 2)
        private @Getter String expyearc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:192] EXPYEARP (level: 2)
        private @Getter String expyearp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:193] EXPYEARH (level: 2)
        private @Getter String expyearh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:194] EXPYEARV (level: 2)
        private @Getter String expyearv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:195] EXPYEARO (level: 2)
        private @Getter String expyearo = StringUtils.repeat(' ', 4);
        // [T-Up#INFO][COCRDUP.CPY:196] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_56 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COCRDUP.CPY:197] EXPDAYC (level: 2)
        private @Getter String expdayc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:198] EXPDAYP (level: 2)
        private @Getter String expdayp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:199] EXPDAYH (level: 2)
        private @Getter String expdayh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:200] EXPDAYV (level: 2)
        private @Getter String expdayv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:201] EXPDAYO (level: 2)
        private @Getter String expdayo = StringUtils.repeat(' ', 2);
        // [T-Up#INFO][COCRDUP.CPY:202] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_57 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COCRDUP.CPY:203] INFOMSGC (level: 2)
        private @Getter String infomsgc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:204] INFOMSGP (level: 2)
        private @Getter String infomsgp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:205] INFOMSGH (level: 2)
        private @Getter String infomsgh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:206] INFOMSGV (level: 2)
        private @Getter String infomsgv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:207] INFOMSGO (level: 2)
        private @Getter String infomsgo = StringUtils.repeat(' ', 40);
        // [T-Up#INFO][COCRDUP.CPY:208] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_58 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COCRDUP.CPY:209] ERRMSGC (level: 2)
        private @Getter String errmsgc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:210] ERRMSGP (level: 2)
        private @Getter String errmsgp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:211] ERRMSGH (level: 2)
        private @Getter String errmsgh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:212] ERRMSGV (level: 2)
        private @Getter String errmsgv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:213] ERRMSGO (level: 2)
        private @Getter String errmsgo = StringUtils.repeat(' ', 80);
        // [T-Up#INFO][COCRDUP.CPY:214] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_59 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COCRDUP.CPY:215] FKEYSC (level: 2)
        private @Getter String fkeysc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:216] FKEYSP (level: 2)
        private @Getter String fkeysp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:217] FKEYSH (level: 2)
        private @Getter String fkeysh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:218] FKEYSV (level: 2)
        private @Getter String fkeysv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:219] FKEYSO (level: 2)
        private @Getter String fkeyso = StringUtils.repeat(' ', 21);
        // [T-Up#INFO][COCRDUP.CPY:220] FILLER (level: 2)
        private @Getter String FILLER_REDEFINE_60 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COCRDUP.CPY:221] FKEYSCC (level: 2)
        private @Getter String fkeyscc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:222] FKEYSCP (level: 2)
        private @Getter String fkeyscp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:223] FKEYSCH (level: 2)
        private @Getter String fkeysch = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:224] FKEYSCV (level: 2)
        private @Getter String fkeyscv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COCRDUP.CPY:225] FKEYSCO (level: 2)
        private @Getter String fkeysco = StringUtils.repeat(' ', 18);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(FILLER_REDEFINE_43);
            sb.append(FILLER_REDEFINE_44);
            sb.append(trnnamec);
            sb.append(trnnamep);
            sb.append(trnnameh);
            sb.append(trnnamev);
            sb.append(trnnameo);
            sb.append(FILLER_REDEFINE_45);
            sb.append(title01c);
            sb.append(title01p);
            sb.append(title01h);
            sb.append(title01v);
            sb.append(title01o);
            sb.append(FILLER_REDEFINE_46);
            sb.append(curdatec);
            sb.append(curdatep);
            sb.append(curdateh);
            sb.append(curdatev);
            sb.append(curdateo);
            sb.append(FILLER_REDEFINE_47);
            sb.append(pgmnamec);
            sb.append(pgmnamep);
            sb.append(pgmnameh);
            sb.append(pgmnamev);
            sb.append(pgmnameo);
            sb.append(FILLER_REDEFINE_48);
            sb.append(title02c);
            sb.append(title02p);
            sb.append(title02h);
            sb.append(title02v);
            sb.append(title02o);
            sb.append(FILLER_REDEFINE_49);
            sb.append(curtimec);
            sb.append(curtimep);
            sb.append(curtimeh);
            sb.append(curtimev);
            sb.append(curtimeo);
            sb.append(FILLER_REDEFINE_50);
            sb.append(acctsidc);
            sb.append(acctsidp);
            sb.append(acctsidh);
            sb.append(acctsidv);
            sb.append(acctsido);
            sb.append(FILLER_REDEFINE_51);
            sb.append(cardsidc);
            sb.append(cardsidp);
            sb.append(cardsidh);
            sb.append(cardsidv);
            sb.append(cardsido);
            sb.append(FILLER_REDEFINE_52);
            sb.append(crdnamec);
            sb.append(crdnamep);
            sb.append(crdnameh);
            sb.append(crdnamev);
            sb.append(crdnameo);
            sb.append(FILLER_REDEFINE_53);
            sb.append(crdstcdc);
            sb.append(crdstcdp);
            sb.append(crdstcdh);
            sb.append(crdstcdv);
            sb.append(crdstcdo);
            sb.append(FILLER_REDEFINE_54);
            sb.append(expmonc);
            sb.append(expmonp);
            sb.append(expmonh);
            sb.append(expmonv);
            sb.append(expmono);
            sb.append(FILLER_REDEFINE_55);
            sb.append(expyearc);
            sb.append(expyearp);
            sb.append(expyearh);
            sb.append(expyearv);
            sb.append(expyearo);
            sb.append(FILLER_REDEFINE_56);
            sb.append(expdayc);
            sb.append(expdayp);
            sb.append(expdayh);
            sb.append(expdayv);
            sb.append(expdayo);
            sb.append(FILLER_REDEFINE_57);
            sb.append(infomsgc);
            sb.append(infomsgp);
            sb.append(infomsgh);
            sb.append(infomsgv);
            sb.append(infomsgo);
            sb.append(FILLER_REDEFINE_58);
            sb.append(errmsgc);
            sb.append(errmsgp);
            sb.append(errmsgh);
            sb.append(errmsgv);
            sb.append(errmsgo);
            sb.append(FILLER_REDEFINE_59);
            sb.append(fkeysc);
            sb.append(fkeysp);
            sb.append(fkeysh);
            sb.append(fkeysv);
            sb.append(fkeyso);
            sb.append(FILLER_REDEFINE_60);
            sb.append(fkeyscc);
            sb.append(fkeyscp);
            sb.append(fkeysch);
            sb.append(fkeyscv);
            sb.append(fkeysco);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(FILLER_REDEFINE_43);
            sb.append(FILLER_REDEFINE_44);
            sb.append(getTrnnamec());
            sb.append(getTrnnamep());
            sb.append(getTrnnameh());
            sb.append(getTrnnamev());
            sb.append(getTrnnameo());
            sb.append(FILLER_REDEFINE_45);
            sb.append(getTitle01c());
            sb.append(getTitle01p());
            sb.append(getTitle01h());
            sb.append(getTitle01v());
            sb.append(getTitle01o());
            sb.append(FILLER_REDEFINE_46);
            sb.append(getCurdatec());
            sb.append(getCurdatep());
            sb.append(getCurdateh());
            sb.append(getCurdatev());
            sb.append(getCurdateo());
            sb.append(FILLER_REDEFINE_47);
            sb.append(getPgmnamec());
            sb.append(getPgmnamep());
            sb.append(getPgmnameh());
            sb.append(getPgmnamev());
            sb.append(getPgmnameo());
            sb.append(FILLER_REDEFINE_48);
            sb.append(getTitle02c());
            sb.append(getTitle02p());
            sb.append(getTitle02h());
            sb.append(getTitle02v());
            sb.append(getTitle02o());
            sb.append(FILLER_REDEFINE_49);
            sb.append(getCurtimec());
            sb.append(getCurtimep());
            sb.append(getCurtimeh());
            sb.append(getCurtimev());
            sb.append(getCurtimeo());
            sb.append(FILLER_REDEFINE_50);
            sb.append(getAcctsidc());
            sb.append(getAcctsidp());
            sb.append(getAcctsidh());
            sb.append(getAcctsidv());
            sb.append(getAcctsido());
            sb.append(FILLER_REDEFINE_51);
            sb.append(getCardsidc());
            sb.append(getCardsidp());
            sb.append(getCardsidh());
            sb.append(getCardsidv());
            sb.append(getCardsido());
            sb.append(FILLER_REDEFINE_52);
            sb.append(getCrdnamec());
            sb.append(getCrdnamep());
            sb.append(getCrdnameh());
            sb.append(getCrdnamev());
            sb.append(getCrdnameo());
            sb.append(FILLER_REDEFINE_53);
            sb.append(getCrdstcdc());
            sb.append(getCrdstcdp());
            sb.append(getCrdstcdh());
            sb.append(getCrdstcdv());
            sb.append(getCrdstcdo());
            sb.append(FILLER_REDEFINE_54);
            sb.append(getExpmonc());
            sb.append(getExpmonp());
            sb.append(getExpmonh());
            sb.append(getExpmonv());
            sb.append(getExpmono());
            sb.append(FILLER_REDEFINE_55);
            sb.append(getExpyearc());
            sb.append(getExpyearp());
            sb.append(getExpyearh());
            sb.append(getExpyearv());
            sb.append(getExpyearo());
            sb.append(FILLER_REDEFINE_56);
            sb.append(getExpdayc());
            sb.append(getExpdayp());
            sb.append(getExpdayh());
            sb.append(getExpdayv());
            sb.append(getExpdayo());
            sb.append(FILLER_REDEFINE_57);
            sb.append(getInfomsgc());
            sb.append(getInfomsgp());
            sb.append(getInfomsgh());
            sb.append(getInfomsgv());
            sb.append(getInfomsgo());
            sb.append(FILLER_REDEFINE_58);
            sb.append(getErrmsgc());
            sb.append(getErrmsgp());
            sb.append(getErrmsgh());
            sb.append(getErrmsgv());
            sb.append(getErrmsgo());
            sb.append(FILLER_REDEFINE_59);
            sb.append(getFkeysc());
            sb.append(getFkeysp());
            sb.append(getFkeysh());
            sb.append(getFkeysv());
            sb.append(getFkeyso());
            sb.append(FILLER_REDEFINE_60);
            sb.append(getFkeyscc());
            sb.append(getFkeyscp());
            sb.append(getFkeysch());
            sb.append(getFkeyscv());
            sb.append(getFkeysco());
            return sb.toString();
        }
    }
}
